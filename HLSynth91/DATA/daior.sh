
#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of shell archive."
# Contents:  daio_receiver/daio_receiver.hc
#   daio_receiver/daio_receiver.pat daio_receiver/daio_receiver.mon
#   daio_receiver/daio_receiver.sif
#   daio_receiver/daio_receiver.out.gold
# Wrapped by synthesis@sirius on Thu Jul 26 17:13:31 1990
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'daio_receiver/daio_receiver.hc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'daio_receiver/daio_receiver.hc'\"
else
echo shar: Extracting \"'daio_receiver/daio_receiver.hc'\" \(9356 characters\)
sed "s/^X//" >'daio_receiver/daio_receiver.hc' <<'END_OF_FILE'
X/*
X*  Author:	Rajesh Gupta
X*  Revised:	1990-05-24
X*  Comment:    Based on daio_receiver.hc by Thomas Truong
X*/
X
X/*
X
X  This benchmark is a description of the receiver section used in
Xthe Digital Audio Input-Output chip (DAIO). A detailed description
Xof this chip can be found in:
X
X	M. M. Ligthard, A. Bechtolsheim, G. D. Micheli, A. El Gamal
X	``Design of a Digital Input Output Chip'', Custom IC Conference,
X	May 1989.
X
X
XBRIEF DESCRIPTION:
X	
X	DAIO facilitates transfer of data between a personal computer
Xand a CD or DAT player. DAIO is a full duplex, fully symmetrical interface
Xchip for the reception and transmission of digital audio signals. Receive
Xin this context is defined as the data flow from the digial audio device
Xto the uP bus and transmit is defined as the data flow the other way around.
X 
X	DAIO divided into two parts: a receive section
Xwhich transfers data from a CD player to the PC and a transmit section
Xwhich sends data from a PC to a CD recoder (or other recorder that 
Xadheres to the AES protocol). The receive section consists of two
Xparts:
X	
X	phase decoder: its main functions are -
X		- detect start of the digital audio transmission
X		- synchronize the bit-clock to match the data rate
X		- decode the data and transmit it to the receive
X		  	register and buffer
X	
X	The phase decoder waits for a transition inthe biphase signal
X	and starts looking for a 'start of block' preamble. The preambles
X	and actual bit values are extracted from the biphase signal by 
X	means of counting samples in a ten bits wide window. 
X
X	receiver: (this description)
X
X	briefly, this portion shifts in extracted bits in to a 20-bit
X	register. After a frame is assembled the receiver signal the
X	host to read the register by raising 'load' signals. 
X
X
X*  Main Process daio_receiver() 
X*
X*  Inputs:
X*	xtal[0:3]		: clocks.
X*	rx_control[0:3]      	: control inputs.
X*				   [0:1]  - clock select
X*				    [2]   - receiver enable
X*			            [3]   - parity enable
X*      reset        		: global reset.
X*      bit_in       		: extracted bit value from biphase signal.
X*      preamble_1     		: start of block.
X*      preamble_2	        : start of subframe_A.
X*      preamble_3              : start of subframe_B.
X*      carrier_loss 		: too many violations --> lost carrier.
X*	biphase_violation	: no transition between bits.
X* Outputs:
X*	clock_out		: clock selected from xtal[0:3].
X*      rx_status[0:3] 		: status outputs.
X*				   [0] - carrier_loss
X*			  	   [1] - biphase_violation
X*			  	   [2] - sync_problem
X*				   [3] - parity_error
X*      parity			: parity of current subframe.
X*      load_A       		: parallel load of subframe_A from shift_reg.
X*      load_B       		: parallel load of subframe_B from shift_reg.
X*      load_buff     		: paralell load of register_bank into buffer.
X*	shift_reg		: storage of last 20 bits from phase_decoder.
X*      frame_ofs		: last 2 bits of frame counter.
X
X
XNOTES ON IMPLEMENTATION:
X
X	every assignment into a register takes a cycle
X	every read(sample) takes a cycle.
X*
X*/
X
X
X/*
Xset lsb_to_msb on 	 b[0:7] = 0b01000000 = 2 
X*/
X
Xprocess daio_receiver(xtal,rx_control,reset,bit_in,
X		      preamble_1,preamble_2,preamble_3,
X		      carrier_loss,biphase_violation,
X	 	      clock_out,rx_status,parity,load_A,load_B,load_buff,
X		      shift_reg,frame_ofs, peek_A, peek_B)
X
X	in port xtal[4];		/* clocks */
X	in port rx_control[4];		/* control inputs */
X	in port reset;			/* global reset */
X	in port bit_in;			/* extracted bit from biphase */
X	in port preamble_1;		/* start of block */
X	in port preamble_2;		/* start of subframe_A */
X	in port preamble_3;		/* start of subframe_B */
X	in port carrier_loss;		/* too many biphase violations */
X	in port biphase_violation;	/* no transition at end of bit */
X	
X	out port clock_out;		/* clock selected from xtal */
X	out port rx_status[4];		/* status outputs */
X	out port parity;		/* parity of current subframe */
X	out port load_A;		/* load subframe_A from shift_reg */
X	out port load_B;		/* load subframe_B from shift_reg */
X	out port load_buff;		/* load register bank into buffer */
X	out port shift_reg[20];		/* last 20 bits from phase_decoder */
X	out port frame_ofs[2];		/* last 2 bits of frame counter */
X	
X	out port peek_A[7];
X	out port peek_B[7];
X
X{
X
X	static bit_count_A[7] = 0;	
X	static bit_count_B[7] = 0;
X	static frame_counter[9] = 0;
X	
X	static int_clock_out;
X	static int_rx_status[4] = 0;
X	static int_parity = 0;
X	static int_load_A = 0;
X	static int_load_B = 0;
X	static int_load_buff = 0;
X	static int_shift_reg[20] = 0;
X
X
X/*
X *  output reflects the values contained in static variables
X *  the following establishes all the direct connections
X */
X	clock_out = int_clock_out;
X	rx_status = int_rx_status;
X	parity = int_parity;
X	load_A = int_load_A;
X	load_B = int_load_B;
X	load_buff = int_load_buff;
X	shift_reg = int_shift_reg;
X	frame_ofs[0:1] = frame_counter[0:1];
X
X	peek_A = bit_count_A;
X	peek_B = bit_count_B;
X
X	if ( reset ) {
X		int_rx_status = 0;
X		int_parity = 0;
X		int_load_A = 0;
X		int_load_B = 0;
X		int_load_buff = 0;
X		int_shift_reg = 0;
X		bit_count_A = 0;
X		bit_count_B = 0;
X		frame_counter = 0;
X	} else [
X		while ( rx_control[2:2] == 0); 	/* wait for enable */
X		while ( !reset ) [
X
X	  		switch(rx_control[0:1]) {
X
X			case 0b00:
X				int_clock_out = xtal[0:0];
X				break;
X			case 0b10:
X				int_clock_out = xtal[1:1];
X				break;
X			case 0b01:
X				int_clock_out = xtal[2:2];
X				break;
X			case 0b11:
X				int_clock_out = xtal[3:3];
X				break;
X			}
X
X		/* checking for start of block - preamble_1 */
X
X		if ( preamble_1 ) {
X			int_parity = 0;
X
X			/* preamble_1 comes after 4 bits */
X			bit_count_A = 4;
X
X			/* save a bit in the same cycle */
X			int_shift_reg = int_shift_reg << 1;
X			int_shift_reg[0:0] = bit_in;
X			if ( bit_in == 1 ) 
X				int_parity = !(int_parity);
X
X			while ( bit_count_A < 32 ) {
X
X				int_shift_reg = int_shift_reg << 1;
X				int_shift_reg[0:0] = bit_in;
X				if ( bit_in == 1 ) 
X					int_parity = !(int_parity);
X
X				if ( carrier_loss )
X					int_rx_status[0:0] = 1; 
X				if ( biphase_violation ) 
X					int_rx_status[1:1] = 1;
X
X				/* load_A at end of subframe */
X				if ( bit_count_A == 31 )  
X					int_load_A = 1;
X
X				/* end of pulse on load_B */
X				if ( bit_count_A == 2 )   
X					int_load_B = 0;
X
X		/* 
X		 *  if we have 4 full frames we have to activate load_buff 
X		 */
X				if ( bit_count_A == 3 )
X					int_load_buff = 1;
X				if ( bit_count_A == 5 )
X					int_load_buff = 0;
X
X				bit_count_A++;
X
X			} /* end while */
X
X			int_parity = 0;
X	    		bit_count_B = 1;
X
X			/* update the frame counter too in the same cycle */
X			frame_counter = 1;
X
X			/* sample a bit too in the load cycle */
X			int_shift_reg = int_shift_reg << 1;
X			int_shift_reg[0:0] = bit_in;
X			if ( bit_in == 1 ) 
X				int_parity = !(int_parity);
X
X			/* continue with subframe B */
X			while ( bit_count_B < 32 ) {
X				int_shift_reg = int_shift_reg << 1;
X				int_shift_reg[0:0] = bit_in;
X				if ( bit_in == 1 ) 
X					int_parity = !(int_parity);
X
X				if ( carrier_loss )
X					int_rx_status[0:0] = 1; 
X				if ( biphase_violation ) 
X					int_rx_status[1:1] = 1;
X
X				if ( (bit_count_B == 4) & (preamble_3 == 0) )
X					int_rx_status[2:2] = 1; 
X
X				/* load_B at end of subframe */
X				if ( bit_count_B == 31 )  
X					int_load_B = 1;
X
X				/* end of pulse on load_A */
X				if ( bit_count_B == 2 )   
X					int_load_A = 0;
X
X				bit_count_B++;
X
X			} /* end while */
X
X			while ( frame_counter < 191 ) {
X				int_parity = 0;
X				bit_count_A = 1;
X
X				int_shift_reg = int_shift_reg << 1;
X				int_shift_reg[0:0] = bit_in;
X				if ( bit_in == 1 ) 
X				int_parity = !int_parity;
X
X				/* subframe A */
X				while ( bit_count_A < 32 ) {
X					int_shift_reg = int_shift_reg << 1;
X					int_shift_reg[0:0] = bit_in;
X					if ( bit_in == 1 ) 
X  						int_parity = !(int_parity);
X					if ( carrier_loss )
X  						int_rx_status[0:0] = 1; 
X					if ( biphase_violation ) 
X  						int_rx_status[1:1] = 1;
X					if ( (bit_count_A == 4) & (preamble_2 == 0) )
X  						int_rx_status[2:2] = 1;
X					
X					/* load_A at end of subframe */
X					if ( bit_count_A == 31 )  
X						int_load_A = 1;
X
X					/* end of pulse on load_B */
X					if ( bit_count_A == 2 )   
X  						int_load_B = 0;
X
X		/* if we have 4 full frames we have to activate load_buff */
X					if ( bit_count_A == 3 ) {
X   						if ( frame_counter[0:1] == 0 )
X     							int_load_buff = 1;
X					}
X					if ( bit_count_A == 5 )
X  						int_load_buff = 0;
X
X					bit_count_A++;
X
X				} /* end while */
X
X				int_parity = 0;
X				bit_count_B = 1;
X
X				int_shift_reg = int_shift_reg << 1;
X				int_shift_reg[0:0] = bit_in;
X				if ( bit_in == 1 ) 
X					int_parity = !int_parity;
X
X				/* subframe B */
X				while ( bit_count_B < 32 ) {
X					int_shift_reg = int_shift_reg << 1;
X					int_shift_reg[0:0] = bit_in;
X					if ( bit_in == 1 ) 
X  						int_parity = !(int_parity);
X
X					if ( carrier_loss )
X  						int_rx_status[0:0] = 1; 
X					if ( biphase_violation ) 
X  						int_rx_status[1:1] = 1;
X					if ( (bit_count_B == 4) & (preamble_3 == 0) )
X  						int_rx_status[2:2] = 1; 
X
X					/* load_B at end of subframe */
X					if ( bit_count_B == 31 )  
X  						int_load_B = 1;
X
X					/* end of pulse on load_A */
X					if ( bit_count_B == 2 )   
X  						int_load_A = 0;
X
X					bit_count_B++;
X
X				} /* end while */
X
X			frame_counter++;
X
X			} /* end while ( frame_counter < 191 ) */
X		} /* end if ( preamble_1 ) */
X
X	] /* end while ( !reset ) */
X
X	] /* end else if ( !reset ) */
X}
END_OF_FILE
if test 9356 -ne `wc -c <'daio_receiver/daio_receiver.hc'`; then
    echo shar: \"'daio_receiver/daio_receiver.hc'\" unpacked with wrong size!
fi
# end of 'daio_receiver/daio_receiver.hc'
fi
if test -f 'daio_receiver/daio_receiver.pat' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'daio_receiver/daio_receiver.pat'\"
else
echo shar: Extracting \"'daio_receiver/daio_receiver.pat'\" \(31442 characters\)
sed "s/^X//" >'daio_receiver/daio_receiver.pat' <<'END_OF_FILE'
X# daio_receiver.pat: input pattern file for ARIADNE and MERCURY simulations
X#
X.inputs CLK EN RESET xtal[0:0] xtal[1:1] xtal[2:2] xtal[3:3] rx_control[0:0] rx_control[1:1] rx_control[2:2] rx_control[3:3] reset[0:0] bit_in[0:0] preamble_1[0:0] preamble_2[0:0] preamble_3[0:0] carrier_loss[0:0] biphase_violation[0:0] ;
X
X#.clocks CLK ;
X
X#
X#CLK;
X#EN;
X#|RESET;
X#||xtal[0:0];
X#|||xtal[1:1];
X#||||xtal[2:2];
X#|||||xtal[3:3];
X#||||||rx_control[0:0];
X#|||||||rx_control[1:1];
X#||||||||rx_control[2:2];
X#|||||||||rx_control[3:3];
X#||||||||||reset[0:0];
X#|||||||||||bit_in[0:0];
X#||||||||||||preamble_1[0:0];
X#|||||||||||||preamble_2[0:0];
X#||||||||||||||preamble_3[0:];
X#|||||||||||||||carrier_loss[0:0];
X#||||||||||||||||biphase_violation[0:0];
X#||||||||||||||||| ;
X01 0000000000000000 ;
X11 0100000000000000 ;
X01 0000000000000000 ;
X11 0100000000000000 ;
X01 0000000000000000 ;
X11 0100000000000000 ;
X01 0000000000000000 ;
X11 0100000000000000 ;
X01 0000000000000000 ;
X11 0100000000000000 ;
X# Enable Receiver;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# Reset Signal;
X01 1000000111000000 ;
X11 1100000111000000 ;
X01 1000000111000000 ;
X11 1100000111000000 ;
X01 1000000111000000 ;
X11 1100000111000000 ;
X# Random Values;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Beginning of Block -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110010000 ;
X11 0100000110010000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# ** Frame 2 **; 
X# Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# ** Frame 3 **; 
X# Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# ** Frame 4 **; 
X# Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# ** Frame 5 **; 
X# Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X# Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X# ** Frame 6 **; 
X# Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#   Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#  Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X010000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#  ** Frame 7 **; 
X#  Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#  Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#  ** Frame 8 **; 
X#  Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#   Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#  Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#  ** Frame 9 **; 
X#  Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#  Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#   Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#  ** Frame 10 **; 
X#  Subframe A -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110101000 ;
X11 0100000110101000 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#  Subframe B -- Preamble; 
X01 0000000110000001 ;
X11 0100000110000001 ;
X01 0000000110100001 ;
X11 0100000110100001 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000100 ;
X11 0100000110000100 ;
X#    Discard Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Data Bits;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X#    Control Bits;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110100000 ;
X11 0100000110100000 ;
X01 0000000110000000 ;
X11 0100000110000000 ;
END_OF_FILE
if test 31442 -ne `wc -c <'daio_receiver/daio_receiver.pat'`; then
    echo shar: \"'daio_receiver/daio_receiver.pat'\" unpacked with wrong size!
fi
# end of 'daio_receiver/daio_receiver.pat'
fi
if test -f 'daio_receiver/daio_receiver.mon' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'daio_receiver/daio_receiver.mon'\"
else
echo shar: Extracting \"'daio_receiver/daio_receiver.mon'\" \(1461 characters\)
sed "s/^X//" >'daio_receiver/daio_receiver.mon' <<'END_OF_FILE'
Xreset[0:0]
XHEX xtal xtal[0:0] xtal[1:1] xtal[2:2] xtal[3:3]
XHEX rx_control rx_control[0:0] rx_control[1:1] rx_control[2:2] rx_control[3:3]
XHEX rx_status rx_status[0:0] rx_status[1:1] rx_status[2:2] rx_status[3:3]
Xpreamble_1[0:0]
Xpreamble_2[0:0]
Xpreamble_3[0:0]
Xcarrier_loss[0:0]
Xbiphase_violation[0:0]
Xclock_out[0:0]
Xparity[0:0]
Xload_A[0:0]
Xload_B[0:0]
Xload_buff[0:0]
Xbit_in[0:0]
Xshift_reg[0:0]
Xshift_reg[1:1]
Xshift_reg[2:2]
Xshift_reg[3:3]
Xshift_reg[4:4]
Xshift_reg[5:5]
Xshift_reg[6:6]
Xshift_reg[7:7]
Xshift_reg[8:8]
Xshift_reg[9:9]
Xshift_reg[10:10]
Xshift_reg[11:11]
Xshift_reg[12:12]
Xshift_reg[13:13]
Xshift_reg[14:14]
Xshift_reg[15:15]
Xshift_reg[16:16]
Xshift_reg[17:17]
Xshift_reg[18:18]
Xshift_reg[19:19]
XHEX peek_A0 peek_A[0:0] peek_A[1:1] peek_A[2:2] peek_A[3:3]
XOCT peek_A1 peek_A[4:4] peek_A[5:5] peek_A[6:6]
XHEX bit_count_A0 bit_count_A[0:0] bit_count_A[1:1] bit_count_A[2:2] bit_count_A[3:3]
XOCT bit_count_A1 bit_count_A[4:4] bit_count_A[5:5] bit_count_A[6:6]
XHEX peek_B0 peek_B[0:0] peek_B[1:1] peek_B[2:2] peek_B[3:3]
XOCT peek_B1 peek_B[4:4] peek_B[5:5] peek_B[6:6]
XHEX bit_count_B0 bit_count_B[0:0] bit_count_B[1:1] bit_count_B[2:2] bit_count_B[3:3]
XOCT bit_count_B1 bit_count_B[4:4] bit_count_B[5:5] bit_count_B[6:6]
XHEX frame_counter0 frame_counter[0:0] frame_counter[1:1] frame_counter[2:2] frame_counter[3:3]
XHEX frame_counter1 frame_counter[4:4] frame_counter[5:5] frame_counter[6:6] frame_counter[7:7]
Xframe_counter[8:8]
Xframe_ofs[0:0]
Xframe_ofs[1:1]
END_OF_FILE
if test 1461 -ne `wc -c <'daio_receiver/daio_receiver.mon'`; then
    echo shar: \"'daio_receiver/daio_receiver.mon'\" unpacked with wrong size!
fi
# end of 'daio_receiver/daio_receiver.mon'
fi
if test -f 'daio_receiver/daio_receiver.sif' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'daio_receiver/daio_receiver.sif'\"
else
echo shar: Extracting \"'daio_receiver/daio_receiver.sif'\" \(96602 characters\)
sed "s/^X//" >'daio_receiver/daio_receiver.sif' <<'END_OF_FILE'
X#
X#	Sif model daio_receiver	Printed Tue Jul 24 15:05:03 1990
X#
X.model daio_receiver sequencing process; 
X  .inputs port xtal[4] port rx_control[4] port reset port bit_in 
X	port preamble_1 port preamble_2 port preamble_3 port carrier_loss 
X	port biphase_violation ;
X  .outputs port clock_out port rx_status[4] port parity port load_A 
X	port load_B port load_buff port shift_reg[20] port frame_ofs[2] 
X	port peek_A[7] port peek_B[7] ;
X    #	Index 1
X    .polargraph 1 5;
X    .variable M9[7] M10[7] M11[9] M12[4] 
X	X58 X57 X56 X55 
X	M13[20] X34 T48[10] T84[8] 
X	X29 X30 X31 X28 
X	X33 X32 M8[20] T86 
X	X27 M7[20] T46 T68[8] 
X	X19 X20 X21 X18 
X	X22 X23 X26 M6[20] 
X	T70 X17 M5[20] T45 
X	T88 T42[8] X12 X13 
X	X14 X11 X16 X15 
X	M4[20] T44 X10 M3[20] 
X	T11 T26[8] X4 X5 
X	X3 X6 X7 X9 
X	M2[20] T28 X1 X2 
X	M1[20] T10 T6[2] T9 
X	T8 T3 T5 T2 
X	T1 ;
X    .variable register int_shift_reg[20] (0b00000000000000000000 ) register int_load_buff (0b0 ) register int_load_B (0b0 ) register int_load_A (0b0 ) 
X	register int_parity (0b0 ) register int_rx_status[4] (0b0000 ) register int_clock_out register frame_counter[9] (0b000000000 ) 
X	register bit_count_B[7] (0b0000000 ) register bit_count_A[7] (0b0000000 ) ;
X    #	5 nodes
X    .node 1 nop;	#	source node
X      .successors 2 ;
X    .endnode;
X
X    .node 2 cond;
X      .successors 3 ;	#  predecessors 1 
X      .cond reset[0:0] T1[0:0] ;	#	Latched
X      .case 1 ;
X        #	Index 2
X        .polargraph 1 2;
X        #	2 nodes
X        .node 1 nop;	#	source node
X          .successors 2 ;
X        .endnode;
X
X        .node 2 nop;	#	sink node
X          .successors ;	#  predecessors 1 
X        .endnode;
X
X        .endpolargraph;
X      .endcase;
X      .case 0 ;
X        #	Index 3
X        .polargraph 1 5;
X        #	5 nodes
X        .node 1 nop;	#	source node
X          .successors 2 ;
X        .endnode;
X
X        .node 2 operation;
X          .inputs rx_control[2:2] reset[0:0] ;
X          .outputs T2[0:0] T3[0:0] ;
X          .successors 3 ;	#  predecessors 1 
X          .operation logic 1 ;
X            #	Expression 0
X            T2[0:0] = V0_rx_control_2_2[0:0] ;
X            T3[0:0] = reset[0:0]' ;
X            V0_rx_control_2_2[0:0] = rx_control[2:2]' ;
X            .attribute delay 0 level;
X            .attribute area 3 literal;
X          .endoperation;
X        .endnode;
X
X        .node 3 cond;
X          .successors 4 ;	#  predecessors 2 
X          .cond T2[0:0] ;	#	Latched
X          .case 1 ;
X            #	Index 4
X            .polargraph 1 3;
X            #	3 nodes
X            .node 1 nop;	#	source node
X              .successors 2 ;
X            .endnode;
X
X            .node 2 loop;
X              .successors 3 ;	#  predecessors 1 
X              .loop T5[0:0] ;	#	
X                #	Index 5
X                .polargraph 1 3;
X                #	3 nodes
X                .node 1 nop;	#	source node
X                  .successors 2 ;
X                .endnode;
X
X                .node 2 operation;
X                  .inputs rx_control[2:2] ;
X                  .outputs T5[0:0] ;
X                  .successors 3 ;	#  predecessors 1 
X                  .operation logic 2 ;
X                    #	Expression 0
X                    T4[0:0] = V0_rx_control_2_2[0:0] ;
X                    T5[0:0] = T4[0:0]' ;
X                    V0_rx_control_2_2[0:0] = rx_control[2:2]' ;
X                    .attribute delay 0 level;
X                    .attribute area 3 literal;
X                  .endoperation;
X                .endnode;
X
X                .node 3 nop;	#	sink node
X                  .successors ;	#  predecessors 2 
X                .endnode;
X
X                .endpolargraph;
X              .endloop;
X            .endnode;
X
X            .node 3 nop;	#	sink node
X              .successors ;	#  predecessors 2 
X            .endnode;
X
X            .endpolargraph;
X          .endcase;
X          .case 0 ;
X            #	Index 6
X            .polargraph 1 2;
X            #	2 nodes
X            .node 1 nop;	#	source node
X              .successors 2 ;
X            .endnode;
X
X            .node 2 nop;	#	sink node
X              .successors ;	#  predecessors 1 
X            .endnode;
X
X            .endpolargraph;
X          .endcase;
X          .endcond;
X        .endnode;
X
X        .node 4 cond;
X          .successors 5 ;	#  predecessors 3 
X          .cond T3[0:0] ;	#	Latched
X          .case 1 ;
X            #	Index 7
X            .polargraph 1 3;
X            #	3 nodes
X            .node 1 nop;	#	source node
X              .successors 2 ;
X            .endnode;
X
X            .node 2 loop;
X              .successors 3 ;	#  predecessors 1 
X              .loop T8[0:0] ;	#	
X                #	Index 8
X                .polargraph 1 5;
X                #	5 nodes
X                .node 1 nop;	#	source node
X                  .successors 2 ;
X                .endnode;
X
X                .node 2 operation;
X                  .inputs rx_control[0:0] rx_control[1:1] reset[0:0] ;
X                  .outputs T6[0:0] T6[1:1] T8[0:0] ;
X                  .successors 3 ;	#  predecessors 1 
X                  .operation logic 3 ;
X                    #	Expression 0
X                    T6[0:0] = rx_control[0:0] ;
X                    T6[1:1] = rx_control[1:1] ;
X                    T7[0:0] = reset[0:0]' ;
X                    T8[0:0] = T7[0:0]' ;
X                    .attribute delay 0 level;
X                    .attribute area 4 literal;
X                  .endoperation;
X                .endnode;
X
X                .node 3 cond;
X                  .successors 4 ;	#  predecessors 2 
X                  .cond preamble_1[0:0] T9[0:0] ;	#	Latched
X                  .case 1 ;
X                    #	Index 9
X                    .polargraph 1 10;
X                    #	10 nodes
X                    .node 1 nop;	#	source node
X                      .successors 2 ;
X                    .endnode;
X
X                    .node 2 operation;
X                      .inputs bit_in[0:0] ;
X                      .outputs T10[0:0] T11[0:0] ;
X                      .successors 3 ;	#  predecessors 1 
X                      .operation logic 4 ;
X                        #	Expression 0
X                        T12[0:0] = V1_bit_in_0_0[0:0] ;
X                        T10[0:0] = T12[0:0] ;
X                        T11[0:0] = T12[0:0] ;
X                        V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                        .attribute delay 0 level;
X                        .attribute area 4 literal;
X                      .endoperation;
X                    .endnode;
X
X                    .node 3 operation;
X                      .inputs int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] T6[0:0] 
X	T6[1:1] xtal[0:0] xtal[1:1] xtal[2:2] 
X	xtal[3:3] T10[0:0] ;
X                      .outputs M1[1:1] M1[2:2] M1[3:3] M1[4:4] 
X	M1[5:5] M1[6:6] M1[7:7] M1[8:8] 
X	M1[9:9] M1[10:10] M1[11:11] M1[12:12] 
X	M1[13:13] M1[14:14] M1[15:15] M1[16:16] 
X	M1[17:17] M1[18:18] M1[19:19] X1[0:0] 
X	X2[0:0] ;
X                      .successors 4 ;	#  predecessors 2 
X                      .operation logic 5 ;
X                        #	Expression 0
X                        M1[0:0] =  0 ;
X                        M1[1:1] = int_shift_reg[0:0] ;
X                        M1[2:2] = int_shift_reg[1:1] ;
X                        M1[3:3] = int_shift_reg[2:2] ;
X                        M1[4:4] = int_shift_reg[3:3] ;
X                        M1[5:5] = int_shift_reg[4:4] ;
X                        M1[6:6] = int_shift_reg[5:5] ;
X                        M1[7:7] = int_shift_reg[6:6] ;
X                        M1[8:8] = int_shift_reg[7:7] ;
X                        M1[9:9] = int_shift_reg[8:8] ;
X                        M1[10:10] = int_shift_reg[9:9] ;
X                        M1[11:11] = int_shift_reg[10:10] ;
X                        M1[12:12] = int_shift_reg[11:11] ;
X                        M1[13:13] = int_shift_reg[12:12] ;
X                        M1[14:14] = int_shift_reg[13:13] ;
X                        M1[15:15] = int_shift_reg[14:14] ;
X                        M1[16:16] = int_shift_reg[15:15] ;
X                        M1[17:17] = int_shift_reg[16:16] ;
X                        M1[18:18] = int_shift_reg[17:17] ;
X                        M1[19:19] = int_shift_reg[18:18] ;
X                        X1[0:0] = ((((V00_T6_0_1[0:0]  xtal[0:0] )+(V01_T6_0_1[0:0]  xtal[1:1] ))+(V10_T6_0_1[0:0]  xtal[2:2] ))+(V11_T6_0_1[0:0]  xtal[3:3] ));
X                        X2[0:0] = (V1_T10_0_0[0:0] + 0 );
X                        V1_T10_0_0[0:0] = T10[0:0] ;
X                        V11_T6_0_1[0:0] = (T6[0:0]  T6[1:1] );
X                        V10_T6_0_1[0:0] = (T6[0:0]  T6[1:1]' );
X                        V01_T6_0_1[0:0] = (T6[0:0]'  T6[1:1] );
X                        V00_T6_0_1[0:0] = (T6[0:0]'  T6[1:1]' );
X                        .attribute delay 5 level;
X                        .attribute area 51 literal;
X                      .endoperation;
X                    .endnode;
X
X                    .node 4 operation;
X                      .inputs M1[19:19] M1[18:18] M1[17:17] M1[16:16] 
X	M1[15:15] M1[14:14] M1[13:13] M1[12:12] 
X	M1[11:11] M1[10:10] M1[9:9] M1[8:8] 
X	M1[7:7] M1[6:6] M1[5:5] M1[4:4] 
X	M1[3:3] M1[2:2] M1[1:1] bit_in[0:0] 
X	X2[0:0] X1[0:0] 0b0 0b0 
X	0b0 0b0 0b1 0b0 
X	0b0 ;
X                      .outputs int_shift_reg[19:19] int_shift_reg[18:18] int_shift_reg[17:17] int_shift_reg[16:16] 
X	int_shift_reg[15:15] int_shift_reg[14:14] int_shift_reg[13:13] int_shift_reg[12:12] 
X	int_shift_reg[11:11] int_shift_reg[10:10] int_shift_reg[9:9] int_shift_reg[8:8] 
X	int_shift_reg[7:7] int_shift_reg[6:6] int_shift_reg[5:5] int_shift_reg[4:4] 
X	int_shift_reg[3:3] int_shift_reg[2:2] int_shift_reg[1:1] int_shift_reg[0:0] 
X	int_parity[0:0] int_clock_out[0:0] bit_count_A[6:6] bit_count_A[5:5] 
X	bit_count_A[4:4] bit_count_A[3:3] bit_count_A[2:2] bit_count_A[1:1] 
X	bit_count_A[0:0] ;
X                      .successors 5 ;	#  predecessors 3 
X                      .attribute constraint delay 4 1 cycles;
X                      .operation load_register;
X                    .endnode;
X
X                    .node 5 loop;
X                      .successors 6 ;	#  predecessors 4 
X                      .loop T28[0:0] ;	#	
X                        #	Index 10
X                        .polargraph 1 3;
X                        #	3 nodes
X                        .node 1 nop;	#	source node
X                          .successors 2 ;
X                        .endnode;
X
X                        .node 2 operation;
X                          .inputs bit_in[0:0] int_parity[0:0] carrier_loss[0:0] biphase_violation[0:0] 
X	bit_count_A[0:0] bit_count_A[1:1] bit_count_A[2:2] bit_count_A[3:3] 
X	bit_count_A[4:4] bit_count_A[5:5] bit_count_A[6:6] int_shift_reg[0:0] 
X	int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] int_shift_reg[4:4] 
X	int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] int_shift_reg[8:8] 
X	int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] int_shift_reg[12:12] 
X	int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] int_shift_reg[16:16] 
X	int_shift_reg[17:17] int_shift_reg[18:18] int_rx_status[0:0] int_rx_status[1:1] 
X	int_load_A[0:0] int_load_B[0:0] int_load_buff[0:0] ;
X                          .outputs T26[0:0] T26[1:1] T26[2:2] T26[3:3] 
X	T26[4:4] T26[5:5] T26[6:6] M2[1:1] 
X	M2[2:2] M2[3:3] M2[4:4] M2[5:5] 
X	M2[6:6] M2[7:7] M2[8:8] M2[9:9] 
X	M2[10:10] M2[11:11] M2[12:12] M2[13:13] 
X	M2[14:14] M2[15:15] M2[16:16] M2[17:17] 
X	M2[18:18] M2[19:19] X3[0:0] X4[0:0] 
X	X5[0:0] X6[0:0] X7[0:0] X9[0:0] 
X	T28[0:0] ;
X                          .successors 3 ;	#  predecessors 1 
X                          .operation logic 6 ;
X                            #	Expression 0
X                            T20[0:0] = V1_bit_in_0_0[0:0] ;
X                            T13[0:0] = T20[0:0] ;
X                            T21[0:0] = int_parity[0:0]' ;
X                            T14[0:0] = carrier_loss[0:0] ;
X                            T15[0:0] = biphase_violation[0:0] ;
X                            T22[0:0] = V1111100_bit_count_A_0_6[0:0] ;
X                            T16[0:0] = T22[0:0] ;
X                            T23[0:0] = V0100000_bit_count_A_0_6[0:0] ;
X                            T17[0:0] = T23[0:0] ;
X                            T24[0:0] = V1100000_bit_count_A_0_6[0:0] ;
X                            T18[0:0] = T24[0:0] ;
X                            T25[0:0] = V1010000_bit_count_A_0_6[0:0] ;
X                            T19[0:0] = T25[0:0] ;
X                            c_T26[0:0] =  0 ;
X                            T26[0:0] = (((((bit_count_A[0:0]'   1 ) c_T26[0:0]' )+((bit_count_A[0:0]   1' ) c_T26[0:0]' ))+((bit_count_A[0:0]'   1' ) c_T26[0:0] ))+((bit_count_A[0:0]   1 ) c_T26[0:0] ));
X                            c_T26[1:1] = ((bit_count_A[0:0]   1 )+(c_T26[0:0]  (bit_count_A[0:0] + 1 )));
X                            T26[1:1] = (((((bit_count_A[1:1]'   0 ) c_T26[1:1]' )+((bit_count_A[1:1]   0' ) c_T26[1:1]' ))+((bit_count_A[1:1]'   0' ) c_T26[1:1] ))+((bit_count_A[1:1]   0 ) c_T26[1:1] ));
X                            c_T26[2:2] = ((bit_count_A[1:1]   0 )+(c_T26[1:1]  (bit_count_A[1:1] + 0 )));
X                            T26[2:2] = (((((bit_count_A[2:2]'   0 ) c_T26[2:2]' )+((bit_count_A[2:2]   0' ) c_T26[2:2]' ))+((bit_count_A[2:2]'   0' ) c_T26[2:2] ))+((bit_count_A[2:2]   0 ) c_T26[2:2] ));
X                            c_T26[3:3] = ((bit_count_A[2:2]   0 )+(c_T26[2:2]  (bit_count_A[2:2] + 0 )));
X                            T26[3:3] = (((((bit_count_A[3:3]'   0 ) c_T26[3:3]' )+((bit_count_A[3:3]   0' ) c_T26[3:3]' ))+((bit_count_A[3:3]'   0' ) c_T26[3:3] ))+((bit_count_A[3:3]   0 ) c_T26[3:3] ));
X                            c_T26[4:4] = ((bit_count_A[3:3]   0 )+(c_T26[3:3]  (bit_count_A[3:3] + 0 )));
X                            T26[4:4] = (((((bit_count_A[4:4]'   0 ) c_T26[4:4]' )+((bit_count_A[4:4]   0' ) c_T26[4:4]' ))+((bit_count_A[4:4]'   0' ) c_T26[4:4] ))+((bit_count_A[4:4]   0 ) c_T26[4:4] ));
X                            c_T26[5:5] = ((bit_count_A[4:4]   0 )+(c_T26[4:4]  (bit_count_A[4:4] + 0 )));
X                            T26[5:5] = (((((bit_count_A[5:5]'   0 ) c_T26[5:5]' )+((bit_count_A[5:5]   0' ) c_T26[5:5]' ))+((bit_count_A[5:5]'   0' ) c_T26[5:5] ))+((bit_count_A[5:5]   0 ) c_T26[5:5] ));
X                            c_T26[6:6] = ((bit_count_A[5:5]   0 )+(c_T26[5:5]  (bit_count_A[5:5] + 0 )));
X                            T26[6:6] = (((((bit_count_A[6:6]'   0 ) c_T26[6:6]' )+((bit_count_A[6:6]   0' ) c_T26[6:6]' ))+((bit_count_A[6:6]'   0' ) c_T26[6:6] ))+((bit_count_A[6:6]   0 ) c_T26[6:6] ));
X                            c_T26[7:7] = ((bit_count_A[6:6]   0 )+(c_T26[6:6]  (bit_count_A[6:6] + 0 )));
X                            T26[7:7] = c_T26[6:6] ;
X                            M2[0:0] =  0 ;
X                            M2[1:1] = int_shift_reg[0:0] ;
X                            M2[2:2] = int_shift_reg[1:1] ;
X                            M2[3:3] = int_shift_reg[2:2] ;
X                            M2[4:4] = int_shift_reg[3:3] ;
X                            M2[5:5] = int_shift_reg[4:4] ;
X                            M2[6:6] = int_shift_reg[5:5] ;
X                            M2[7:7] = int_shift_reg[6:6] ;
X                            M2[8:8] = int_shift_reg[7:7] ;
X                            M2[9:9] = int_shift_reg[8:8] ;
X                            M2[10:10] = int_shift_reg[9:9] ;
X                            M2[11:11] = int_shift_reg[10:10] ;
X                            M2[12:12] = int_shift_reg[11:11] ;
X                            M2[13:13] = int_shift_reg[12:12] ;
X                            M2[14:14] = int_shift_reg[13:13] ;
X                            M2[15:15] = int_shift_reg[14:14] ;
X                            M2[16:16] = int_shift_reg[15:15] ;
X                            M2[17:17] = int_shift_reg[16:16] ;
X                            M2[18:18] = int_shift_reg[17:17] ;
X                            M2[19:19] = int_shift_reg[18:18] ;
X                            X3[0:0] = ((V1_T13_0_0[0:0]  T21[0:0] )+(V0_T13_0_0[0:0]  int_parity[0:0] ));
X                            X4[0:0] = (V1_T14_0_0[0:0] +(V0_T14_0_0[0:0]  int_rx_status[0:0] ));
X                            X5[0:0] = (V1_T15_0_0[0:0] +(V0_T15_0_0[0:0]  int_rx_status[1:1] ));
X                            X6[0:0] = (V1_T16_0_0[0:0] +(V0_T16_0_0[0:0]  int_load_A[0:0] ));
X                            X7[0:0] = ( 0 +(V0_T17_0_0[0:0]  int_load_B[0:0] ));
X                            X8[0:0] = (V1_T18_0_0[0:0] +(V0_T18_0_0[0:0]  int_load_buff[0:0] ));
X                            X9[0:0] = ( 0 +(V0_T19_0_0[0:0]  X8[0:0] ));
X                            c_0_T27[0:0] =  0 ;
X                            d_0_T27[0:0] =  1 ;
X                            c_1_T27[0:0] = ((c_0_T27[0:0]  ( 0 +T26[0:0]' ))+(d_0_T27[0:0]  ( 0  T26[0:0]' )));
X                            d_1_T27[0:0] = ((c_0_T27[0:0]  ( 0'  T26[0:0] ))+(d_0_T27[0:0]  ( 0' +T26[0:0] )));
X                            c_2_T27[0:0] = ((c_1_T27[0:0]  ( 0 +T26[1:1]' ))+(d_1_T27[0:0]  ( 0  T26[1:1]' )));
X                            d_2_T27[0:0] = ((c_1_T27[0:0]  ( 0'  T26[1:1] ))+(d_1_T27[0:0]  ( 0' +T26[1:1] )));
X                            c_3_T27[0:0] = ((c_2_T27[0:0]  ( 0 +T26[2:2]' ))+(d_2_T27[0:0]  ( 0  T26[2:2]' )));
X                            d_3_T27[0:0] = ((c_2_T27[0:0]  ( 0'  T26[2:2] ))+(d_2_T27[0:0]  ( 0' +T26[2:2] )));
X                            c_4_T27[0:0] = ((c_3_T27[0:0]  ( 0 +T26[3:3]' ))+(d_3_T27[0:0]  ( 0  T26[3:3]' )));
X                            d_4_T27[0:0] = ((c_3_T27[0:0]  ( 0'  T26[3:3] ))+(d_3_T27[0:0]  ( 0' +T26[3:3] )));
X                            c_5_T27[0:0] = ((c_4_T27[0:0]  ( 0 +T26[4:4]' ))+(d_4_T27[0:0]  ( 0  T26[4:4]' )));
X                            d_5_T27[0:0] = ((c_4_T27[0:0]  ( 0'  T26[4:4] ))+(d_4_T27[0:0]  ( 0' +T26[4:4] )));
X                            c_6_T27[0:0] = ((c_5_T27[0:0]  ( 1 +T26[5:5]' ))+(d_5_T27[0:0]  ( 1  T26[5:5]' )));
X                            d_6_T27[0:0] = ((c_5_T27[0:0]  ( 1'  T26[5:5] ))+(d_5_T27[0:0]  ( 1' +T26[5:5] )));
X                            c_7_T27[0:0] = ((c_6_T27[0:0]  ( 0 +T26[6:6]' ))+(d_6_T27[0:0]  ( 0  T26[6:6]' )));
X                            d_7_T27[0:0] = ((c_6_T27[0:0]  ( 0'  T26[6:6] ))+(d_6_T27[0:0]  ( 0' +T26[6:6] )));
X                            T27[0:0] = c_7_T27[0:0] ;
X                            T28[0:0] = T27[0:0]' ;
X                            V0_T19_0_0[0:0] = T19[0:0]' ;
X                            V0_T18_0_0[0:0] = T18[0:0]' ;
X                            V1_T18_0_0[0:0] = T18[0:0] ;
X                            V0_T17_0_0[0:0] = T17[0:0]' ;
X                            V0_T16_0_0[0:0] = T16[0:0]' ;
X                            V1_T16_0_0[0:0] = T16[0:0] ;
X                            V0_T15_0_0[0:0] = T15[0:0]' ;
X                            V1_T15_0_0[0:0] = T15[0:0] ;
X                            V0_T14_0_0[0:0] = T14[0:0]' ;
X                            V1_T14_0_0[0:0] = T14[0:0] ;
X                            V0_T13_0_0[0:0] = T13[0:0]' ;
X                            V1_T13_0_0[0:0] = T13[0:0] ;
X                            V1010000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1]' ) bit_count_A[2:2] ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                            V1100000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1] ) bit_count_A[2:2]' ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                            V0100000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]'  bit_count_A[1:1] ) bit_count_A[2:2]' ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                            V1111100_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1] ) bit_count_A[2:2] ) bit_count_A[3:3] ) bit_count_A[4:4] ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                            V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                            .attribute delay 20 level;
X                            .attribute area 519 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 3 nop;	#	sink node
X                          .successors ;	#  predecessors 2 
X                        .endnode;
X
X                        .endpolargraph;
X                      .attribute hercules loop_load int_shift_reg[19:19] M2[19:19] ;
X                      .attribute hercules loop_load int_shift_reg[18:18] M2[18:18] ;
X                      .attribute hercules loop_load int_shift_reg[17:17] M2[17:17] ;
X                      .attribute hercules loop_load int_shift_reg[16:16] M2[16:16] ;
X                      .attribute hercules loop_load int_shift_reg[15:15] M2[15:15] ;
X                      .attribute hercules loop_load int_shift_reg[14:14] M2[14:14] ;
X                      .attribute hercules loop_load int_shift_reg[13:13] M2[13:13] ;
X                      .attribute hercules loop_load int_shift_reg[12:12] M2[12:12] ;
X                      .attribute hercules loop_load int_shift_reg[11:11] M2[11:11] ;
X                      .attribute hercules loop_load int_shift_reg[10:10] M2[10:10] ;
X                      .attribute hercules loop_load int_shift_reg[9:9] M2[9:9] ;
X                      .attribute hercules loop_load int_shift_reg[8:8] M2[8:8] ;
X                      .attribute hercules loop_load int_shift_reg[7:7] M2[7:7] ;
X                      .attribute hercules loop_load int_shift_reg[6:6] M2[6:6] ;
X                      .attribute hercules loop_load int_shift_reg[5:5] M2[5:5] ;
X                      .attribute hercules loop_load int_shift_reg[4:4] M2[4:4] ;
X                      .attribute hercules loop_load int_shift_reg[3:3] M2[3:3] ;
X                      .attribute hercules loop_load int_shift_reg[2:2] M2[2:2] ;
X                      .attribute hercules loop_load int_shift_reg[1:1] M2[1:1] ;
X                      .attribute hercules loop_load int_shift_reg[0:0] bit_in[0:0] ;
X                      .attribute hercules loop_load int_load_buff[0:0] X9[0:0] ;
X                      .attribute hercules loop_load int_load_B[0:0] X7[0:0] ;
X                      .attribute hercules loop_load int_load_A[0:0] X6[0:0] ;
X                      .attribute hercules loop_load int_parity[0:0] X3[0:0] ;
X                      .attribute hercules loop_load int_rx_status[1:1] X5[0:0] ;
X                      .attribute hercules loop_load int_rx_status[0:0] X4[0:0] ;
X                      .attribute hercules loop_load int_clock_out[0:0] X1[0:0] ;
X                      .attribute hercules loop_load bit_count_A[6:6] T26[6:6] ;
X                      .attribute hercules loop_load bit_count_A[5:5] T26[5:5] ;
X                      .attribute hercules loop_load bit_count_A[4:4] T26[4:4] ;
X                      .attribute hercules loop_load bit_count_A[3:3] T26[3:3] ;
X                      .attribute hercules loop_load bit_count_A[2:2] T26[2:2] ;
X                      .attribute hercules loop_load bit_count_A[1:1] T26[1:1] ;
X                      .attribute hercules loop_load bit_count_A[0:0] T26[0:0] ;
X                      .endloop;
X                    .endnode;
X
X                    .node 6 operation;
X                      .inputs int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] T11[0:0] 
X	;
X                      .outputs M3[1:1] M3[2:2] M3[3:3] M3[4:4] 
X	M3[5:5] M3[6:6] M3[7:7] M3[8:8] 
X	M3[9:9] M3[10:10] M3[11:11] M3[12:12] 
X	M3[13:13] M3[14:14] M3[15:15] M3[16:16] 
X	M3[17:17] M3[18:18] M3[19:19] X10[0:0] 
X	;
X                      .successors 7 ;	#  predecessors 5 
X                      .operation logic 7 ;
X                        #	Expression 0
X                        M3[0:0] =  0 ;
X                        M3[1:1] = int_shift_reg[0:0] ;
X                        M3[2:2] = int_shift_reg[1:1] ;
X                        M3[3:3] = int_shift_reg[2:2] ;
X                        M3[4:4] = int_shift_reg[3:3] ;
X                        M3[5:5] = int_shift_reg[4:4] ;
X                        M3[6:6] = int_shift_reg[5:5] ;
X                        M3[7:7] = int_shift_reg[6:6] ;
X                        M3[8:8] = int_shift_reg[7:7] ;
X                        M3[9:9] = int_shift_reg[8:8] ;
X                        M3[10:10] = int_shift_reg[9:9] ;
X                        M3[11:11] = int_shift_reg[10:10] ;
X                        M3[12:12] = int_shift_reg[11:11] ;
X                        M3[13:13] = int_shift_reg[12:12] ;
X                        M3[14:14] = int_shift_reg[13:13] ;
X                        M3[15:15] = int_shift_reg[14:14] ;
X                        M3[16:16] = int_shift_reg[15:15] ;
X                        M3[17:17] = int_shift_reg[16:16] ;
X                        M3[18:18] = int_shift_reg[17:17] ;
X                        M3[19:19] = int_shift_reg[18:18] ;
X                        X10[0:0] = (V1_T11_0_0[0:0] + 0 );
X                        V1_T11_0_0[0:0] = T11[0:0] ;
X                        .attribute delay 1 level;
X                        .attribute area 24 literal;
X                      .endoperation;
X                    .endnode;
X
X                    .node 7 operation;
X                      .inputs M3[19:19] M3[18:18] M3[17:17] M3[16:16] 
X	M3[15:15] M3[14:14] M3[13:13] M3[12:12] 
X	M3[11:11] M3[10:10] M3[9:9] M3[8:8] 
X	M3[7:7] M3[6:6] M3[5:5] M3[4:4] 
X	M3[3:3] M3[2:2] M3[1:1] bit_in[0:0] 
X	X10[0:0] 0b0 0b0 0b0 
X	0b0 0b0 0b0 0b0 
X	0b0 0b1 0b0 0b0 
X	0b0 0b0 0b0 0b0 
X	0b1 ;
X                      .outputs int_shift_reg[19:19] int_shift_reg[18:18] int_shift_reg[17:17] int_shift_reg[16:16] 
X	int_shift_reg[15:15] int_shift_reg[14:14] int_shift_reg[13:13] int_shift_reg[12:12] 
X	int_shift_reg[11:11] int_shift_reg[10:10] int_shift_reg[9:9] int_shift_reg[8:8] 
X	int_shift_reg[7:7] int_shift_reg[6:6] int_shift_reg[5:5] int_shift_reg[4:4] 
X	int_shift_reg[3:3] int_shift_reg[2:2] int_shift_reg[1:1] int_shift_reg[0:0] 
X	int_parity[0:0] frame_counter[8:8] frame_counter[7:7] frame_counter[6:6] 
X	frame_counter[5:5] frame_counter[4:4] frame_counter[3:3] frame_counter[2:2] 
X	frame_counter[1:1] frame_counter[0:0] bit_count_B[6:6] bit_count_B[5:5] 
X	bit_count_B[4:4] bit_count_B[3:3] bit_count_B[2:2] bit_count_B[1:1] 
X	bit_count_B[0:0] ;
X                      .successors 8 ;	#  predecessors 6 
X                      .attribute constraint delay 7 1 cycles;
X                      .operation load_register;
X                    .endnode;
X
X                    .node 8 loop;
X                      .successors 9 ;	#  predecessors 7 
X                      .loop T44[0:0] ;	#	
X                        #	Index 11
X                        .polargraph 1 3;
X                        #	3 nodes
X                        .node 1 nop;	#	source node
X                          .successors 2 ;
X                        .endnode;
X
X                        .node 2 operation;
X                          .inputs bit_in[0:0] int_parity[0:0] carrier_loss[0:0] biphase_violation[0:0] 
X	bit_count_B[0:0] bit_count_B[1:1] bit_count_B[2:2] bit_count_B[3:3] 
X	bit_count_B[4:4] bit_count_B[5:5] bit_count_B[6:6] preamble_3[0:0] 
X	int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] int_rx_status[0:0] 
X	int_rx_status[1:1] int_rx_status[2:2] int_load_B[0:0] int_load_A[0:0] 
X	;
X                          .outputs T42[0:0] T42[1:1] T42[2:2] T42[3:3] 
X	T42[4:4] T42[5:5] T42[6:6] M4[1:1] 
X	M4[2:2] M4[3:3] M4[4:4] M4[5:5] 
X	M4[6:6] M4[7:7] M4[8:8] M4[9:9] 
X	M4[10:10] M4[11:11] M4[12:12] M4[13:13] 
X	M4[14:14] M4[15:15] M4[16:16] M4[17:17] 
X	M4[18:18] M4[19:19] X11[0:0] X12[0:0] 
X	X13[0:0] X14[0:0] X15[0:0] X16[0:0] 
X	T44[0:0] ;
X                          .successors 3 ;	#  predecessors 1 
X                          .operation logic 8 ;
X                            #	Expression 0
X                            T35[0:0] = V1_bit_in_0_0[0:0] ;
X                            T29[0:0] = T35[0:0] ;
X                            T36[0:0] = int_parity[0:0]' ;
X                            T30[0:0] = carrier_loss[0:0] ;
X                            T31[0:0] = biphase_violation[0:0] ;
X                            T37[0:0] = V0010000_bit_count_B_0_6[0:0] ;
X                            T38[0:0] = V0_preamble_3_0_0[0:0] ;
X                            T39[0:0] = (T37[0:0]  T38[0:0] );
X                            T32[0:0] = T39[0:0] ;
X                            T40[0:0] = V1111100_bit_count_B_0_6[0:0] ;
X                            T33[0:0] = T40[0:0] ;
X                            T41[0:0] = V0100000_bit_count_B_0_6[0:0] ;
X                            T34[0:0] = T41[0:0] ;
X                            c_T42[0:0] =  0 ;
X                            T42[0:0] = (((((bit_count_B[0:0]'   1 ) c_T42[0:0]' )+((bit_count_B[0:0]   1' ) c_T42[0:0]' ))+((bit_count_B[0:0]'   1' ) c_T42[0:0] ))+((bit_count_B[0:0]   1 ) c_T42[0:0] ));
X                            c_T42[1:1] = ((bit_count_B[0:0]   1 )+(c_T42[0:0]  (bit_count_B[0:0] + 1 )));
X                            T42[1:1] = (((((bit_count_B[1:1]'   0 ) c_T42[1:1]' )+((bit_count_B[1:1]   0' ) c_T42[1:1]' ))+((bit_count_B[1:1]'   0' ) c_T42[1:1] ))+((bit_count_B[1:1]   0 ) c_T42[1:1] ));
X                            c_T42[2:2] = ((bit_count_B[1:1]   0 )+(c_T42[1:1]  (bit_count_B[1:1] + 0 )));
X                            T42[2:2] = (((((bit_count_B[2:2]'   0 ) c_T42[2:2]' )+((bit_count_B[2:2]   0' ) c_T42[2:2]' ))+((bit_count_B[2:2]'   0' ) c_T42[2:2] ))+((bit_count_B[2:2]   0 ) c_T42[2:2] ));
X                            c_T42[3:3] = ((bit_count_B[2:2]   0 )+(c_T42[2:2]  (bit_count_B[2:2] + 0 )));
X                            T42[3:3] = (((((bit_count_B[3:3]'   0 ) c_T42[3:3]' )+((bit_count_B[3:3]   0' ) c_T42[3:3]' ))+((bit_count_B[3:3]'   0' ) c_T42[3:3] ))+((bit_count_B[3:3]   0 ) c_T42[3:3] ));
X                            c_T42[4:4] = ((bit_count_B[3:3]   0 )+(c_T42[3:3]  (bit_count_B[3:3] + 0 )));
X                            T42[4:4] = (((((bit_count_B[4:4]'   0 ) c_T42[4:4]' )+((bit_count_B[4:4]   0' ) c_T42[4:4]' ))+((bit_count_B[4:4]'   0' ) c_T42[4:4] ))+((bit_count_B[4:4]   0 ) c_T42[4:4] ));
X                            c_T42[5:5] = ((bit_count_B[4:4]   0 )+(c_T42[4:4]  (bit_count_B[4:4] + 0 )));
X                            T42[5:5] = (((((bit_count_B[5:5]'   0 ) c_T42[5:5]' )+((bit_count_B[5:5]   0' ) c_T42[5:5]' ))+((bit_count_B[5:5]'   0' ) c_T42[5:5] ))+((bit_count_B[5:5]   0 ) c_T42[5:5] ));
X                            c_T42[6:6] = ((bit_count_B[5:5]   0 )+(c_T42[5:5]  (bit_count_B[5:5] + 0 )));
X                            T42[6:6] = (((((bit_count_B[6:6]'   0 ) c_T42[6:6]' )+((bit_count_B[6:6]   0' ) c_T42[6:6]' ))+((bit_count_B[6:6]'   0' ) c_T42[6:6] ))+((bit_count_B[6:6]   0 ) c_T42[6:6] ));
X                            c_T42[7:7] = ((bit_count_B[6:6]   0 )+(c_T42[6:6]  (bit_count_B[6:6] + 0 )));
X                            T42[7:7] = c_T42[6:6] ;
X                            M4[0:0] =  0 ;
X                            M4[1:1] = int_shift_reg[0:0] ;
X                            M4[2:2] = int_shift_reg[1:1] ;
X                            M4[3:3] = int_shift_reg[2:2] ;
X                            M4[4:4] = int_shift_reg[3:3] ;
X                            M4[5:5] = int_shift_reg[4:4] ;
X                            M4[6:6] = int_shift_reg[5:5] ;
X                            M4[7:7] = int_shift_reg[6:6] ;
X                            M4[8:8] = int_shift_reg[7:7] ;
X                            M4[9:9] = int_shift_reg[8:8] ;
X                            M4[10:10] = int_shift_reg[9:9] ;
X                            M4[11:11] = int_shift_reg[10:10] ;
X                            M4[12:12] = int_shift_reg[11:11] ;
X                            M4[13:13] = int_shift_reg[12:12] ;
X                            M4[14:14] = int_shift_reg[13:13] ;
X                            M4[15:15] = int_shift_reg[14:14] ;
X                            M4[16:16] = int_shift_reg[15:15] ;
X                            M4[17:17] = int_shift_reg[16:16] ;
X                            M4[18:18] = int_shift_reg[17:17] ;
X                            M4[19:19] = int_shift_reg[18:18] ;
X                            X11[0:0] = ((V1_T29_0_0[0:0]  T36[0:0] )+(V0_T29_0_0[0:0]  int_parity[0:0] ));
X                            X12[0:0] = (V1_T30_0_0[0:0] +(V0_T30_0_0[0:0]  int_rx_status[0:0] ));
X                            X13[0:0] = (V1_T31_0_0[0:0] +(V0_T31_0_0[0:0]  int_rx_status[1:1] ));
X                            X14[0:0] = (V1_T32_0_0[0:0] +(V0_T32_0_0[0:0]  int_rx_status[2:2] ));
X                            X15[0:0] = (V1_T33_0_0[0:0] +(V0_T33_0_0[0:0]  int_load_B[0:0] ));
X                            X16[0:0] = ( 0 +(V0_T34_0_0[0:0]  int_load_A[0:0] ));
X                            c_0_T43[0:0] =  0 ;
X                            d_0_T43[0:0] =  1 ;
X                            c_1_T43[0:0] = ((c_0_T43[0:0]  ( 0 +T42[0:0]' ))+(d_0_T43[0:0]  ( 0  T42[0:0]' )));
X                            d_1_T43[0:0] = ((c_0_T43[0:0]  ( 0'  T42[0:0] ))+(d_0_T43[0:0]  ( 0' +T42[0:0] )));
X                            c_2_T43[0:0] = ((c_1_T43[0:0]  ( 0 +T42[1:1]' ))+(d_1_T43[0:0]  ( 0  T42[1:1]' )));
X                            d_2_T43[0:0] = ((c_1_T43[0:0]  ( 0'  T42[1:1] ))+(d_1_T43[0:0]  ( 0' +T42[1:1] )));
X                            c_3_T43[0:0] = ((c_2_T43[0:0]  ( 0 +T42[2:2]' ))+(d_2_T43[0:0]  ( 0  T42[2:2]' )));
X                            d_3_T43[0:0] = ((c_2_T43[0:0]  ( 0'  T42[2:2] ))+(d_2_T43[0:0]  ( 0' +T42[2:2] )));
X                            c_4_T43[0:0] = ((c_3_T43[0:0]  ( 0 +T42[3:3]' ))+(d_3_T43[0:0]  ( 0  T42[3:3]' )));
X                            d_4_T43[0:0] = ((c_3_T43[0:0]  ( 0'  T42[3:3] ))+(d_3_T43[0:0]  ( 0' +T42[3:3] )));
X                            c_5_T43[0:0] = ((c_4_T43[0:0]  ( 0 +T42[4:4]' ))+(d_4_T43[0:0]  ( 0  T42[4:4]' )));
X                            d_5_T43[0:0] = ((c_4_T43[0:0]  ( 0'  T42[4:4] ))+(d_4_T43[0:0]  ( 0' +T42[4:4] )));
X                            c_6_T43[0:0] = ((c_5_T43[0:0]  ( 1 +T42[5:5]' ))+(d_5_T43[0:0]  ( 1  T42[5:5]' )));
X                            d_6_T43[0:0] = ((c_5_T43[0:0]  ( 1'  T42[5:5] ))+(d_5_T43[0:0]  ( 1' +T42[5:5] )));
X                            c_7_T43[0:0] = ((c_6_T43[0:0]  ( 0 +T42[6:6]' ))+(d_6_T43[0:0]  ( 0  T42[6:6]' )));
X                            d_7_T43[0:0] = ((c_6_T43[0:0]  ( 0'  T42[6:6] ))+(d_6_T43[0:0]  ( 0' +T42[6:6] )));
X                            T43[0:0] = c_7_T43[0:0] ;
X                            T44[0:0] = T43[0:0]' ;
X                            V0_T34_0_0[0:0] = T34[0:0]' ;
X                            V0_T33_0_0[0:0] = T33[0:0]' ;
X                            V1_T33_0_0[0:0] = T33[0:0] ;
X                            V0_T32_0_0[0:0] = T32[0:0]' ;
X                            V1_T32_0_0[0:0] = T32[0:0] ;
X                            V0_T31_0_0[0:0] = T31[0:0]' ;
X                            V1_T31_0_0[0:0] = T31[0:0] ;
X                            V0_T30_0_0[0:0] = T30[0:0]' ;
X                            V1_T30_0_0[0:0] = T30[0:0] ;
X                            V0_T29_0_0[0:0] = T29[0:0]' ;
X                            V1_T29_0_0[0:0] = T29[0:0] ;
X                            V0_preamble_3_0_0[0:0] = preamble_3[0:0]' ;
X                            V0100000_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]'  bit_count_B[1:1] ) bit_count_B[2:2]' ) bit_count_B[3:3]' ) bit_count_B[4:4]' ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                            V1111100_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]  bit_count_B[1:1] ) bit_count_B[2:2] ) bit_count_B[3:3] ) bit_count_B[4:4] ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                            V0010000_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]'  bit_count_B[1:1]' ) bit_count_B[2:2] ) bit_count_B[3:3]' ) bit_count_B[4:4]' ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                            V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                            .attribute delay 20 level;
X                            .attribute area 503 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 3 nop;	#	sink node
X                          .successors ;	#  predecessors 2 
X                        .endnode;
X
X                        .endpolargraph;
X                      .attribute hercules loop_load int_shift_reg[19:19] M4[19:19] ;
X                      .attribute hercules loop_load int_shift_reg[18:18] M4[18:18] ;
X                      .attribute hercules loop_load int_shift_reg[17:17] M4[17:17] ;
X                      .attribute hercules loop_load int_shift_reg[16:16] M4[16:16] ;
X                      .attribute hercules loop_load int_shift_reg[15:15] M4[15:15] ;
X                      .attribute hercules loop_load int_shift_reg[14:14] M4[14:14] ;
X                      .attribute hercules loop_load int_shift_reg[13:13] M4[13:13] ;
X                      .attribute hercules loop_load int_shift_reg[12:12] M4[12:12] ;
X                      .attribute hercules loop_load int_shift_reg[11:11] M4[11:11] ;
X                      .attribute hercules loop_load int_shift_reg[10:10] M4[10:10] ;
X                      .attribute hercules loop_load int_shift_reg[9:9] M4[9:9] ;
X                      .attribute hercules loop_load int_shift_reg[8:8] M4[8:8] ;
X                      .attribute hercules loop_load int_shift_reg[7:7] M4[7:7] ;
X                      .attribute hercules loop_load int_shift_reg[6:6] M4[6:6] ;
X                      .attribute hercules loop_load int_shift_reg[5:5] M4[5:5] ;
X                      .attribute hercules loop_load int_shift_reg[4:4] M4[4:4] ;
X                      .attribute hercules loop_load int_shift_reg[3:3] M4[3:3] ;
X                      .attribute hercules loop_load int_shift_reg[2:2] M4[2:2] ;
X                      .attribute hercules loop_load int_shift_reg[1:1] M4[1:1] ;
X                      .attribute hercules loop_load int_shift_reg[0:0] bit_in[0:0] ;
X                      .attribute hercules loop_load int_load_B[0:0] X15[0:0] ;
X                      .attribute hercules loop_load int_load_A[0:0] X16[0:0] ;
X                      .attribute hercules loop_load int_parity[0:0] X11[0:0] ;
X                      .attribute hercules loop_load int_rx_status[2:2] X14[0:0] ;
X                      .attribute hercules loop_load int_rx_status[1:1] X13[0:0] ;
X                      .attribute hercules loop_load int_rx_status[0:0] X12[0:0] ;
X                      .attribute hercules loop_load frame_counter[8:8] 0b0 ;
X                      .attribute hercules loop_load frame_counter[7:7] 0b0 ;
X                      .attribute hercules loop_load frame_counter[6:6] 0b0 ;
X                      .attribute hercules loop_load frame_counter[5:5] 0b0 ;
X                      .attribute hercules loop_load frame_counter[4:4] 0b0 ;
X                      .attribute hercules loop_load frame_counter[3:3] 0b0 ;
X                      .attribute hercules loop_load frame_counter[2:2] 0b0 ;
X                      .attribute hercules loop_load frame_counter[1:1] 0b0 ;
X                      .attribute hercules loop_load frame_counter[0:0] 0b10 ;
X                      .attribute hercules loop_load bit_count_B[6:6] T42[6:6] ;
X                      .attribute hercules loop_load bit_count_B[5:5] T42[5:5] ;
X                      .attribute hercules loop_load bit_count_B[4:4] T42[4:4] ;
X                      .attribute hercules loop_load bit_count_B[3:3] T42[3:3] ;
X                      .attribute hercules loop_load bit_count_B[2:2] T42[2:2] ;
X                      .attribute hercules loop_load bit_count_B[1:1] T42[1:1] ;
X                      .attribute hercules loop_load bit_count_B[0:0] T42[0:0] ;
X                      .endloop;
X                    .endnode;
X
X                    .node 9 loop;
X                      .successors 10 ;	#  predecessors 8 
X                      .loop T88[0:0] ;	#	
X                        #	Index 12
X                        .polargraph 1 10;
X                        #	10 nodes
X                        .node 1 nop;	#	source node
X                          .successors 2 ;
X                        .endnode;
X
X                        .node 2 operation;
X                          .inputs bit_in[0:0] frame_counter[0:0] frame_counter[1:1] frame_counter[2:2] 
X	frame_counter[3:3] frame_counter[4:4] frame_counter[5:5] frame_counter[6:6] 
X	frame_counter[7:7] frame_counter[8:8] ;
X                          .outputs T45[0:0] T46[0:0] T48[0:0] T48[1:1] 
X	T48[2:2] T48[3:3] T48[4:4] T48[5:5] 
X	T48[6:6] T48[7:7] T48[8:8] ;
X                          .successors 3 ;	#  predecessors 1 
X                          .operation logic 9 ;
X                            #	Expression 0
X                            T47[0:0] = V1_bit_in_0_0[0:0] ;
X                            T45[0:0] = T47[0:0] ;
X                            T46[0:0] = T47[0:0] ;
X                            c_T48[0:0] =  0 ;
X                            T48[0:0] = (((((frame_counter[0:0]'   1 ) c_T48[0:0]' )+((frame_counter[0:0]   1' ) c_T48[0:0]' ))+((frame_counter[0:0]'   1' ) c_T48[0:0] ))+((frame_counter[0:0]   1 ) c_T48[0:0] ));
X                            c_T48[1:1] = ((frame_counter[0:0]   1 )+(c_T48[0:0]  (frame_counter[0:0] + 1 )));
X                            T48[1:1] = (((((frame_counter[1:1]'   0 ) c_T48[1:1]' )+((frame_counter[1:1]   0' ) c_T48[1:1]' ))+((frame_counter[1:1]'   0' ) c_T48[1:1] ))+((frame_counter[1:1]   0 ) c_T48[1:1] ));
X                            c_T48[2:2] = ((frame_counter[1:1]   0 )+(c_T48[1:1]  (frame_counter[1:1] + 0 )));
X                            T48[2:2] = (((((frame_counter[2:2]'   0 ) c_T48[2:2]' )+((frame_counter[2:2]   0' ) c_T48[2:2]' ))+((frame_counter[2:2]'   0' ) c_T48[2:2] ))+((frame_counter[2:2]   0 ) c_T48[2:2] ));
X                            c_T48[3:3] = ((frame_counter[2:2]   0 )+(c_T48[2:2]  (frame_counter[2:2] + 0 )));
X                            T48[3:3] = (((((frame_counter[3:3]'   0 ) c_T48[3:3]' )+((frame_counter[3:3]   0' ) c_T48[3:3]' ))+((frame_counter[3:3]'   0' ) c_T48[3:3] ))+((frame_counter[3:3]   0 ) c_T48[3:3] ));
X                            c_T48[4:4] = ((frame_counter[3:3]   0 )+(c_T48[3:3]  (frame_counter[3:3] + 0 )));
X                            T48[4:4] = (((((frame_counter[4:4]'   0 ) c_T48[4:4]' )+((frame_counter[4:4]   0' ) c_T48[4:4]' ))+((frame_counter[4:4]'   0' ) c_T48[4:4] ))+((frame_counter[4:4]   0 ) c_T48[4:4] ));
X                            c_T48[5:5] = ((frame_counter[4:4]   0 )+(c_T48[4:4]  (frame_counter[4:4] + 0 )));
X                            T48[5:5] = (((((frame_counter[5:5]'   0 ) c_T48[5:5]' )+((frame_counter[5:5]   0' ) c_T48[5:5]' ))+((frame_counter[5:5]'   0' ) c_T48[5:5] ))+((frame_counter[5:5]   0 ) c_T48[5:5] ));
X                            c_T48[6:6] = ((frame_counter[5:5]   0 )+(c_T48[5:5]  (frame_counter[5:5] + 0 )));
X                            T48[6:6] = (((((frame_counter[6:6]'   0 ) c_T48[6:6]' )+((frame_counter[6:6]   0' ) c_T48[6:6]' ))+((frame_counter[6:6]'   0' ) c_T48[6:6] ))+((frame_counter[6:6]   0 ) c_T48[6:6] ));
X                            c_T48[7:7] = ((frame_counter[6:6]   0 )+(c_T48[6:6]  (frame_counter[6:6] + 0 )));
X                            T48[7:7] = (((((frame_counter[7:7]'   0 ) c_T48[7:7]' )+((frame_counter[7:7]   0' ) c_T48[7:7]' ))+((frame_counter[7:7]'   0' ) c_T48[7:7] ))+((frame_counter[7:7]   0 ) c_T48[7:7] ));
X                            c_T48[8:8] = ((frame_counter[7:7]   0 )+(c_T48[7:7]  (frame_counter[7:7] + 0 )));
X                            T48[8:8] = (((((frame_counter[8:8]'   0 ) c_T48[8:8]' )+((frame_counter[8:8]   0' ) c_T48[8:8]' ))+((frame_counter[8:8]'   0' ) c_T48[8:8] ))+((frame_counter[8:8]   0 ) c_T48[8:8] ));
X                            c_T48[9:9] = ((frame_counter[8:8]   0 )+(c_T48[8:8]  (frame_counter[8:8] + 0 )));
X                            T48[9:9] = c_T48[8:8] ;
X                            V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                            .attribute delay 21 level;
X                            .attribute area 294 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 3 operation;
X                          .inputs int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] T45[0:0] 
X	;
X                          .outputs M5[1:1] M5[2:2] M5[3:3] M5[4:4] 
X	M5[5:5] M5[6:6] M5[7:7] M5[8:8] 
X	M5[9:9] M5[10:10] M5[11:11] M5[12:12] 
X	M5[13:13] M5[14:14] M5[15:15] M5[16:16] 
X	M5[17:17] M5[18:18] M5[19:19] X17[0:0] 
X	;
X                          .successors 4 ;	#  predecessors 2 
X                          .operation logic 10 ;
X                            #	Expression 0
X                            M5[0:0] =  0 ;
X                            M5[1:1] = int_shift_reg[0:0] ;
X                            M5[2:2] = int_shift_reg[1:1] ;
X                            M5[3:3] = int_shift_reg[2:2] ;
X                            M5[4:4] = int_shift_reg[3:3] ;
X                            M5[5:5] = int_shift_reg[4:4] ;
X                            M5[6:6] = int_shift_reg[5:5] ;
X                            M5[7:7] = int_shift_reg[6:6] ;
X                            M5[8:8] = int_shift_reg[7:7] ;
X                            M5[9:9] = int_shift_reg[8:8] ;
X                            M5[10:10] = int_shift_reg[9:9] ;
X                            M5[11:11] = int_shift_reg[10:10] ;
X                            M5[12:12] = int_shift_reg[11:11] ;
X                            M5[13:13] = int_shift_reg[12:12] ;
X                            M5[14:14] = int_shift_reg[13:13] ;
X                            M5[15:15] = int_shift_reg[14:14] ;
X                            M5[16:16] = int_shift_reg[15:15] ;
X                            M5[17:17] = int_shift_reg[16:16] ;
X                            M5[18:18] = int_shift_reg[17:17] ;
X                            M5[19:19] = int_shift_reg[18:18] ;
X                            X17[0:0] = (V1_T45_0_0[0:0] + 0 );
X                            V1_T45_0_0[0:0] = T45[0:0] ;
X                            .attribute delay 1 level;
X                            .attribute area 24 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 4 operation;
X                          .inputs M5[19:19] M5[18:18] M5[17:17] M5[16:16] 
X	M5[15:15] M5[14:14] M5[13:13] M5[12:12] 
X	M5[11:11] M5[10:10] M5[9:9] M5[8:8] 
X	M5[7:7] M5[6:6] M5[5:5] M5[4:4] 
X	M5[3:3] M5[2:2] M5[1:1] bit_in[0:0] 
X	X17[0:0] 0b0 0b0 0b0 
X	0b0 0b0 0b0 0b1 
X	;
X                          .outputs int_shift_reg[19:19] int_shift_reg[18:18] int_shift_reg[17:17] int_shift_reg[16:16] 
X	int_shift_reg[15:15] int_shift_reg[14:14] int_shift_reg[13:13] int_shift_reg[12:12] 
X	int_shift_reg[11:11] int_shift_reg[10:10] int_shift_reg[9:9] int_shift_reg[8:8] 
X	int_shift_reg[7:7] int_shift_reg[6:6] int_shift_reg[5:5] int_shift_reg[4:4] 
X	int_shift_reg[3:3] int_shift_reg[2:2] int_shift_reg[1:1] int_shift_reg[0:0] 
X	int_parity[0:0] bit_count_A[6:6] bit_count_A[5:5] bit_count_A[4:4] 
X	bit_count_A[3:3] bit_count_A[2:2] bit_count_A[1:1] bit_count_A[0:0] 
X	;
X                          .successors 5 ;	#  predecessors 3 
X                          .attribute constraint delay 4 1 cycles;
X                          .operation load_register;
X                        .endnode;
X
X                        .node 5 loop;
X                          .successors 6 ;	#  predecessors 4 
X                          .loop T70[0:0] ;	#	
X                            #	Index 13
X                            .polargraph 1 3;
X                            #	3 nodes
X                            .node 1 nop;	#	source node
X                              .successors 2 ;
X                            .endnode;
X
X                            .node 2 operation;
X                              .inputs bit_in[0:0] int_parity[0:0] carrier_loss[0:0] biphase_violation[0:0] 
X	bit_count_A[0:0] bit_count_A[1:1] bit_count_A[2:2] bit_count_A[3:3] 
X	bit_count_A[4:4] bit_count_A[5:5] bit_count_A[6:6] preamble_2[0:0] 
X	frame_counter[0:0] frame_counter[1:1] int_shift_reg[0:0] int_shift_reg[1:1] 
X	int_shift_reg[2:2] int_shift_reg[3:3] int_shift_reg[4:4] int_shift_reg[5:5] 
X	int_shift_reg[6:6] int_shift_reg[7:7] int_shift_reg[8:8] int_shift_reg[9:9] 
X	int_shift_reg[10:10] int_shift_reg[11:11] int_shift_reg[12:12] int_shift_reg[13:13] 
X	int_shift_reg[14:14] int_shift_reg[15:15] int_shift_reg[16:16] int_shift_reg[17:17] 
X	int_shift_reg[18:18] int_rx_status[0:0] int_rx_status[1:1] int_rx_status[2:2] 
X	int_load_A[0:0] int_load_B[0:0] int_load_buff[0:0] ;
X                              .outputs T68[0:0] T68[1:1] T68[2:2] T68[3:3] 
X	T68[4:4] T68[5:5] T68[6:6] M6[1:1] 
X	M6[2:2] M6[3:3] M6[4:4] M6[5:5] 
X	M6[6:6] M6[7:7] M6[8:8] M6[9:9] 
X	M6[10:10] M6[11:11] M6[12:12] M6[13:13] 
X	M6[14:14] M6[15:15] M6[16:16] M6[17:17] 
X	M6[18:18] M6[19:19] X18[0:0] X19[0:0] 
X	X20[0:0] X21[0:0] X22[0:0] X23[0:0] 
X	X26[0:0] T70[0:0] ;
X                              .successors 3 ;	#  predecessors 1 
X                              .operation logic 11 ;
X                                #	Expression 0
X                                T58[0:0] = V1_bit_in_0_0[0:0] ;
X                                T49[0:0] = T58[0:0] ;
X                                T59[0:0] = int_parity[0:0]' ;
X                                T50[0:0] = carrier_loss[0:0] ;
X                                T51[0:0] = biphase_violation[0:0] ;
X                                T60[0:0] = V0010000_bit_count_A_0_6[0:0] ;
X                                T61[0:0] = V0_preamble_2_0_0[0:0] ;
X                                T62[0:0] = (T60[0:0]  T61[0:0] );
X                                T52[0:0] = T62[0:0] ;
X                                T63[0:0] = V1111100_bit_count_A_0_6[0:0] ;
X                                T53[0:0] = T63[0:0] ;
X                                T64[0:0] = V0100000_bit_count_A_0_6[0:0] ;
X                                T54[0:0] = T64[0:0] ;
X                                T65[0:0] = V1100000_bit_count_A_0_6[0:0] ;
X                                T55[0:0] = T65[0:0] ;
X                                T66[0:0] = V00_frame_counter_0_1[0:0] ;
X                                T56[0:0] = T66[0:0] ;
X                                T67[0:0] = V1010000_bit_count_A_0_6[0:0] ;
X                                T57[0:0] = T67[0:0] ;
X                                c_T68[0:0] =  0 ;
X                                T68[0:0] = (((((bit_count_A[0:0]'   1 ) c_T68[0:0]' )+((bit_count_A[0:0]   1' ) c_T68[0:0]' ))+((bit_count_A[0:0]'   1' ) c_T68[0:0] ))+((bit_count_A[0:0]   1 ) c_T68[0:0] ));
X                                c_T68[1:1] = ((bit_count_A[0:0]   1 )+(c_T68[0:0]  (bit_count_A[0:0] + 1 )));
X                                T68[1:1] = (((((bit_count_A[1:1]'   0 ) c_T68[1:1]' )+((bit_count_A[1:1]   0' ) c_T68[1:1]' ))+((bit_count_A[1:1]'   0' ) c_T68[1:1] ))+((bit_count_A[1:1]   0 ) c_T68[1:1] ));
X                                c_T68[2:2] = ((bit_count_A[1:1]   0 )+(c_T68[1:1]  (bit_count_A[1:1] + 0 )));
X                                T68[2:2] = (((((bit_count_A[2:2]'   0 ) c_T68[2:2]' )+((bit_count_A[2:2]   0' ) c_T68[2:2]' ))+((bit_count_A[2:2]'   0' ) c_T68[2:2] ))+((bit_count_A[2:2]   0 ) c_T68[2:2] ));
X                                c_T68[3:3] = ((bit_count_A[2:2]   0 )+(c_T68[2:2]  (bit_count_A[2:2] + 0 )));
X                                T68[3:3] = (((((bit_count_A[3:3]'   0 ) c_T68[3:3]' )+((bit_count_A[3:3]   0' ) c_T68[3:3]' ))+((bit_count_A[3:3]'   0' ) c_T68[3:3] ))+((bit_count_A[3:3]   0 ) c_T68[3:3] ));
X                                c_T68[4:4] = ((bit_count_A[3:3]   0 )+(c_T68[3:3]  (bit_count_A[3:3] + 0 )));
X                                T68[4:4] = (((((bit_count_A[4:4]'   0 ) c_T68[4:4]' )+((bit_count_A[4:4]   0' ) c_T68[4:4]' ))+((bit_count_A[4:4]'   0' ) c_T68[4:4] ))+((bit_count_A[4:4]   0 ) c_T68[4:4] ));
X                                c_T68[5:5] = ((bit_count_A[4:4]   0 )+(c_T68[4:4]  (bit_count_A[4:4] + 0 )));
X                                T68[5:5] = (((((bit_count_A[5:5]'   0 ) c_T68[5:5]' )+((bit_count_A[5:5]   0' ) c_T68[5:5]' ))+((bit_count_A[5:5]'   0' ) c_T68[5:5] ))+((bit_count_A[5:5]   0 ) c_T68[5:5] ));
X                                c_T68[6:6] = ((bit_count_A[5:5]   0 )+(c_T68[5:5]  (bit_count_A[5:5] + 0 )));
X                                T68[6:6] = (((((bit_count_A[6:6]'   0 ) c_T68[6:6]' )+((bit_count_A[6:6]   0' ) c_T68[6:6]' ))+((bit_count_A[6:6]'   0' ) c_T68[6:6] ))+((bit_count_A[6:6]   0 ) c_T68[6:6] ));
X                                c_T68[7:7] = ((bit_count_A[6:6]   0 )+(c_T68[6:6]  (bit_count_A[6:6] + 0 )));
X                                T68[7:7] = c_T68[6:6] ;
X                                M6[0:0] =  0 ;
X                                M6[1:1] = int_shift_reg[0:0] ;
X                                M6[2:2] = int_shift_reg[1:1] ;
X                                M6[3:3] = int_shift_reg[2:2] ;
X                                M6[4:4] = int_shift_reg[3:3] ;
X                                M6[5:5] = int_shift_reg[4:4] ;
X                                M6[6:6] = int_shift_reg[5:5] ;
X                                M6[7:7] = int_shift_reg[6:6] ;
X                                M6[8:8] = int_shift_reg[7:7] ;
X                                M6[9:9] = int_shift_reg[8:8] ;
X                                M6[10:10] = int_shift_reg[9:9] ;
X                                M6[11:11] = int_shift_reg[10:10] ;
X                                M6[12:12] = int_shift_reg[11:11] ;
X                                M6[13:13] = int_shift_reg[12:12] ;
X                                M6[14:14] = int_shift_reg[13:13] ;
X                                M6[15:15] = int_shift_reg[14:14] ;
X                                M6[16:16] = int_shift_reg[15:15] ;
X                                M6[17:17] = int_shift_reg[16:16] ;
X                                M6[18:18] = int_shift_reg[17:17] ;
X                                M6[19:19] = int_shift_reg[18:18] ;
X                                X18[0:0] = ((V1_T49_0_0[0:0]  T59[0:0] )+(V0_T49_0_0[0:0]  int_parity[0:0] ));
X                                X19[0:0] = (V1_T50_0_0[0:0] +(V0_T50_0_0[0:0]  int_rx_status[0:0] ));
X                                X20[0:0] = (V1_T51_0_0[0:0] +(V0_T51_0_0[0:0]  int_rx_status[1:1] ));
X                                X21[0:0] = (V1_T52_0_0[0:0] +(V0_T52_0_0[0:0]  int_rx_status[2:2] ));
X                                X22[0:0] = (V1_T53_0_0[0:0] +(V0_T53_0_0[0:0]  int_load_A[0:0] ));
X                                X23[0:0] = ( 0 +(V0_T54_0_0[0:0]  int_load_B[0:0] ));
X                                X24[0:0] = ((V1_T55_0_0[0:0]  X25[0:0] )+(V0_T55_0_0[0:0]  int_load_buff[0:0] ));
X                                X25[0:0] = (V1_T56_0_0[0:0] +(V0_T56_0_0[0:0]  int_load_buff[0:0] ));
X                                X26[0:0] = ( 0 +(V0_T57_0_0[0:0]  X24[0:0] ));
X                                c_0_T69[0:0] =  0 ;
X                                d_0_T69[0:0] =  1 ;
X                                c_1_T69[0:0] = ((c_0_T69[0:0]  ( 0 +T68[0:0]' ))+(d_0_T69[0:0]  ( 0  T68[0:0]' )));
X                                d_1_T69[0:0] = ((c_0_T69[0:0]  ( 0'  T68[0:0] ))+(d_0_T69[0:0]  ( 0' +T68[0:0] )));
X                                c_2_T69[0:0] = ((c_1_T69[0:0]  ( 0 +T68[1:1]' ))+(d_1_T69[0:0]  ( 0  T68[1:1]' )));
X                                d_2_T69[0:0] = ((c_1_T69[0:0]  ( 0'  T68[1:1] ))+(d_1_T69[0:0]  ( 0' +T68[1:1] )));
X                                c_3_T69[0:0] = ((c_2_T69[0:0]  ( 0 +T68[2:2]' ))+(d_2_T69[0:0]  ( 0  T68[2:2]' )));
X                                d_3_T69[0:0] = ((c_2_T69[0:0]  ( 0'  T68[2:2] ))+(d_2_T69[0:0]  ( 0' +T68[2:2] )));
X                                c_4_T69[0:0] = ((c_3_T69[0:0]  ( 0 +T68[3:3]' ))+(d_3_T69[0:0]  ( 0  T68[3:3]' )));
X                                d_4_T69[0:0] = ((c_3_T69[0:0]  ( 0'  T68[3:3] ))+(d_3_T69[0:0]  ( 0' +T68[3:3] )));
X                                c_5_T69[0:0] = ((c_4_T69[0:0]  ( 0 +T68[4:4]' ))+(d_4_T69[0:0]  ( 0  T68[4:4]' )));
X                                d_5_T69[0:0] = ((c_4_T69[0:0]  ( 0'  T68[4:4] ))+(d_4_T69[0:0]  ( 0' +T68[4:4] )));
X                                c_6_T69[0:0] = ((c_5_T69[0:0]  ( 1 +T68[5:5]' ))+(d_5_T69[0:0]  ( 1  T68[5:5]' )));
X                                d_6_T69[0:0] = ((c_5_T69[0:0]  ( 1'  T68[5:5] ))+(d_5_T69[0:0]  ( 1' +T68[5:5] )));
X                                c_7_T69[0:0] = ((c_6_T69[0:0]  ( 0 +T68[6:6]' ))+(d_6_T69[0:0]  ( 0  T68[6:6]' )));
X                                d_7_T69[0:0] = ((c_6_T69[0:0]  ( 0'  T68[6:6] ))+(d_6_T69[0:0]  ( 0' +T68[6:6] )));
X                                T69[0:0] = c_7_T69[0:0] ;
X                                T70[0:0] = T69[0:0]' ;
X                                V0_T57_0_0[0:0] = T57[0:0]' ;
X                                V0_T56_0_0[0:0] = T56[0:0]' ;
X                                V1_T56_0_0[0:0] = T56[0:0] ;
X                                V0_T55_0_0[0:0] = T55[0:0]' ;
X                                V1_T55_0_0[0:0] = T55[0:0] ;
X                                V0_T54_0_0[0:0] = T54[0:0]' ;
X                                V0_T53_0_0[0:0] = T53[0:0]' ;
X                                V1_T53_0_0[0:0] = T53[0:0] ;
X                                V0_T52_0_0[0:0] = T52[0:0]' ;
X                                V1_T52_0_0[0:0] = T52[0:0] ;
X                                V0_T51_0_0[0:0] = T51[0:0]' ;
X                                V1_T51_0_0[0:0] = T51[0:0] ;
X                                V0_T50_0_0[0:0] = T50[0:0]' ;
X                                V1_T50_0_0[0:0] = T50[0:0] ;
X                                V0_T49_0_0[0:0] = T49[0:0]' ;
X                                V1_T49_0_0[0:0] = T49[0:0] ;
X                                V00_frame_counter_0_1[0:0] = (frame_counter[0:0]'  frame_counter[1:1]' );
X                                V0_preamble_2_0_0[0:0] = preamble_2[0:0]' ;
X                                V1010000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1]' ) bit_count_A[2:2] ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                                V1100000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1] ) bit_count_A[2:2]' ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                                V0100000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]'  bit_count_A[1:1] ) bit_count_A[2:2]' ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                                V1111100_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]  bit_count_A[1:1] ) bit_count_A[2:2] ) bit_count_A[3:3] ) bit_count_A[4:4] ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                                V0010000_bit_count_A_0_6[0:0] = ((((((bit_count_A[0:0]'  bit_count_A[1:1]' ) bit_count_A[2:2] ) bit_count_A[3:3]' ) bit_count_A[4:4]' ) bit_count_A[5:5]' ) bit_count_A[6:6]' );
X                                V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                                .attribute delay 20 level;
X                                .attribute area 560 literal;
X                              .endoperation;
X                            .endnode;
X
X                            .node 3 nop;	#	sink node
X                              .successors ;	#  predecessors 2 
X                            .endnode;
X
X                            .endpolargraph;
X                          .attribute hercules loop_load int_shift_reg[19:19] M6[19:19] ;
X                          .attribute hercules loop_load int_shift_reg[18:18] M6[18:18] ;
X                          .attribute hercules loop_load int_shift_reg[17:17] M6[17:17] ;
X                          .attribute hercules loop_load int_shift_reg[16:16] M6[16:16] ;
X                          .attribute hercules loop_load int_shift_reg[15:15] M6[15:15] ;
X                          .attribute hercules loop_load int_shift_reg[14:14] M6[14:14] ;
X                          .attribute hercules loop_load int_shift_reg[13:13] M6[13:13] ;
X                          .attribute hercules loop_load int_shift_reg[12:12] M6[12:12] ;
X                          .attribute hercules loop_load int_shift_reg[11:11] M6[11:11] ;
X                          .attribute hercules loop_load int_shift_reg[10:10] M6[10:10] ;
X                          .attribute hercules loop_load int_shift_reg[9:9] M6[9:9] ;
X                          .attribute hercules loop_load int_shift_reg[8:8] M6[8:8] ;
X                          .attribute hercules loop_load int_shift_reg[7:7] M6[7:7] ;
X                          .attribute hercules loop_load int_shift_reg[6:6] M6[6:6] ;
X                          .attribute hercules loop_load int_shift_reg[5:5] M6[5:5] ;
X                          .attribute hercules loop_load int_shift_reg[4:4] M6[4:4] ;
X                          .attribute hercules loop_load int_shift_reg[3:3] M6[3:3] ;
X                          .attribute hercules loop_load int_shift_reg[2:2] M6[2:2] ;
X                          .attribute hercules loop_load int_shift_reg[1:1] M6[1:1] ;
X                          .attribute hercules loop_load int_shift_reg[0:0] bit_in[0:0] ;
X                          .attribute hercules loop_load int_load_buff[0:0] X26[0:0] ;
X                          .attribute hercules loop_load int_load_B[0:0] X23[0:0] ;
X                          .attribute hercules loop_load int_load_A[0:0] X22[0:0] ;
X                          .attribute hercules loop_load int_parity[0:0] X18[0:0] ;
X                          .attribute hercules loop_load int_rx_status[2:2] X21[0:0] ;
X                          .attribute hercules loop_load int_rx_status[1:1] X20[0:0] ;
X                          .attribute hercules loop_load int_rx_status[0:0] X19[0:0] ;
X                          .attribute hercules loop_load bit_count_A[6:6] T68[6:6] ;
X                          .attribute hercules loop_load bit_count_A[5:5] T68[5:5] ;
X                          .attribute hercules loop_load bit_count_A[4:4] T68[4:4] ;
X                          .attribute hercules loop_load bit_count_A[3:3] T68[3:3] ;
X                          .attribute hercules loop_load bit_count_A[2:2] T68[2:2] ;
X                          .attribute hercules loop_load bit_count_A[1:1] T68[1:1] ;
X                          .attribute hercules loop_load bit_count_A[0:0] T68[0:0] ;
X                          .endloop;
X                        .endnode;
X
X                        .node 6 operation;
X                          .inputs int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] T46[0:0] 
X	;
X                          .outputs M7[1:1] M7[2:2] M7[3:3] M7[4:4] 
X	M7[5:5] M7[6:6] M7[7:7] M7[8:8] 
X	M7[9:9] M7[10:10] M7[11:11] M7[12:12] 
X	M7[13:13] M7[14:14] M7[15:15] M7[16:16] 
X	M7[17:17] M7[18:18] M7[19:19] X27[0:0] 
X	;
X                          .successors 7 ;	#  predecessors 5 
X                          .operation logic 12 ;
X                            #	Expression 0
X                            M7[0:0] =  0 ;
X                            M7[1:1] = int_shift_reg[0:0] ;
X                            M7[2:2] = int_shift_reg[1:1] ;
X                            M7[3:3] = int_shift_reg[2:2] ;
X                            M7[4:4] = int_shift_reg[3:3] ;
X                            M7[5:5] = int_shift_reg[4:4] ;
X                            M7[6:6] = int_shift_reg[5:5] ;
X                            M7[7:7] = int_shift_reg[6:6] ;
X                            M7[8:8] = int_shift_reg[7:7] ;
X                            M7[9:9] = int_shift_reg[8:8] ;
X                            M7[10:10] = int_shift_reg[9:9] ;
X                            M7[11:11] = int_shift_reg[10:10] ;
X                            M7[12:12] = int_shift_reg[11:11] ;
X                            M7[13:13] = int_shift_reg[12:12] ;
X                            M7[14:14] = int_shift_reg[13:13] ;
X                            M7[15:15] = int_shift_reg[14:14] ;
X                            M7[16:16] = int_shift_reg[15:15] ;
X                            M7[17:17] = int_shift_reg[16:16] ;
X                            M7[18:18] = int_shift_reg[17:17] ;
X                            M7[19:19] = int_shift_reg[18:18] ;
X                            X27[0:0] = (V1_T46_0_0[0:0] + 0 );
X                            V1_T46_0_0[0:0] = T46[0:0] ;
X                            .attribute delay 1 level;
X                            .attribute area 24 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 7 operation;
X                          .inputs M7[19:19] M7[18:18] M7[17:17] M7[16:16] 
X	M7[15:15] M7[14:14] M7[13:13] M7[12:12] 
X	M7[11:11] M7[10:10] M7[9:9] M7[8:8] 
X	M7[7:7] M7[6:6] M7[5:5] M7[4:4] 
X	M7[3:3] M7[2:2] M7[1:1] bit_in[0:0] 
X	X27[0:0] 0b0 0b0 0b0 
X	0b0 0b0 0b0 0b1 
X	;
X                          .outputs int_shift_reg[19:19] int_shift_reg[18:18] int_shift_reg[17:17] int_shift_reg[16:16] 
X	int_shift_reg[15:15] int_shift_reg[14:14] int_shift_reg[13:13] int_shift_reg[12:12] 
X	int_shift_reg[11:11] int_shift_reg[10:10] int_shift_reg[9:9] int_shift_reg[8:8] 
X	int_shift_reg[7:7] int_shift_reg[6:6] int_shift_reg[5:5] int_shift_reg[4:4] 
X	int_shift_reg[3:3] int_shift_reg[2:2] int_shift_reg[1:1] int_shift_reg[0:0] 
X	int_parity[0:0] bit_count_B[6:6] bit_count_B[5:5] bit_count_B[4:4] 
X	bit_count_B[3:3] bit_count_B[2:2] bit_count_B[1:1] bit_count_B[0:0] 
X	;
X                          .successors 8 ;	#  predecessors 6 
X                          .attribute constraint delay 7 1 cycles;
X                          .operation load_register;
X                        .endnode;
X
X                        .node 8 loop;
X                          .successors 9 ;	#  predecessors 7 
X                          .loop T86[0:0] ;	#	
X                            #	Index 14
X                            .polargraph 1 3;
X                            #	3 nodes
X                            .node 1 nop;	#	source node
X                              .successors 2 ;
X                            .endnode;
X
X                            .node 2 operation;
X                              .inputs bit_in[0:0] int_parity[0:0] carrier_loss[0:0] biphase_violation[0:0] 
X	bit_count_B[0:0] bit_count_B[1:1] bit_count_B[2:2] bit_count_B[3:3] 
X	bit_count_B[4:4] bit_count_B[5:5] bit_count_B[6:6] preamble_3[0:0] 
X	int_shift_reg[0:0] int_shift_reg[1:1] int_shift_reg[2:2] int_shift_reg[3:3] 
X	int_shift_reg[4:4] int_shift_reg[5:5] int_shift_reg[6:6] int_shift_reg[7:7] 
X	int_shift_reg[8:8] int_shift_reg[9:9] int_shift_reg[10:10] int_shift_reg[11:11] 
X	int_shift_reg[12:12] int_shift_reg[13:13] int_shift_reg[14:14] int_shift_reg[15:15] 
X	int_shift_reg[16:16] int_shift_reg[17:17] int_shift_reg[18:18] int_rx_status[0:0] 
X	int_rx_status[1:1] int_rx_status[2:2] int_load_B[0:0] int_load_A[0:0] 
X	;
X                              .outputs T84[0:0] T84[1:1] T84[2:2] T84[3:3] 
X	T84[4:4] T84[5:5] T84[6:6] M8[1:1] 
X	M8[2:2] M8[3:3] M8[4:4] M8[5:5] 
X	M8[6:6] M8[7:7] M8[8:8] M8[9:9] 
X	M8[10:10] M8[11:11] M8[12:12] M8[13:13] 
X	M8[14:14] M8[15:15] M8[16:16] M8[17:17] 
X	M8[18:18] M8[19:19] X28[0:0] X29[0:0] 
X	X30[0:0] X31[0:0] X32[0:0] X33[0:0] 
X	T86[0:0] ;
X                              .successors 3 ;	#  predecessors 1 
X                              .operation logic 13 ;
X                                #	Expression 0
X                                T77[0:0] = V1_bit_in_0_0[0:0] ;
X                                T71[0:0] = T77[0:0] ;
X                                T78[0:0] = int_parity[0:0]' ;
X                                T72[0:0] = carrier_loss[0:0] ;
X                                T73[0:0] = biphase_violation[0:0] ;
X                                T79[0:0] = V0010000_bit_count_B_0_6[0:0] ;
X                                T80[0:0] = V0_preamble_3_0_0[0:0] ;
X                                T81[0:0] = (T79[0:0]  T80[0:0] );
X                                T74[0:0] = T81[0:0] ;
X                                T82[0:0] = V1111100_bit_count_B_0_6[0:0] ;
X                                T75[0:0] = T82[0:0] ;
X                                T83[0:0] = V0100000_bit_count_B_0_6[0:0] ;
X                                T76[0:0] = T83[0:0] ;
X                                c_T84[0:0] =  0 ;
X                                T84[0:0] = (((((bit_count_B[0:0]'   1 ) c_T84[0:0]' )+((bit_count_B[0:0]   1' ) c_T84[0:0]' ))+((bit_count_B[0:0]'   1' ) c_T84[0:0] ))+((bit_count_B[0:0]   1 ) c_T84[0:0] ));
X                                c_T84[1:1] = ((bit_count_B[0:0]   1 )+(c_T84[0:0]  (bit_count_B[0:0] + 1 )));
X                                T84[1:1] = (((((bit_count_B[1:1]'   0 ) c_T84[1:1]' )+((bit_count_B[1:1]   0' ) c_T84[1:1]' ))+((bit_count_B[1:1]'   0' ) c_T84[1:1] ))+((bit_count_B[1:1]   0 ) c_T84[1:1] ));
X                                c_T84[2:2] = ((bit_count_B[1:1]   0 )+(c_T84[1:1]  (bit_count_B[1:1] + 0 )));
X                                T84[2:2] = (((((bit_count_B[2:2]'   0 ) c_T84[2:2]' )+((bit_count_B[2:2]   0' ) c_T84[2:2]' ))+((bit_count_B[2:2]'   0' ) c_T84[2:2] ))+((bit_count_B[2:2]   0 ) c_T84[2:2] ));
X                                c_T84[3:3] = ((bit_count_B[2:2]   0 )+(c_T84[2:2]  (bit_count_B[2:2] + 0 )));
X                                T84[3:3] = (((((bit_count_B[3:3]'   0 ) c_T84[3:3]' )+((bit_count_B[3:3]   0' ) c_T84[3:3]' ))+((bit_count_B[3:3]'   0' ) c_T84[3:3] ))+((bit_count_B[3:3]   0 ) c_T84[3:3] ));
X                                c_T84[4:4] = ((bit_count_B[3:3]   0 )+(c_T84[3:3]  (bit_count_B[3:3] + 0 )));
X                                T84[4:4] = (((((bit_count_B[4:4]'   0 ) c_T84[4:4]' )+((bit_count_B[4:4]   0' ) c_T84[4:4]' ))+((bit_count_B[4:4]'   0' ) c_T84[4:4] ))+((bit_count_B[4:4]   0 ) c_T84[4:4] ));
X                                c_T84[5:5] = ((bit_count_B[4:4]   0 )+(c_T84[4:4]  (bit_count_B[4:4] + 0 )));
X                                T84[5:5] = (((((bit_count_B[5:5]'   0 ) c_T84[5:5]' )+((bit_count_B[5:5]   0' ) c_T84[5:5]' ))+((bit_count_B[5:5]'   0' ) c_T84[5:5] ))+((bit_count_B[5:5]   0 ) c_T84[5:5] ));
X                                c_T84[6:6] = ((bit_count_B[5:5]   0 )+(c_T84[5:5]  (bit_count_B[5:5] + 0 )));
X                                T84[6:6] = (((((bit_count_B[6:6]'   0 ) c_T84[6:6]' )+((bit_count_B[6:6]   0' ) c_T84[6:6]' ))+((bit_count_B[6:6]'   0' ) c_T84[6:6] ))+((bit_count_B[6:6]   0 ) c_T84[6:6] ));
X                                c_T84[7:7] = ((bit_count_B[6:6]   0 )+(c_T84[6:6]  (bit_count_B[6:6] + 0 )));
X                                T84[7:7] = c_T84[6:6] ;
X                                M8[0:0] =  0 ;
X                                M8[1:1] = int_shift_reg[0:0] ;
X                                M8[2:2] = int_shift_reg[1:1] ;
X                                M8[3:3] = int_shift_reg[2:2] ;
X                                M8[4:4] = int_shift_reg[3:3] ;
X                                M8[5:5] = int_shift_reg[4:4] ;
X                                M8[6:6] = int_shift_reg[5:5] ;
X                                M8[7:7] = int_shift_reg[6:6] ;
X                                M8[8:8] = int_shift_reg[7:7] ;
X                                M8[9:9] = int_shift_reg[8:8] ;
X                                M8[10:10] = int_shift_reg[9:9] ;
X                                M8[11:11] = int_shift_reg[10:10] ;
X                                M8[12:12] = int_shift_reg[11:11] ;
X                                M8[13:13] = int_shift_reg[12:12] ;
X                                M8[14:14] = int_shift_reg[13:13] ;
X                                M8[15:15] = int_shift_reg[14:14] ;
X                                M8[16:16] = int_shift_reg[15:15] ;
X                                M8[17:17] = int_shift_reg[16:16] ;
X                                M8[18:18] = int_shift_reg[17:17] ;
X                                M8[19:19] = int_shift_reg[18:18] ;
X                                X28[0:0] = ((V1_T71_0_0[0:0]  T78[0:0] )+(V0_T71_0_0[0:0]  int_parity[0:0] ));
X                                X29[0:0] = (V1_T72_0_0[0:0] +(V0_T72_0_0[0:0]  int_rx_status[0:0] ));
X                                X30[0:0] = (V1_T73_0_0[0:0] +(V0_T73_0_0[0:0]  int_rx_status[1:1] ));
X                                X31[0:0] = (V1_T74_0_0[0:0] +(V0_T74_0_0[0:0]  int_rx_status[2:2] ));
X                                X32[0:0] = (V1_T75_0_0[0:0] +(V0_T75_0_0[0:0]  int_load_B[0:0] ));
X                                X33[0:0] = ( 0 +(V0_T76_0_0[0:0]  int_load_A[0:0] ));
X                                c_0_T85[0:0] =  0 ;
X                                d_0_T85[0:0] =  1 ;
X                                c_1_T85[0:0] = ((c_0_T85[0:0]  ( 0 +T84[0:0]' ))+(d_0_T85[0:0]  ( 0  T84[0:0]' )));
X                                d_1_T85[0:0] = ((c_0_T85[0:0]  ( 0'  T84[0:0] ))+(d_0_T85[0:0]  ( 0' +T84[0:0] )));
X                                c_2_T85[0:0] = ((c_1_T85[0:0]  ( 0 +T84[1:1]' ))+(d_1_T85[0:0]  ( 0  T84[1:1]' )));
X                                d_2_T85[0:0] = ((c_1_T85[0:0]  ( 0'  T84[1:1] ))+(d_1_T85[0:0]  ( 0' +T84[1:1] )));
X                                c_3_T85[0:0] = ((c_2_T85[0:0]  ( 0 +T84[2:2]' ))+(d_2_T85[0:0]  ( 0  T84[2:2]' )));
X                                d_3_T85[0:0] = ((c_2_T85[0:0]  ( 0'  T84[2:2] ))+(d_2_T85[0:0]  ( 0' +T84[2:2] )));
X                                c_4_T85[0:0] = ((c_3_T85[0:0]  ( 0 +T84[3:3]' ))+(d_3_T85[0:0]  ( 0  T84[3:3]' )));
X                                d_4_T85[0:0] = ((c_3_T85[0:0]  ( 0'  T84[3:3] ))+(d_3_T85[0:0]  ( 0' +T84[3:3] )));
X                                c_5_T85[0:0] = ((c_4_T85[0:0]  ( 0 +T84[4:4]' ))+(d_4_T85[0:0]  ( 0  T84[4:4]' )));
X                                d_5_T85[0:0] = ((c_4_T85[0:0]  ( 0'  T84[4:4] ))+(d_4_T85[0:0]  ( 0' +T84[4:4] )));
X                                c_6_T85[0:0] = ((c_5_T85[0:0]  ( 1 +T84[5:5]' ))+(d_5_T85[0:0]  ( 1  T84[5:5]' )));
X                                d_6_T85[0:0] = ((c_5_T85[0:0]  ( 1'  T84[5:5] ))+(d_5_T85[0:0]  ( 1' +T84[5:5] )));
X                                c_7_T85[0:0] = ((c_6_T85[0:0]  ( 0 +T84[6:6]' ))+(d_6_T85[0:0]  ( 0  T84[6:6]' )));
X                                d_7_T85[0:0] = ((c_6_T85[0:0]  ( 0'  T84[6:6] ))+(d_6_T85[0:0]  ( 0' +T84[6:6] )));
X                                T85[0:0] = c_7_T85[0:0] ;
X                                T86[0:0] = T85[0:0]' ;
X                                V0_T76_0_0[0:0] = T76[0:0]' ;
X                                V0_T75_0_0[0:0] = T75[0:0]' ;
X                                V1_T75_0_0[0:0] = T75[0:0] ;
X                                V0_T74_0_0[0:0] = T74[0:0]' ;
X                                V1_T74_0_0[0:0] = T74[0:0] ;
X                                V0_T73_0_0[0:0] = T73[0:0]' ;
X                                V1_T73_0_0[0:0] = T73[0:0] ;
X                                V0_T72_0_0[0:0] = T72[0:0]' ;
X                                V1_T72_0_0[0:0] = T72[0:0] ;
X                                V0_T71_0_0[0:0] = T71[0:0]' ;
X                                V1_T71_0_0[0:0] = T71[0:0] ;
X                                V0_preamble_3_0_0[0:0] = preamble_3[0:0]' ;
X                                V0100000_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]'  bit_count_B[1:1] ) bit_count_B[2:2]' ) bit_count_B[3:3]' ) bit_count_B[4:4]' ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                                V1111100_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]  bit_count_B[1:1] ) bit_count_B[2:2] ) bit_count_B[3:3] ) bit_count_B[4:4] ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                                V0010000_bit_count_B_0_6[0:0] = ((((((bit_count_B[0:0]'  bit_count_B[1:1]' ) bit_count_B[2:2] ) bit_count_B[3:3]' ) bit_count_B[4:4]' ) bit_count_B[5:5]' ) bit_count_B[6:6]' );
X                                V1_bit_in_0_0[0:0] = bit_in[0:0] ;
X                                .attribute delay 20 level;
X                                .attribute area 503 literal;
X                              .endoperation;
X                            .endnode;
X
X                            .node 3 nop;	#	sink node
X                              .successors ;	#  predecessors 2 
X                            .endnode;
X
X                            .endpolargraph;
X                          .attribute hercules loop_load int_shift_reg[19:19] M8[19:19] ;
X                          .attribute hercules loop_load int_shift_reg[18:18] M8[18:18] ;
X                          .attribute hercules loop_load int_shift_reg[17:17] M8[17:17] ;
X                          .attribute hercules loop_load int_shift_reg[16:16] M8[16:16] ;
X                          .attribute hercules loop_load int_shift_reg[15:15] M8[15:15] ;
X                          .attribute hercules loop_load int_shift_reg[14:14] M8[14:14] ;
X                          .attribute hercules loop_load int_shift_reg[13:13] M8[13:13] ;
X                          .attribute hercules loop_load int_shift_reg[12:12] M8[12:12] ;
X                          .attribute hercules loop_load int_shift_reg[11:11] M8[11:11] ;
X                          .attribute hercules loop_load int_shift_reg[10:10] M8[10:10] ;
X                          .attribute hercules loop_load int_shift_reg[9:9] M8[9:9] ;
X                          .attribute hercules loop_load int_shift_reg[8:8] M8[8:8] ;
X                          .attribute hercules loop_load int_shift_reg[7:7] M8[7:7] ;
X                          .attribute hercules loop_load int_shift_reg[6:6] M8[6:6] ;
X                          .attribute hercules loop_load int_shift_reg[5:5] M8[5:5] ;
X                          .attribute hercules loop_load int_shift_reg[4:4] M8[4:4] ;
X                          .attribute hercules loop_load int_shift_reg[3:3] M8[3:3] ;
X                          .attribute hercules loop_load int_shift_reg[2:2] M8[2:2] ;
X                          .attribute hercules loop_load int_shift_reg[1:1] M8[1:1] ;
X                          .attribute hercules loop_load int_shift_reg[0:0] bit_in[0:0] ;
X                          .attribute hercules loop_load int_load_B[0:0] X32[0:0] ;
X                          .attribute hercules loop_load int_load_A[0:0] X33[0:0] ;
X                          .attribute hercules loop_load int_parity[0:0] X28[0:0] ;
X                          .attribute hercules loop_load int_rx_status[2:2] X31[0:0] ;
X                          .attribute hercules loop_load int_rx_status[1:1] X30[0:0] ;
X                          .attribute hercules loop_load int_rx_status[0:0] X29[0:0] ;
X                          .attribute hercules loop_load bit_count_B[6:6] T84[6:6] ;
X                          .attribute hercules loop_load bit_count_B[5:5] T84[5:5] ;
X                          .attribute hercules loop_load bit_count_B[4:4] T84[4:4] ;
X                          .attribute hercules loop_load bit_count_B[3:3] T84[3:3] ;
X                          .attribute hercules loop_load bit_count_B[2:2] T84[2:2] ;
X                          .attribute hercules loop_load bit_count_B[1:1] T84[1:1] ;
X                          .attribute hercules loop_load bit_count_B[0:0] T84[0:0] ;
X                          .endloop;
X                        .endnode;
X
X                        .node 9 operation;
X                          .inputs T48[0:0] T48[1:1] T48[2:2] T48[3:3] 
X	T48[4:4] T48[5:5] T48[6:6] T48[7:7] 
X	T48[8:8] ;
X                          .outputs T88[0:0] ;
X                          .successors 10 ;	#  predecessors 8 
X                          .operation logic 14 ;
X                            #	Expression 0
X                            c_0_T87[0:0] =  0 ;
X                            d_0_T87[0:0] =  1 ;
X                            c_1_T87[0:0] = ((c_0_T87[0:0]  ( 1 +T48[0:0]' ))+(d_0_T87[0:0]  ( 1  T48[0:0]' )));
X                            d_1_T87[0:0] = ((c_0_T87[0:0]  ( 1'  T48[0:0] ))+(d_0_T87[0:0]  ( 1' +T48[0:0] )));
X                            c_2_T87[0:0] = ((c_1_T87[0:0]  ( 1 +T48[1:1]' ))+(d_1_T87[0:0]  ( 1  T48[1:1]' )));
X                            d_2_T87[0:0] = ((c_1_T87[0:0]  ( 1'  T48[1:1] ))+(d_1_T87[0:0]  ( 1' +T48[1:1] )));
X                            c_3_T87[0:0] = ((c_2_T87[0:0]  ( 1 +T48[2:2]' ))+(d_2_T87[0:0]  ( 1  T48[2:2]' )));
X                            d_3_T87[0:0] = ((c_2_T87[0:0]  ( 1'  T48[2:2] ))+(d_2_T87[0:0]  ( 1' +T48[2:2] )));
X                            c_4_T87[0:0] = ((c_3_T87[0:0]  ( 1 +T48[3:3]' ))+(d_3_T87[0:0]  ( 1  T48[3:3]' )));
X                            d_4_T87[0:0] = ((c_3_T87[0:0]  ( 1'  T48[3:3] ))+(d_3_T87[0:0]  ( 1' +T48[3:3] )));
X                            c_5_T87[0:0] = ((c_4_T87[0:0]  ( 1 +T48[4:4]' ))+(d_4_T87[0:0]  ( 1  T48[4:4]' )));
X                            d_5_T87[0:0] = ((c_4_T87[0:0]  ( 1'  T48[4:4] ))+(d_4_T87[0:0]  ( 1' +T48[4:4] )));
X                            c_6_T87[0:0] = ((c_5_T87[0:0]  ( 1 +T48[5:5]' ))+(d_5_T87[0:0]  ( 1  T48[5:5]' )));
X                            d_6_T87[0:0] = ((c_5_T87[0:0]  ( 1'  T48[5:5] ))+(d_5_T87[0:0]  ( 1' +T48[5:5] )));
X                            c_7_T87[0:0] = ((c_6_T87[0:0]  ( 0 +T48[6:6]' ))+(d_6_T87[0:0]  ( 0  T48[6:6]' )));
X                            d_7_T87[0:0] = ((c_6_T87[0:0]  ( 0'  T48[6:6] ))+(d_6_T87[0:0]  ( 0' +T48[6:6] )));
X                            c_8_T87[0:0] = ((c_7_T87[0:0]  ( 1 +T48[7:7]' ))+(d_7_T87[0:0]  ( 1  T48[7:7]' )));
X                            d_8_T87[0:0] = ((c_7_T87[0:0]  ( 1'  T48[7:7] ))+(d_7_T87[0:0]  ( 1' +T48[7:7] )));
X                            c_9_T87[0:0] = ((c_8_T87[0:0]  ( 0 +T48[8:8]' ))+(d_8_T87[0:0]  ( 0  T48[8:8]' )));
X                            d_9_T87[0:0] = ((c_8_T87[0:0]  ( 0'  T48[8:8] ))+(d_8_T87[0:0]  ( 0' +T48[8:8] )));
X                            T87[0:0] = c_9_T87[0:0] ;
X                            T88[0:0] = T87[0:0]' ;
X                            .attribute delay 19 level;
X                            .attribute area 202 literal;
X                          .endoperation;
X                        .endnode;
X
X                        .node 10 nop;	#	sink node
X                          .successors ;	#  predecessors 9 
X                        .endnode;
X
X                        .attribute constraint delay 4 1 cycles;
X                        .attribute constraint delay 7 1 cycles;
X                        .endpolargraph;
X                      .attribute hercules loop_load frame_counter[8:8] T48[8:8] ;
X                      .attribute hercules loop_load frame_counter[7:7] T48[7:7] ;
X                      .attribute hercules loop_load frame_counter[6:6] T48[6:6] ;
X                      .attribute hercules loop_load frame_counter[5:5] T48[5:5] ;
X                      .attribute hercules loop_load frame_counter[4:4] T48[4:4] ;
X                      .attribute hercules loop_load frame_counter[3:3] T48[3:3] ;
X                      .attribute hercules loop_load frame_counter[2:2] T48[2:2] ;
X                      .attribute hercules loop_load frame_counter[1:1] T48[1:1] ;
X                      .attribute hercules loop_load frame_counter[0:0] T48[0:0] ;
X                      .endloop;
X                    .endnode;
X
X                    .node 10 nop;	#	sink node
X                      .successors ;	#  predecessors 9 
X                    .endnode;
X
X                    .attribute constraint delay 4 1 cycles;
X                    .attribute constraint delay 7 1 cycles;
X                    .endpolargraph;
X                  .endcase;
X                  .case 0 ;
X                    #	Index 15
X                    .polargraph 1 2;
X                    #	2 nodes
X                    .node 1 nop;	#	source node
X                      .successors 2 ;
X                    .endnode;
X
X                    .node 2 nop;	#	sink node
X                      .successors ;	#  predecessors 1 
X                    .endnode;
X
X                    .endpolargraph;
X                  .endcase;
X                  .endcond;
X                .endnode;
X
X                .node 4 operation;
X                  .inputs T9[0:0] int_clock_out[0:0] X1[0:0] ;
X                  .outputs X34[0:0] ;
X                  .successors 5 ;	#  predecessors 3 
X                  .operation logic 15 ;
X                    #	Expression 0
X                    X34[0:0] = ((V1_T9_0_0[0:0]  int_clock_out[0:0] )+(V0_T9_0_0[0:0]  X1[0:0] ));
X                    V0_T9_0_0[0:0] = T9[0:0]' ;
X                    V1_T9_0_0[0:0] = T9[0:0] ;
X                    .attribute delay 2 level;
X                    .attribute area 9 literal;
X                  .endoperation;
X                .endnode;
X
X                .node 5 nop;	#	sink node
X                  .successors ;	#  predecessors 4 
X                .endnode;
X
X                .endpolargraph;
X              .attribute hercules loop_load int_clock_out[0:0] X34[0:0] ;
X              .endloop;
X            .endnode;
X
X            .node 3 nop;	#	sink node
X              .successors ;	#  predecessors 2 
X            .endnode;
X
X            .endpolargraph;
X          .endcase;
X          .case 0 ;
X            #	Index 16
X            .polargraph 1 2;
X            #	2 nodes
X            .node 1 nop;	#	source node
X              .successors 2 ;
X            .endnode;
X
X            .node 2 nop;	#	sink node
X              .successors ;	#  predecessors 1 
X            .endnode;
X
X            .endpolargraph;
X          .endcase;
X          .endcond;
X        .endnode;
X
X        .node 5 nop;	#	sink node
X          .successors ;	#  predecessors 4 
X        .endnode;
X
X        .endpolargraph;
X      .endcase;
X      .endcond;
X    .endnode;
X
X    .node 3 operation;
X      .inputs T1[0:0] int_shift_reg[19:19] int_shift_reg[18:18] int_shift_reg[17:17] 
X	int_shift_reg[16:16] int_shift_reg[15:15] int_shift_reg[14:14] int_shift_reg[13:13] 
X	int_shift_reg[12:12] int_shift_reg[11:11] int_shift_reg[10:10] int_shift_reg[9:9] 
X	int_shift_reg[8:8] int_shift_reg[7:7] int_shift_reg[6:6] int_shift_reg[5:5] 
X	int_shift_reg[4:4] int_shift_reg[3:3] int_shift_reg[2:2] int_shift_reg[1:1] 
X	int_shift_reg[0:0] int_load_buff[0:0] int_load_B[0:0] int_load_A[0:0] 
X	int_parity[0:0] int_rx_status[3:3] int_rx_status[2:2] int_rx_status[1:1] 
X	int_rx_status[0:0] frame_counter[8:8] frame_counter[7:7] frame_counter[6:6] 
X	frame_counter[5:5] frame_counter[4:4] frame_counter[3:3] frame_counter[2:2] 
X	frame_counter[1:1] frame_counter[0:0] bit_count_B[6:6] bit_count_B[5:5] 
X	bit_count_B[4:4] bit_count_B[3:3] bit_count_B[2:2] bit_count_B[1:1] 
X	bit_count_B[0:0] bit_count_A[6:6] bit_count_A[5:5] bit_count_A[4:4] 
X	bit_count_A[3:3] bit_count_A[2:2] bit_count_A[1:1] bit_count_A[0:0] 
X	;
X      .outputs M9[0:0] M9[1:1] M9[2:2] M9[3:3] 
X	M9[4:4] M9[5:5] M9[6:6] M10[0:0] 
X	M10[1:1] M10[2:2] M10[3:3] M10[4:4] 
X	M10[5:5] M10[6:6] M11[0:0] M11[1:1] 
X	M11[2:2] M11[3:3] M11[4:4] M11[5:5] 
X	M11[6:6] M11[7:7] M11[8:8] M12[0:0] 
X	M12[1:1] M12[2:2] M12[3:3] M13[0:0] 
X	M13[1:1] M13[2:2] M13[3:3] M13[4:4] 
X	M13[5:5] M13[6:6] M13[7:7] M13[8:8] 
X	M13[9:9] M13[10:10] M13[11:11] M13[12:12] 
X	M13[13:13] M13[14:14] M13[15:15] M13[16:16] 
X	M13[17:17] M13[18:18] M13[19:19] X55[0:0] 
X	X56[0:0] X57[0:0] X58[0:0] ;
X      .successors 4 ;	#  predecessors 2 
X      .operation logic 16 ;
X        #	Expression 0
X        M9[0:0] = X85[0:0] ;
X        M9[1:1] = X84[0:0] ;
X        M9[2:2] = X83[0:0] ;
X        M9[3:3] = X82[0:0] ;
X        M9[4:4] = X81[0:0] ;
X        M9[5:5] = X80[0:0] ;
X        M9[6:6] = X79[0:0] ;
X        M10[0:0] = X78[0:0] ;
X        M10[1:1] = X77[0:0] ;
X        M10[2:2] = X76[0:0] ;
X        M10[3:3] = X75[0:0] ;
X        M10[4:4] = X74[0:0] ;
X        M10[5:5] = X73[0:0] ;
X        M10[6:6] = X72[0:0] ;
X        M11[0:0] = X71[0:0] ;
X        M11[1:1] = X70[0:0] ;
X        M11[2:2] = X69[0:0] ;
X        M11[3:3] = X68[0:0] ;
X        M11[4:4] = X67[0:0] ;
X        M11[5:5] = X66[0:0] ;
X        M11[6:6] = X65[0:0] ;
X        M11[7:7] = X64[0:0] ;
X        M11[8:8] = X63[0:0] ;
X        M12[0:0] = X62[0:0] ;
X        M12[1:1] = X61[0:0] ;
X        M12[2:2] = X60[0:0] ;
X        M12[3:3] = X59[0:0] ;
X        M13[0:0] = X54[0:0] ;
X        M13[1:1] = X53[0:0] ;
X        M13[2:2] = X52[0:0] ;
X        M13[3:3] = X51[0:0] ;
X        M13[4:4] = X50[0:0] ;
X        M13[5:5] = X49[0:0] ;
X        M13[6:6] = X48[0:0] ;
X        M13[7:7] = X47[0:0] ;
X        M13[8:8] = X46[0:0] ;
X        M13[9:9] = X45[0:0] ;
X        M13[10:10] = X44[0:0] ;
X        M13[11:11] = X43[0:0] ;
X        M13[12:12] = X42[0:0] ;
X        M13[13:13] = X41[0:0] ;
X        M13[14:14] = X40[0:0] ;
X        M13[15:15] = X39[0:0] ;
X        M13[16:16] = X38[0:0] ;
X        M13[17:17] = X37[0:0] ;
X        M13[18:18] = X36[0:0] ;
X        M13[19:19] = X35[0:0] ;
X        X35[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[19:19] ));
X        X36[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[18:18] ));
X        X37[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[17:17] ));
X        X38[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[16:16] ));
X        X39[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[15:15] ));
X        X40[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[14:14] ));
X        X41[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[13:13] ));
X        X42[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[12:12] ));
X        X43[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[11:11] ));
X        X44[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[10:10] ));
X        X45[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[9:9] ));
X        X46[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[8:8] ));
X        X47[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[7:7] ));
X        X48[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[6:6] ));
X        X49[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[5:5] ));
X        X50[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[4:4] ));
X        X51[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[3:3] ));
X        X52[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[2:2] ));
X        X53[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[1:1] ));
X        X54[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_shift_reg[0:0] ));
X        X55[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_load_buff[0:0] ));
X        X56[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_load_B[0:0] ));
X        X57[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_load_A[0:0] ));
X        X58[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_parity[0:0] ));
X        X59[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_rx_status[3:3] ));
X        X60[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_rx_status[2:2] ));
X        X61[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_rx_status[1:1] ));
X        X62[0:0] = ( 0 +(V0_T1_0_0[0:0]  int_rx_status[0:0] ));
X        X63[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[8:8] ));
X        X64[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[7:7] ));
X        X65[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[6:6] ));
X        X66[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[5:5] ));
X        X67[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[4:4] ));
X        X68[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[3:3] ));
X        X69[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[2:2] ));
X        X70[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[1:1] ));
X        X71[0:0] = ( 0 +(V0_T1_0_0[0:0]  frame_counter[0:0] ));
X        X72[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[6:6] ));
X        X73[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[5:5] ));
X        X74[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[4:4] ));
X        X75[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[3:3] ));
X        X76[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[2:2] ));
X        X77[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[1:1] ));
X        X78[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_B[0:0] ));
X        X79[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[6:6] ));
X        X80[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[5:5] ));
X        X81[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[4:4] ));
X        X82[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[3:3] ));
X        X83[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[2:2] ));
X        X84[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[1:1] ));
X        X85[0:0] = ( 0 +(V0_T1_0_0[0:0]  bit_count_A[0:0] ));
X        V0_T1_0_0[0:0] = T1[0:0]' ;
X        .attribute delay 2 level;
X        .attribute area 303 literal;
X      .endoperation;
X    .endnode;
X
X    .node 4 operation;
X      .inputs M13[0:19] X55[0:0] X56[0:0] X57[0:0] 
X	X58[0:0] M12[0:3] M11[0:8] M10[0:6] 
X	M9[0:6] ;
X      .outputs int_shift_reg[0:19] int_load_buff[0:0] int_load_B[0:0] int_load_A[0:0] 
X	int_parity[0:0] int_rx_status[0:3] frame_counter[0:8] bit_count_B[0:6] 
X	bit_count_A[0:6] ;
X      .successors 5 ;	#  predecessors 3 
X      .attribute constraint delay 4 1 cycles;
X      .operation load_register;
X    .endnode;
X
X    .node 5 nop;	#	sink node
X      .successors ;	#  predecessors 4 
X    .endnode;
X
X    .attribute constraint delay 4 1 cycles;
X    .attribute hercules direct_connect clock_out[0:0] int_clock_out[0:0] ;
X    .attribute hercules direct_connect rx_status[0:0] int_rx_status[0:0] ;
X    .attribute hercules direct_connect rx_status[1:1] int_rx_status[1:1] ;
X    .attribute hercules direct_connect rx_status[2:2] int_rx_status[2:2] ;
X    .attribute hercules direct_connect rx_status[3:3] int_rx_status[3:3] ;
X    .attribute hercules direct_connect parity[0:0] int_parity[0:0] ;
X    .attribute hercules direct_connect load_A[0:0] int_load_A[0:0] ;
X    .attribute hercules direct_connect load_B[0:0] int_load_B[0:0] ;
X    .attribute hercules direct_connect load_buff[0:0] int_load_buff[0:0] ;
X    .attribute hercules direct_connect shift_reg[0:0] int_shift_reg[0:0] ;
X    .attribute hercules direct_connect shift_reg[1:1] int_shift_reg[1:1] ;
X    .attribute hercules direct_connect shift_reg[2:2] int_shift_reg[2:2] ;
X    .attribute hercules direct_connect shift_reg[3:3] int_shift_reg[3:3] ;
X    .attribute hercules direct_connect shift_reg[4:4] int_shift_reg[4:4] ;
X    .attribute hercules direct_connect shift_reg[5:5] int_shift_reg[5:5] ;
X    .attribute hercules direct_connect shift_reg[6:6] int_shift_reg[6:6] ;
X    .attribute hercules direct_connect shift_reg[7:7] int_shift_reg[7:7] ;
X    .attribute hercules direct_connect shift_reg[8:8] int_shift_reg[8:8] ;
X    .attribute hercules direct_connect shift_reg[9:9] int_shift_reg[9:9] ;
X    .attribute hercules direct_connect shift_reg[10:10] int_shift_reg[10:10] ;
X    .attribute hercules direct_connect shift_reg[11:11] int_shift_reg[11:11] ;
X    .attribute hercules direct_connect shift_reg[12:12] int_shift_reg[12:12] ;
X    .attribute hercules direct_connect shift_reg[13:13] int_shift_reg[13:13] ;
X    .attribute hercules direct_connect shift_reg[14:14] int_shift_reg[14:14] ;
X    .attribute hercules direct_connect shift_reg[15:15] int_shift_reg[15:15] ;
X    .attribute hercules direct_connect shift_reg[16:16] int_shift_reg[16:16] ;
X    .attribute hercules direct_connect shift_reg[17:17] int_shift_reg[17:17] ;
X    .attribute hercules direct_connect shift_reg[18:18] int_shift_reg[18:18] ;
X    .attribute hercules direct_connect shift_reg[19:19] int_shift_reg[19:19] ;
X    .attribute hercules direct_connect frame_ofs[0:0] frame_counter[0:0] ;
X    .attribute hercules direct_connect frame_ofs[1:1] frame_counter[1:1] ;
X    .attribute hercules direct_connect peek_A[0:0] bit_count_A[0:0] ;
X    .attribute hercules direct_connect peek_A[1:1] bit_count_A[1:1] ;
X    .attribute hercules direct_connect peek_A[2:2] bit_count_A[2:2] ;
X    .attribute hercules direct_connect peek_A[3:3] bit_count_A[3:3] ;
X    .attribute hercules direct_connect peek_A[4:4] bit_count_A[4:4] ;
X    .attribute hercules direct_connect peek_A[5:5] bit_count_A[5:5] ;
X    .attribute hercules direct_connect peek_A[6:6] bit_count_A[6:6] ;
X    .attribute hercules direct_connect peek_B[0:0] bit_count_B[0:0] ;
X    .attribute hercules direct_connect peek_B[1:1] bit_count_B[1:1] ;
X    .attribute hercules direct_connect peek_B[2:2] bit_count_B[2:2] ;
X    .attribute hercules direct_connect peek_B[3:3] bit_count_B[3:3] ;
X    .attribute hercules direct_connect peek_B[4:4] bit_count_B[4:4] ;
X    .attribute hercules direct_connect peek_B[5:5] bit_count_B[5:5] ;
X    .attribute hercules direct_connect peek_B[6:6] bit_count_B[6:6] ;
X    .endpolargraph;
X.endmodel daio_receiver ;
END_OF_FILE
if test 96602 -ne `wc -c <'daio_receiver/daio_receiver.sif'`; then
    echo shar: \"'daio_receiver/daio_receiver.sif'\" unpacked with wrong size!
fi
# end of 'daio_receiver/daio_receiver.sif'
fi
if test -f 'daio_receiver/daio_receiver.out.gold' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'daio_receiver/daio_receiver.out.gold'\"
else
echo shar: Extracting \"'daio_receiver/daio_receiver.out.gold'\" \(92480 characters\)
sed "s/^X//" >'daio_receiver/daio_receiver.out.gold' <<'END_OF_FILE'
X83 ariadne extract
Xreset[0:0]
XHEX xtal xtal[0:0] xtal[1:1] xtal[2:2] xtal[3:3]
XHEX rx_control rx_control[0:0] rx_control[1:1] rx_control[2:2] rx_control[3:3]
XHEX rx_status rx_status[0:0] rx_status[1:1] rx_status[2:2] rx_status[3:3]
Xpreamble_1[0:0]
Xpreamble_2[0:0]
Xpreamble_3[0:0]
Xcarrier_loss[0:0]
Xbiphase_violation[0:0]
Xclock_out[0:0]
Xparity[0:0]
Xload_A[0:0]
Xload_B[0:0]
Xload_buff[0:0]
Xbit_in[0:0]
Xshift_reg[0:0]
Xshift_reg[1:1]
Xshift_reg[2:2]
Xshift_reg[3:3]
Xshift_reg[4:4]
Xshift_reg[5:5]
Xshift_reg[6:6]
Xshift_reg[7:7]
Xshift_reg[8:8]
Xshift_reg[9:9]
Xshift_reg[10:10]
Xshift_reg[11:11]
Xshift_reg[12:12]
Xshift_reg[13:13]
Xshift_reg[14:14]
Xshift_reg[15:15]
Xshift_reg[16:16]
Xshift_reg[17:17]
Xshift_reg[18:18]
Xshift_reg[19:19]
XHEX peek_A0 peek_A[0:0] peek_A[1:1] peek_A[2:2] peek_A[3:3]
XOCT peek_A1 peek_A[4:4] peek_A[5:5] peek_A[6:6]
XHEX bit_count_A0 bit_count_A[0:0] bit_count_A[1:1] bit_count_A[2:2] bit_count_A[3:3]
XOCT bit_count_A1 bit_count_A[4:4] bit_count_A[5:5] bit_count_A[6:6]
XHEX peek_B0 peek_B[0:0] peek_B[1:1] peek_B[2:2] peek_B[3:3]
XOCT peek_B1 peek_B[4:4] peek_B[5:5] peek_B[6:6]
XHEX bit_count_B0 bit_count_B[0:0] bit_count_B[1:1] bit_count_B[2:2] bit_count_B[3:3]
XOCT bit_count_B1 bit_count_B[4:4] bit_count_B[5:5] bit_count_B[6:6]
XHEX frame_counter0 frame_counter[0:0] frame_counter[1:1] frame_counter[2:2] frame_counter[3:3]
XHEX frame_counter1 frame_counter[4:4] frame_counter[5:5] frame_counter[6:6] frame_counter[7:7]
Xframe_counter[8:8]
Xframe_ofs[0:0]
Xframe_ofs[1:1]
X     0:00000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     1:01000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     2:00000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     3:01000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     4:00000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     5:01000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     6:00000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     7:01000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     8:00000000000000000000000000000000000000000000000000000000000000000000000000000000000
X     9:01000000000000000000000000000000000000000000000000000000000000000000000000000000000
X    10:00000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    11:01000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    12:00000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    13:01000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    14:00000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    15:01000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    16:10000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    17:11000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    18:10000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    19:11000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    20:10000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    21:11000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    22:00000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    23:01000001100000000000000000000000000000000000000000000000000000000000000000000000000
X    24:00000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    25:01000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    26:00000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    27:01000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    28:00000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    29:01000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    30:00000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    31:01000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    32:00000001100000000100000000000000000000000000000000000000000000000000000000000000000
X    33:01000001100000000100000000000000000000000000000000000000000000000000000000000000000
X    34:00000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    35:01000001100000000000000100000000000000000000000000000000000000000000000000000000000
X    36:00000001100000000100000100000000000000000000000000000000000000000000000000000000000
X    37:01000001100000000100000100000000000000000000000000000000000000000000000000000000000
X    38:00000001100001000000000000000000000000000000001000000100000000000000000000000000000
X    39:01000001100001000000000000000000000000000000101000010100000000000000000000000000000
X    40:00000001100000000001000110000000000000000000011000001100000000000000000000000000000
X    41:01000001100000000000000111000000000000000000111000011100000000000000000000000000000
X    42:00000001100000000001000111100000000000000000000100000010000000000000000000000000000
X    43:01000001100000000000000111110000000000000000100100010010000000000000000000000000000
X    44:00000001100000000001000111111000000000000000010100001010000000000000000000000000000
X    45:01000001100000000000000111111100000000000000110100011010000000000000000000000000000
X    46:00000001100000000001000111111110000000000000001100000110000000000000000000000000000
X    47:01000001100000000000000111111111000000000000101100010110000000000000000000000000000
X    48:00000001100000000001000111111111100000000000011100001110000000000000000000000000000
X    49:01000001100000000000000111111111110000000000111100011110000000000000000000000000000
X    50:00000001100000000001000111111111111000000000000010000001000000000000000000000000000
X    51:01000001100000000000000111111111111100000000100010010001000000000000000000000000000
X    52:00000001100000000001000111111111111110000000010010001001000000000000000000000000000
X    53:01000001100000000000000111111111111111000000110010011001000000000000000000000000000
X    54:00000001100000000001000111111111111111100000001010000101000000000000000000000000000
X    55:01000001100000000000000111111111111111110000101010010101000000000000000000000000000
X    56:00000001100000000001000111111111111111111000011010001101000000000000000000000000000
X    57:01000001100000000000000111111111111111111100111010011101000000000000000000000000000
X    58:00000001100000000000000001111111111111111110000110000011000000000000000000000000000
X    59:01000001100000000000000000111111111111111111100110010011000000000000000000000000000
X    60:00000001100000000000000000011111111111111111010110001011000000000000000000000000000
X    61:01000001100000000000000000001111111111111111110110011011000000000000000000000000000
X    62:00000001100000000001000110000111111111111111001110000111000000000000000000000000000
X    63:01000001100000000000000111000011111111111111101110010111000000000000000000000000000
X    64:00000001100000000000000001100001111111111111011110001111000000000000000000000000000
X    65:01000001100000000000000000110000111111111111111110011111000000000000000000000000000
X    66:00000001100000000000100000001100001111111111000001000000101000000100000010000000010
X    67:01000001100000000000100000000110000111111111000001000000100100000010000010000000010
X    68:00000001100000000001000110000011000011111111000001000000101100000110000010000000010
X    69:01000001100000000000000111000001100001111111000001000000100010000001000010000000010
X    70:00000001100100000001000111100000110000111111000001000000101010000101000010000000010
X    71:01000001100100000000000111110000011000011111000001000000100110000011000010000000010
X    72:00000001100100000001000111111000001100001111000001000000101110000111000010000000010
X    73:01000001100100000000000111111100000110000111000001000000100001000000100010000000010
X    74:00000001100100000001000111111110000011000011000001000000101001000100100010000000010
X    75:01000001100100000000000111111111000001100001000001000000100101000010100010000000010
X    76:00000001100100000001000111111111100000110000000001000000101101000110100010000000010
X    77:01000001100100000000000111111111110000011000000001000000100011000001100010000000010
X    78:00000001100100000001000111111111111000001100000001000000101011000101100010000000010
X    79:01000001100100000000000111111111111100000110000001000000100111000011100010000000010
X    80:00000001100100000000000001111111111110000011000001000000101111000111100010000000010
X    81:01000001100100000000000000111111111111000001000001000000100000100000010010000000010
X    82:00000001100100000000000000011111111111100000000001000000101000100100010010000000010
X    83:01000001100100000000000000001111111111110000000001000000100100100010010010000000010
X    84:00000001100100000000000000000111111111111000000001000000101100100110010010000000010
X    85:01000001100100000000000000000011111111111100000001000000100010100001010010000000010
X    86:00000001100100000000000000000001111111111110000001000000101010100101010010000000010
X    87:01000001100100000000000000000000111111111111000001000000100110100011010010000000010
X    88:00000001100100000001000110000000011111111111000001000000101110100111010010000000010
X    89:01000001100100000000000111000000001111111111000001000000100001100000110010000000010
X    90:00000001100100000001000111100000000111111111000001000000101001100100110010000000010
X    91:01000001100100000000000111110000000011111111000001000000100101100010110010000000010
X    92:00000001100100000001000111111000000001111111000001000000101101100110110010000000010
X    93:01000001100100000000000111111100000000111111000001000000100011100001110010000000010
X    94:00000001100100000001000111111110000000011111000001000000101011100101110010000000010
X    95:01000001100100000000000111111111000000001111000001000000100111100011110010000000010
X    96:00000001101100000100000001111111100000000111000001000000101111100111110010000000010
X    97:01000001101100000100010000011111111000000001100000010000000000010000001010000000010
X    98:00000001101100000101010110001111111100000000010000001000000000010000001010000000010
X    99:01000001101100000100000111000111111110000000110000011000000000010000001010000000010
X   100:00000001101100000001000111100011111111000000001000000100000000010000001010000000010
X   101:01000001101100000000000111110001111111100000101000010100000000010000001010000000010
X   102:00000001101100010000000001111000111111110000011000001100000000010000001010000000010
X   103:01000001101100010000000000111100011111111000111000011100000000010000001010000000010
X   104:00000001101100000001000110011110001111111100000100000010000000010000001010000000010
X   105:01000001101100000000000111001111000111111110100100010010000000010000001010000000010
X   106:00000001101100000001000111100111100011111111010100001010000000010000001010000000010
X   107:01000001101100000000000111110011110001111111110100011010000000010000001010000000010
X   108:00000001101100000001000111111001111000111111001100000110000000010000001010000000010
X   109:01000001101100000000000111111100111100011111101100010110000000010000001010000000010
X   110:00000001101100000001000111111110011110001111011100001110000000010000001010000000010
X   111:01000001101100000000000111111111001111000111111100011110000000010000001010000000010
X   112:00000001101100000001000111111111100111100011000010000001000000010000001010000000010
X   113:01000001101100000000000111111111110011110001100010010001000000010000001010000000010
X   114:00000001101100000001000111111111111001111000010010001001000000010000001010000000010
X   115:01000001101100000000000111111111111100111100110010011001000000010000001010000000010
X   116:00000001101100000001000111111111111110011110001010000101000000010000001010000000010
X   117:01000001101100000000000111111111111111001111101010010101000000010000001010000000010
X   118:00000001101100000001000111111111111111100111011010001101000000010000001010000000010
X   119:01000001101100000000000111111111111111110011111010011101000000010000001010000000010
X   120:00000001101100000000000001111111111111111001000110000011000000010000001010000000010
X   121:01000001101100000000000000111111111111111100100110010011000000010000001010000000010
X   122:00000001101100000000000000011111111111111110010110001011000000010000001010000000010
X   123:01000001101100000000000000001111111111111111110110011011000000010000001010000000010
X   124:00000001101100000000000000000111111111111111001110000111000000010000001010000000010
X   125:01000001101100000000000000000011111111111111101110010111000000010000001010000000010
X   126:00000001101100000000000000000001111111111111011110001111000000010000001010000000010
X   127:01000001101100000000000000000000111111111111111110011111000000010000001010000000010
X   128:00000001101100000000100111000000001111111111000001000000101000000100000010000000010
X   129:01000001101100000001100111100000000111111111000001000000100100000010000010000000010
X   130:00000001101100000001000001110000000011111111000001000000101100000110000010000000010
X   131:01000001101100000001000000111000000001111111000001000000100010000001000010000000010
X   132:00000001101100000000000110011100000000111111000001000000101010000101000010000000010
X   133:01000001101100000001000111001110000000011111000001000000100110000011000010000000010
X   134:00000001101100000001000001100111000000001111000001000000101110000111000010000000010
X   135:01000001101100000001000000110011100000000111000001000000100001000000100010000000010
X   136:00000001101100000001000000011001110000000011000001000000101001000100100010000000010
X   137:01000001101100000001000000001100111000000001000001000000100101000010100010000000010
X   138:00000001101100000000000110000110011100000000000001000000101101000110100010000000010
X   139:01000001101100000001000111000011001110000000000001000000100011000001100010000000010
X   140:00000001101100000001000001100001100111000000000001000000101011000101100010000000010
X   141:01000001101100000001000000110000110011100000000001000000100111000011100010000000010
X   142:00000001101100000000000110011000011001110000000001000000101111000111100010000000010
X   143:01000001101100000001000111001100001100111000000001000000100000100000010010000000010
X   144:00000001101100000001000001100110000110011100000001000000101000100100010010000000010
X   145:01000001101100000001000000110011000011001110000001000000100100100010010010000000010
X   146:00000001101100000001000000011001100001100111000001000000101100100110010010000000010
X   147:01000001101100000001000000001100110000110011000001000000100010100001010010000000010
X   148:00000001101100000001000000000110011000011001000001000000101010100101010010000000010
X   149:01000001101100000001000000000011001100001100000001000000100110100011010010000000010
X   150:00000001101100000000000110000001100110000110000001000000101110100111010010000000010
X   151:01000001101100000001000111000000110011000011000001000000100001100000110010000000010
X   152:00000001101100000000000111100000011001100001000001000000101001100100110010000000010
X   153:01000001101100000001000111110000001100110000000001000000100101100010110010000000010
X   154:00000001101100000000000111111000000110011000000001000000101101100110110010000000010
X   155:01000001101100000001000111111100000011001100000001000000100011100001110010000000010
X   156:00000001101100000000000111111110000001100110000001000000101011100101110010000000010
X   157:01000001101100000001000111111111000000110011000001000000100111100011110010000000010
X   158:00000001101100000001000001111111100000011001000001000000101111100111110010000000010
X   159:01000001101100000001010000111111110000001100000001000000100000010000001001000000001
X   160:00000001101100000100010000011111111000000110100000010000000000010000001001000000001
X   161:01000001101100000100010000001111111100000011010000001000000000010000001001000000001
X   162:00000001101100000101000110000111111110000001110000011000000000010000001001000000001
X   163:01000001101100000100000111000011111111000000001000000100000000010000001001000000001
X   164:00000001101100000000000001100001111111100000101000010100000000010000001001000000001
X   165:01000001101100000000000000110000111111110000011000001100000000010000001001000000001
X   166:00000001101100100001000110011000011111111000111000011100000000010000001001000000001
X   167:01000001101100100000000111001100001111111100000100000010000000010000001001000000001
X   168:00000001101100000001000111100110000111111110100100010010000000010000001001000000001
X   169:01000001101100000000000111110011000011111111010100001010000000010000001001000000001
X   170:00000001101100000001000111111001100001111111110100011010000000010000001001000000001
X   171:01000001101100000000000111111100110000111111001100000110000000010000001001000000001
X   172:00000001101100000001000111111110011000011111101100010110000000010000001001000000001
X   173:01000001101100000000000111111111001100001111011100001110000000010000001001000000001
X   174:00000001101100000001000111111111100110000111111100011110000000010000001001000000001
X   175:01000001101100000000000111111111110011000011000010000001000000010000001001000000001
X   176:00000001101100000001000111111111111001100001100010010001000000010000001001000000001
X   177:01000001101100000000000111111111111100110000010010001001000000010000001001000000001
X   178:00000001101100000001000111111111111110011000110010011001000000010000001001000000001
X   179:01000001101100000000000111111111111111001100001010000101000000010000001001000000001
X   180:00000001101100000001000111111111111111100110101010010101000000010000001001000000001
X   181:01000001101100000000000111111111111111110011011010001101000000010000001001000000001
X   182:00000001101100000001000111111111111111111001111010011101000000010000001001000000001
X   183:01000001101100000000000111111111111111111100000110000011000000010000001001000000001
X   184:00000001101100000001000111111111111111111110100110010011000000010000001001000000001
X   185:01000001101100000000000111111111111111111111010110001011000000010000001001000000001
X   186:00000001101100000000000001111111111111111111110110011011000000010000001001000000001
X   187:01000001101100000000000000111111111111111111001110000111000000010000001001000000001
X   188:00000001101100000000000000011111111111111111101110010111000000010000001001000000001
X   189:01000001101100000000000000001111111111111111011110001111000000010000001001000000001
X   190:00000001101100000001000110000111111111111111111110011111000000010000001001000000001
X   191:01000001101100000001100111110000111111111111000001000000100100000010000001000000001
X   192:00000001101100000001000001111000011111111111000001000000101100000110000001000000001
X   193:01000001101100000001000000111100001111111111000001000000100010000001000001000000001
X   194:00000001101100000001000000011110000111111111000001000000101010000101000001000000001
X   195:01000001101100000001000000001111000011111111000001000000100110000011000001000000001
X   196:00000001101100000000000110000111100001111111000001000000101110000111000001000000001
X   197:01000001101100000001000111000011110000111111000001000000100001000000100001000000001
X   198:00000001101100000000000111100001111000011111000001000000101001000100100001000000001
X   199:01000001101100000001000111110000111100001111000001000000100101000010100001000000001
X   200:00000001101100000000000111111000011110000111000001000000101101000110100001000000001
X   201:01000001101100000001000111111100001111000011000001000000100011000001100001000000001
X   202:00000001101100000000000111111110000111100001000001000000101011000101100001000000001
X   203:01000001101100000001000111111111000011110000000001000000100111000011100001000000001
X   204:00000001101100000000000111111111100001111000000001000000101111000111100001000000001
X   205:01000001101100000001000111111111110000111100000001000000100000100000010001000000001
X   206:00000001101100000000000111111111111000011110000001000000101000100100010001000000001
X   207:01000001101100000001000111111111111100001111000001000000100100100010010001000000001
X   208:00000001101100000001000001111111111110000111000001000000101100100110010001000000001
X   209:01000001101100000001000000111111111111000011000001000000100010100001010001000000001
X   210:00000001101100000001000000011111111111100001000001000000101010100101010001000000001
X   211:01000001101100000001000000001111111111110000000001000000100110100011010001000000001
X   212:00000001101100000001000000000111111111111000000001000000101110100111010001000000001
X   213:01000001101100000001000000000011111111111100000001000000100001100000110001000000001
X   214:00000001101100000001000000000001111111111110000001000000101001100100110001000000001
X   215:01000001101100000001000000000000111111111111000001000000100101100010110001000000001
X   216:00000001101100000000000110000000011111111111000001000000101101100110110001000000001
X   217:01000001101100000001000111000000001111111111000001000000100011100001110001000000001
X   218:00000001101100000000000111100000000111111111000001000000101011100101110001000000001
X   219:01000001101100000001000111110000000011111111000001000000100111100011110001000000001
X   220:00000001101100000000000111111000000001111111000001000000101111100111110001000000001
X   221:01000001101100000001010111111100000000111111000001000000100000010000001011000000011
X   222:00000001101100000001010111111110000000011111100000010000000000010000001011000000011
X   223:01000001101100000000010111111111000000001111010000001000000000010000001011000000011
X   224:00000001101100000100000001111111100000000111110000011000000000010000001011000000011
X   225:01000001101100000100000000111111110000000011001000000100000000010000001011000000011
X   226:00000001101100000101000110011111111000000001101000010100000000010000001011000000011
X   227:01000001101100000100000111001111111100000000011000001100000000010000001011000000011
X   228:00000001101100000001000111100111111110000000111000011100000000010000001011000000011
X   229:01000001101100000000000111110011111111000000000100000010000000010000001011000000011
X   230:00000001101100010000000001111001111111100000100100010010000000010000001011000000011
X   231:01000001101100010000000000111100111111110000010100001010000000010000001011000000011
X   232:00000001101100000001000110011110011111111000110100011010000000010000001011000000011
X   233:01000001101100000000000111001111001111111100001100000110000000010000001011000000011
X   234:00000001101100000001000111100111100111111110101100010110000000010000001011000000011
X   235:01000001101100000000000111110011110011111111011100001110000000010000001011000000011
X   236:00000001101100000001000111111001111001111111111100011110000000010000001011000000011
X   237:01000001101100000000000111111100111100111111000010000001000000010000001011000000011
X   238:00000001101100000001000111111110011110011111100010010001000000010000001011000000011
X   239:01000001101100000000000111111111001111001111010010001001000000010000001011000000011
X   240:00000001101100000001000111111111100111100111110010011001000000010000001011000000011
X   241:01000001101100000000000111111111110011110011001010000101000000010000001011000000011
X   242:00000001101100000001000111111111111001111001101010010101000000010000001011000000011
X   243:01000001101100000000000111111111111100111100011010001101000000010000001011000000011
X   244:00000001101100000001000111111111111110011110111010011101000000010000001011000000011
X   245:01000001101100000000000111111111111111001111000110000011000000010000001011000000011
X   246:00000001101100000001000111111111111111100111100110010011000000010000001011000000011
X   247:01000001101100000000000111111111111111110011010110001011000000010000001011000000011
X   248:00000001101100000000000001111111111111111001110110011011000000010000001011000000011
X   249:01000001101100000000000000111111111111111100001110000111000000010000001011000000011
X   250:00000001101100000000000000011111111111111110101110010111000000010000001011000000011
X   251:01000001101100000000000000001111111111111111011110001111000000010000001011000000011
X   252:00000001101100000000000000000111111111111111111110011111000000010000001011000000011
X   253:01000001101100000001100000000000111111111111000001000000100100000010000011000000011
X   254:00000001101100000001000000000000011111111111000001000000101100000110000011000000011
X   255:01000001101100000001000000000000001111111111000001000000100010000001000011000000011
X   256:00000001101100000000000110000000000111111111000001000000101010000101000011000000011
X   257:01000001101100000001000111000000000011111111000001000000100110000011000011000000011
X   258:00000001101100000001000001100000000001111111000001000000101110000111000011000000011
X   259:01000001101100000001000000110000000000111111000001000000100001000000100011000000011
X   260:00000001101100000000000110011000000000011111000001000000101001000100100011000000011
X   261:01000001101100000001000111001100000000001111000001000000100101000010100011000000011
X   262:00000001101100000001000001100110000000000111000001000000101101000110100011000000011
X   263:01000001101100000001000000110011000000000011000001000000100011000001100011000000011
X   264:00000001101100000001000000011001100000000001000001000000101011000101100011000000011
X   265:01000001101100000001000000001100110000000000000001000000100111000011100011000000011
X   266:00000001101100000000000110000110011000000000000001000000101111000111100011000000011
X   267:01000001101100000001000111000011001100000000000001000000100000100000010011000000011
X   268:00000001101100000001000001100001100110000000000001000000101000100100010011000000011
X   269:01000001101100000001000000110000110011000000000001000000100100100010010011000000011
X   270:00000001101100000000000110011000011001100000000001000000101100100110010011000000011
X   271:01000001101100000001000111001100001100110000000001000000100010100001010011000000011
X   272:00000001101100000001000001100110000110011000000001000000101010100101010011000000011
X   273:01000001101100000001000000110011000011001100000001000000100110100011010011000000011
X   274:00000001101100000001000000011001100001100110000001000000101110100111010011000000011
X   275:01000001101100000001000000001100110000110011000001000000100001100000110011000000011
X   276:00000001101100000001000000000110011000011001000001000000101001100100110011000000011
X   277:01000001101100000001000000000011001100001100000001000000100101100010110011000000011
X   278:00000001101100000000000110000001100110000110000001000000101101100110110011000000011
X   279:01000001101100000001000111000000110011000011000001000000100011100001110011000000011
X   280:00000001101100000000000111100000011001100001000001000000101011100101110011000000011
X   281:01000001101100000001000111110000001100110000000001000000100111100011110011000000011
X   282:00000001101100000000000111111000000110011000000001000000101111100111110011000000011
X   283:01000001101100000001010111111100000011001100000001000000100000010000001000100000000
X   284:00000001101100000001010111111110000001100110100000010000000000010000001000100000000
X   285:01000001101100000000010111111111000000110011010000001000000000010000001000100000000
X   286:00000001101100000000000001111111100000011001110000011000000000010000001000100000000
X   287:01000001101100000000001000111111110000001100001000000100000000010000001000100000000
X   288:00000001101100000100001000011111111000000110101000010100000000010000001000100000000
X   289:01000001101100000100000000001111111100000011011000001100000000010000001000100000000
X   290:00000001101100000101000110000111111110000001111000011100000000010000001000100000000
X   291:01000001101100000100000111000011111111000000000100000010000000010000001000100000000
X   292:00000001101100000000000001100001111111100000100100010010000000010000001000100000000
X   293:01000001101100000000000000110000111111110000010100001010000000010000001000100000000
X   294:00000001101100100001000110011000011111111000110100011010000000010000001000100000000
X   295:01000001101100100000000111001100001111111100001100000110000000010000001000100000000
X   296:00000001101100000001000111100110000111111110101100010110000000010000001000100000000
X   297:01000001101100000000000111110011000011111111011100001110000000010000001000100000000
X   298:00000001101100000001000111111001100001111111111100011110000000010000001000100000000
X   299:01000001101100000000000111111100110000111111000010000001000000010000001000100000000
X   300:00000001101100000001000111111110011000011111100010010001000000010000001000100000000
X   301:01000001101100000000000111111111001100001111010010001001000000010000001000100000000
X   302:00000001101100000001000111111111100110000111110010011001000000010000001000100000000
X   303:01000001101100000000000111111111110011000011001010000101000000010000001000100000000
X   304:00000001101100000001000111111111111001100001101010010101000000010000001000100000000
X   305:01000001101100000000000111111111111100110000011010001101000000010000001000100000000
X   306:00000001101100000001000111111111111110011000111010011101000000010000001000100000000
X   307:01000001101100000000000111111111111111001100000110000011000000010000001000100000000
X   308:00000001101100000001000111111111111111100110100110010011000000010000001000100000000
X   309:01000001101100000000000111111111111111110011010110001011000000010000001000100000000
X   310:00000001101100000001000111111111111111111001110110011011000000010000001000100000000
X   311:01000001101100000000000111111111111111111100001110000111000000010000001000100000000
X   312:00000001101100000001000111111111111111111110101110010111000000010000001000100000000
X   313:01000001101100000000000111111111111111111111011110001111000000010000001000100000000
X   314:00000001101100000000000001111111111111111111111110011111000000010000001000100000000
X   315:01000001101100000001100000001111111111111111000001000000100100000010000000100000000
X   316:00000001101100000001000000000111111111111111000001000000101100000110000000100000000
X   317:01000001101100000001000000000011111111111111000001000000100010000001000000100000000
X   318:00000001101100000000000110000001111111111111000001000000101010000101000000100000000
X   319:01000001101100000001000111000000111111111111000001000000100110000011000000100000000
X   320:00000001101100000001000001100000011111111111000001000000101110000111000000100000000
X   321:01000001101100000001000000110000001111111111000001000000100001000000100000100000000
X   322:00000001101100000001000000011000000111111111000001000000101001000100100000100000000
X   323:01000001101100000001000000001100000011111111000001000000100101000010100000100000000
X   324:00000001101100000000000110000110000001111111000001000000101101000110100000100000000
X   325:01000001101100000001000111000011000000111111000001000000100011000001100000100000000
X   326:00000001101100000000000111100001100000011111000001000000101011000101100000100000000
X   327:01000001101100000001000111110000110000001111000001000000100111000011100000100000000
X   328:00000001101100000000000111111000011000000111000001000000101111000111100000100000000
X   329:01000001101100000001000111111100001100000011000001000000100000100000010000100000000
X   330:00000001101100000000000111111110000110000001000001000000101000100100010000100000000
X   331:01000001101100000001000111111111000011000000000001000000100100100010010000100000000
X   332:00000001101100000000000111111111100001100000000001000000101100100110010000100000000
X   333:01000001101100000001000111111111110000110000000001000000100010100001010000100000000
X   334:00000001101100000000000111111111111000011000000001000000101010100101010000100000000
X   335:01000001101100000001000111111111111100001100000001000000100110100011010000100000000
X   336:00000001101100000001000001111111111110000110000001000000101110100111010000100000000
X   337:01000001101100000001000000111111111111000011000001000000100001100000110000100000000
X   338:00000001101100000001000000011111111111100001000001000000101001100100110000100000000
X   339:01000001101100000001000000001111111111110000000001000000100101100010110000100000000
X   340:00000001101100000001000000000111111111111000000001000000101101100110110000100000000
X   341:01000001101100000001000000000011111111111100000001000000100011100001110000100000000
X   342:00000001101100000001000000000001111111111110000001000000101011100101110000100000000
X   343:01000001101100000001000000000000111111111111000001000000100111100011110000100000000
X   344:00000001101100000000000110000000011111111111000001000000101111100111110000100000000
X   345:01000001101100000001010111000000001111111111000001000000100000010000001010100000010
X   346:00000001101100000001010111100000000111111111100000010000000000010000001010100000010
X   347:01000001101100000000010111110000000011111111010000001000000000010000001010100000010
X   348:00000001101100000001000111111000000001111111110000011000000000010000001010100000010
X   349:01000001101100000000000111111100000000111111001000000100000000010000001010100000010
X   350:00000001101100000001000111111110000000011111101000010100000000010000001010100000010
X   351:01000001101100000000000111111111000000001111011000001100000000010000001010100000010
X   352:00000001101100000100000001111111100000000111111000011100000000010000001010100000010
X   353:01000001101100000100000000111111110000000011000100000010000000010000001010100000010
X   354:00000001101100000101000110011111111000000001100100010010000000010000001010100000010
X   355:01000001101100000100000111001111111100000000010100001010000000010000001010100000010
X   356:00000001101100000001000111100111111110000000110100011010000000010000001010100000010
X   357:01000001101100000000000111110011111111000000001100000110000000010000001010100000010
X   358:00000001101100010000000001111001111111100000101100010110000000010000001010100000010
X   359:01000001101100010000000000111100111111110000011100001110000000010000001010100000010
X   360:00000001101100000001000110011110011111111000111100011110000000010000001010100000010
X   361:01000001101100000000000111001111001111111100000010000001000000010000001010100000010
X   362:00000001101100000001000111100111100111111110100010010001000000010000001010100000010
X   363:01000001101100000000000111110011110011111111010010001001000000010000001010100000010
X   364:00000001101100000001000111111001111001111111110010011001000000010000001010100000010
X   365:01000001101100000000000111111100111100111111001010000101000000010000001010100000010
X   366:00000001101100000001000111111110011110011111101010010101000000010000001010100000010
X   367:01000001101100000000000111111111001111001111011010001101000000010000001010100000010
X   368:00000001101100000001000111111111100111100111111010011101000000010000001010100000010
X   369:01000001101100000000000111111111110011110011000110000011000000010000001010100000010
X   370:00000001101100000001000111111111111001111001100110010011000000010000001010100000010
X   371:01000001101100000000000111111111111100111100010110001011000000010000001010100000010
X   372:00000001101100000001000111111111111110011110110110011011000000010000001010100000010
X   373:01000001101100000000000111111111111111001111001110000111000000010000001010100000010
X   374:00000001101100000001000111111111111111100111101110010111000000010000001010100000010
X   375:01000001101100000000000111111111111111110011011110001111000000010000001010100000010
X   376:00000001101100000000000001111111111111111001111110011111000000010000001010100000010
X   377:01000001101100000001100000001111111111111111000001000000100100000010000010100000010
X   378:00000001101100000001000000000111111111111111000001000000101100000110000010100000010
X   379:01000001101100000001000000000011111111111111000001000000100010000001000010100000010
X   380:00000001101100000001000000000001111111111111000001000000101010000101000010100000010
X   381:01000001101100000001000000000000111111111111000001000000100110000011000010100000010
X   382:00000001101100000001000000000000011111111111000001000000101110000111000010100000010
X   383:01000001101100000001000000000000001111111111000001000000100001000000100010100000010
X   384:00000001101100000000000110000000000111111111000001000000101001000100100010100000010
X   385:01000001101100000001000111000000000011111111000001000000100101000010100010100000010
X   386:00000001101100000001000001100000000001111111000001000000101101000110100010100000010
X   387:01000001101100000001000000110000000000111111000001000000100011000001100010100000010
X   388:00000001101100000000000110011000000000011111000001000000101011000101100010100000010
X   389:01000001101100000001000111001100000000001111000001000000100111000011100010100000010
X   390:00000001101100000001000001100110000000000111000001000000101111000111100010100000010
X   391:01000001101100000001000000110011000000000011000001000000100000100000010010100000010
X   392:00000001101100000001000000011001100000000001000001000000101000100100010010100000010
X   393:01000001101100000001000000001100110000000000000001000000100100100010010010100000010
X   394:00000001101100000000000110000110011000000000000001000000101100100110010010100000010
X   395:01000001101100000001000111000011001100000000000001000000100010100001010010100000010
X   396:00000001101100000001000001100001100110000000000001000000101010100101010010100000010
X   397:01000001101100000001000000110000110011000000000001000000100110100011010010100000010
X   398:00000001101100000000000110011000011001100000000001000000101110100111010010100000010
X   399:01000001101100000001000111001100001100110000000001000000100001100000110010100000010
X   400:00000001101100000001000001100110000110011000000001000000101001100100110010100000010
X   401:01000001101100000001000000110011000011001100000001000000100101100010110010100000010
X   402:00000001101100000001000000011001100001100110000001000000101101100110110010100000010
X   403:01000001101100000001000000001100110000110011000001000000100011100001110010100000010
X   404:00000001101100000001000000000110011000011001000001000000101011100101110010100000010
X   405:01000001101100000001000000000011001100001100000001000000100111100011110010100000010
X   406:00000001101100000000000110000001100110000110000001000000101111100111110010100000010
X   407:01000001101100000001010111000000110011000011000001000000100000010000001001100000001
X   408:00000001101100000001010111100000011001100001100000010000000000010000001001100000001
X   409:01000001101100000000010111110000001100110000010000001000000000010000001001100000001
X   410:00000001101100000001000111111000000110011000110000011000000000010000001001100000001
X   411:01000001101100000000000111111100000011001100001000000100000000010000001001100000001
X   412:00000001101100000001000111111110000001100110101000010100000000010000001001100000001
X   413:01000001101100000000000111111111000000110011011000001100000000010000001001100000001
X   414:00000001101100000000000001111111100000011001111000011100000000010000001001100000001
X   415:01000001101100000000000000111111110000001100000100000010000000010000001001100000001
X   416:00000001101100000100000000011111111000000110100100010010000000010000001001100000001
X   417:01000001101100000100000000001111111100000011010100001010000000010000001001100000001
X   418:00000001101100000101000110000111111110000001110100011010000000010000001001100000001
X   419:01000001101100000100000111000011111111000000001100000110000000010000001001100000001
X   420:00000001101100000000000001100001111111100000101100010110000000010000001001100000001
X   421:01000001101100000000000000110000111111110000011100001110000000010000001001100000001
X   422:00000001101100100001000110011000011111111000111100011110000000010000001001100000001
X   423:01000001101100100000000111001100001111111100000010000001000000010000001001100000001
X   424:00000001101100000001000111100110000111111110100010010001000000010000001001100000001
X   425:01000001101100000000000111110011000011111111010010001001000000010000001001100000001
X   426:00000001101100000001000111111001100001111111110010011001000000010000001001100000001
X   427:01000001101100000000000111111100110000111111001010000101000000010000001001100000001
X   428:00000001101100000001000111111110011000011111101010010101000000010000001001100000001
X   429:01000001101100000000000111111111001100001111011010001101000000010000001001100000001
X   430:00000001101100000001000111111111100110000111111010011101000000010000001001100000001
X   431:01000001101100000000000111111111110011000011000110000011000000010000001001100000001
X   432:00000001101100000001000111111111111001100001100110010011000000010000001001100000001
X   433:01000001101100000000000111111111111100110000010110001011000000010000001001100000001
X   434:00000001101100000001000111111111111110011000110110011011000000010000001001100000001
X   435:01000001101100000000000111111111111111001100001110000111000000010000001001100000001
X   436:00000001101100000001000111111111111111100110101110010111000000010000001001100000001
X   437:01000001101100000000000111111111111111110011011110001111000000010000001001100000001
X   438:00000001101100000001000111111111111111111001111110011111000000010000001001100000001
X   439:01000001101100000000100111111111111111111111000001000000100100000010000001100000001
X   440:00000001101100000001000111111111111111111111000001000000101100000110000001100000001
X   441:01000001101100000000000111111111111111111111000001000000100010000001000001100000001
X   442:00000001101100000000000001111111111111111111000001000000101010000101000001100000001
X   443:01000001101100000000000000111111111111111111000001000000100110000011000001100000001
X   444:00000001101100000000000000011111111111111111000001000000101110000111000001100000001
X   445:01000001101100000000000000001111111111111111000001000000100001000000100001100000001
X   446:00000001101100000001000110000111111111111111000001000000101001000100100001100000001
X   447:01000001101100000000000111000011111111111111000001000000100101000010100001100000001
X   448:00000001101100000000000001100001111111111111000001000000101101000110100001100000001
X   449:01000001101100000000000000110000111111111111000001000000100011000001100001100000001
X   450:00000001101100000000000000011000011111111111000001000000101011000101100001100000001
X   451:01000001101100000000000000001100001111111111000001000000100111000011100001100000001
X   452:00000001101100000001000110000110000111111111000001000000101111000111100001100000001
X   453:01000001101100000000000111000011000011111111000001000000100000100000010001100000001
X   454:00000001101100000001000111100001100001111111000001000000101000100100010001100000001
X   455:01000001101100000000000111110000110000111111000001000000100100100010010001100000001
X   456:00000001101100000001000111111000011000011111000001000000101100100110010001100000001
X   457:01000001101100000000000111111100001100001111000001000000100010100001010001100000001
X   458:00000001101100000001000111111110000110000111000001000000101010100101010001100000001
X   459:01000001101100000000000111111111000011000011000001000000100110100011010001100000001
X   460:00000001101100000001000111111111100001100001000001000000101110100111010001100000001
X   461:01000001101100000000000111111111110000110000000001000000100001100000110001100000001
X   462:00000001101100000001000111111111111000011000000001000000101001100100110001100000001
X   463:01000001101100000000000111111111111100001100000001000000100101100010110001100000001
X   464:00000001101100000000000001111111111110000110000001000000101101100110110001100000001
X   465:01000001101100000000000000111111111111000011000001000000100011100001110001100000001
X   466:00000001101100000000000000011111111111100001000001000000101011100101110001100000001
X   467:01000001101100000000000000001111111111110000000001000000100111100011110001100000001
X   468:00000001101100000000000000000111111111111000000001000000101111100111110001100000001
X   469:01000001101100000000010000000011111111111100000001000000100000010000001011100000011
X   470:00000001101100000000010000000001111111111110100000010000000000010000001011100000011
X   471:01000001101100000000010000000000111111111111010000001000000000010000001011100000011
X   472:00000001101100000001000110000000011111111111110000011000000000010000001011100000011
X   473:01000001101100000000000111000000001111111111001000000100000000010000001011100000011
X   474:00000001101100000001000111100000000111111111101000010100000000010000001011100000011
X   475:01000001101100000000000111110000000011111111011000001100000000010000001011100000011
X   476:00000001101100000001000111111000000001111111111000011100000000010000001011100000011
X   477:01000001101100000000000111111100000000111111000100000010000000010000001011100000011
X   478:00000001101100000001000111111110000000011111100100010010000000010000001011100000011
X   479:01000001101100000000000111111111000000001111010100001010000000010000001011100000011
X   480:00000001101100000100000001111111100000000111110100011010000000010000001011100000011
X   481:01000001101100000100000000111111110000000011001100000110000000010000001011100000011
X   482:00000001101100000101000110011111111000000001101100010110000000010000001011100000011
X   483:01000001101100000100000111001111111100000000011100001110000000010000001011100000011
X   484:00000001101100000001000111100111111110000000111100011110000000010000001011100000011
X   485:01000001101100000000000111110011111111000000000010000001000000010000001011100000011
X   486:00000001101100010000000001111001111111100000100010010001000000010000001011100000011
X   487:01000001101100010000000000111100111111110000010010001001000000010000001011100000011
X   488:00000001101100000001000110011110011111111000110010011001000000010000001011100000011
X   489:01000001101100000000000111001111001111111100001010000101000000010000001011100000011
X   490:00000001101100000001000111100111100111111110101010010101000000010000001011100000011
X   491:01000001101100000000000111110011110011111111011010001101000000010000001011100000011
X   492:00000001101100000001000111111001111001111111111010011101000000010000001011100000011
X   493:01000001101100000000000111111100111100111111000110000011000000010000001011100000011
X   494:00000001101100000001000111111110011110011111100110010011000000010000001011100000011
X   495:01000001101100000000000111111111001111001111010110001011000000010000001011100000011
X   496:00000001101100000001000111111111100111100111110110011011000000010000001011100000011
X   497:01000001101100000000000111111111110011110011001110000111000000010000001011100000011
X   498:00000001101100000001000111111111111001111001101110010111000000010000001011100000011
X   499:01000001101100000000000111111111111100111100011110001111000000010000001011100000011
X   500:00000001101100000001000111111111111110011110111110011111000000010000001011100000011
X   501:01000001101100000001100111111111111111110011000001000000100100000010000011100000011
X   502:00000001101100000000000111111111111111111001000001000000101100000110000011100000011
X   503:01000001101100000001000111111111111111111100000001000000100010000001000011100000011
X   504:00000001101100000001000001111111111111111110000001000000101010000101000011100000011
X   505:01000001101100000001000000111111111111111111000001000000100110000011000011100000011
X   506:00000001101100000001000000011111111111111111000001000000101110000111000011100000011
X   507:01000001101100000001000000001111111111111111000001000000100001000000100011100000011
X   508:00000001101100000001000000000111111111111111000001000000101001000100100011100000011
X   509:01000001101100000001000000000011111111111111000001000000100101000010100011100000011
X   510:00000001101100000001000000000001111111111111000001000000101101000110100011100000011
X   511:01000001101100000001000000000000111111111111000001000000100011000001100011100000011
X   512:00000001101100000000000110000000011111111111000001000000101011000101100011100000011
X   513:01000001101100000001000111000000001111111111000001000000100111000011100011100000011
X   514:00000001101100000001000001100000000111111111000001000000101111000111100011100000011
X   515:01000001101100000001000000110000000011111111000001000000100000100000010011100000011
X   516:00000001101100000000000110011000000001111111000001000000101000100100010011100000011
X   517:01000001101100000001000111001100000000111111000001000000100100100010010011100000011
X   518:00000001101100000001000001100110000000011111000001000000101100100110010011100000011
X   519:01000001101100000001000000110011000000001111000001000000100010100001010011100000011
X   520:00000001101100000001000000011001100000000111000001000000101010100101010011100000011
X   521:01000001101100000001000000001100110000000011000001000000100110100011010011100000011
X   522:00000001101100000000000110000110011000000001000001000000101110100111010011100000011
X   523:01000001101100000001000111000011001100000000000001000000100001100000110011100000011
X   524:00000001101100000001000001100001100110000000000001000000101001100100110011100000011
X   525:01000001101100000001000000110000110011000000000001000000100101100010110011100000011
X   526:00000001101100000000000110011000011001100000000001000000101101100110110011100000011
X   527:01000001101100000001000111001100001100110000000001000000100011100001110011100000011
X   528:00000001101100000001000001100110000110011000000001000000101011100101110011100000011
X   529:01000001101100000001000000110011000011001100000001000000100111100011110011100000011
X   530:00000001101100000001000000011001100001100110000001000000101111100111110011100000011
X   531:01000001101100000001010000001100110000110011000001000000100000010000001000010000000
X   532:00000001101100000000010000000110011000011001100000010000000000010000001000010000000
X   533:01000001101100000000010000000011001100001100010000001000000000010000001000010000000
X   534:00000001101100000001000110000001100110000110110000011000000000010000001000010000000
X   535:01000001101100000000001111000000110011000011001000000100000000010000001000010000000
X   536:00000001101100000001001111100000011001100001101000010100000000010000001000010000000
X   537:01000001101100000000000111110000001100110000011000001100000000010000001000010000000
X   538:00000001101100000001000111111000000110011000111000011100000000010000001000010000000
X   539:01000001101100000000000111111100000011001100000100000010000000010000001000010000000
X   540:00000001101100000001000111111110000001100110100100010010000000010000001000010000000
X   541:01000001101100000000000111111111000000110011010100001010000000010000001000010000000
X   542:00000001101100000000000001111111100000011001110100011010000000010000001000010000000
X   543:01000001101100000000000000111111110000001100001100000110000000010000001000010000000
X   544:00000001101100000100000000011111111000000110101100010110000000010000001000010000000
X   545:01000001101100000100000000001111111100000011011100001110000000010000001000010000000
X   546:00000001101100000101000110000111111110000001111100011110000000010000001000010000000
X   547:01000001101100000100000111000011111111000000000010000001000000010000001000010000000
X   548:00000001101100000000000001100001111111100000100010010001000000010000001000010000000
X   549:01000001101100000000000000110000111111110000010010001001000000010000001000010000000
X   550:00000001101100100001000110011000011111111000110010011001000000010000001000010000000
X   551:01000001101100100000000111001100001111111100001010000101000000010000001000010000000
X   552:00000001101100000001000111100110000111111110101010010101000000010000001000010000000
X   553:01000001101100000000000111110011000011111111011010001101000000010000001000010000000
X   554:00000001101100000001000111111001100001111111111010011101000000010000001000010000000
X   555:01000001101100000000000111111100110000111111000110000011000000010000001000010000000
X   556:00000001101100000001000111111110011000011111100110010011000000010000001000010000000
X   557:01000001101100000000000111111111001100001111010110001011000000010000001000010000000
X   558:00000001101100000001000111111111100110000111110110011011000000010000001000010000000
X   559:01000001101100000000000111111111110011000011001110000111000000010000001000010000000
X   560:00000001101100000001000111111111111001100001101110010111000000010000001000010000000
X   561:01000001101100000000000111111111111100110000011110001111000000010000001000010000000
X   562:00000001101100000001000111111111111110011000111110011111000000010000001000010000000
X   563:01000001101100000001100111111111111111110011000001000000100100000010000000010000000
X   564:00000001101100000000000111111111111111111001000001000000101100000110000000010000000
X   565:01000001101100000001000111111111111111111100000001000000100010000001000000010000000
X   566:00000001101100000000000111111111111111111110000001000000101010000101000000010000000
X   567:01000001101100000001000111111111111111111111000001000000100110000011000000010000000
X   568:00000001101100000000000111111111111111111111000001000000101110000111000000010000000
X   569:01000001101100000001000111111111111111111111000001000000100001000000100000010000000
X   570:00000001101100000001000001111111111111111111000001000000101001000100100000010000000
X   571:01000001101100000001000000111111111111111111000001000000100101000010100000010000000
X   572:00000001101100000001000000011111111111111111000001000000101101000110100000010000000
X   573:01000001101100000001000000001111111111111111000001000000100011000001100000010000000
X   574:00000001101100000000000110000111111111111111000001000000101011000101100000010000000
X   575:01000001101100000001000111000011111111111111000001000000100111000011100000010000000
X   576:00000001101100000001000001100001111111111111000001000000101111000111100000010000000
X   577:01000001101100000001000000110000111111111111000001000000100000100000010000010000000
X   578:00000001101100000001000000011000011111111111000001000000101000100100010000010000000
X   579:01000001101100000001000000001100001111111111000001000000100100100010010000010000000
X   580:00000001101100000000000110000110000111111111000001000000101100100110010000010000000
X   581:01000001101100000001000111000011000011111111000001000000100010100001010000010000000
X   582:00000001101100000000000111100001100001111111000001000000101010100101010000010000000
X   583:01000001101100000001000111110000110000111111000001000000100110100011010000010000000
X   584:00000001101100000000000111111000011000011111000001000000101110100111010000010000000
X   585:01000001101100000001000111111100001100001111000001000000100001100000110000010000000
X   586:00000001101100000000000111111110000110000111000001000000101001100100110000010000000
X   587:01000001101100000001000111111111000011000011000001000000100101100010110000010000000
X   588:00000001101100000000000111111111100001100001000001000000101101100110110000010000000
X   589:01000001101100000001000111111111110000110000000001000000100011100001110000010000000
X   590:00000001101100000000000111111111111000011000000001000000101011100101110000010000000
X   591:01000001101100000001000111111111111100001100000001000000100111100011110000010000000
X   592:00000001101100000001000001111111111110000110000001000000101111100111110000010000000
X   593:01000001101100000001010000111111111111000011000001000000100000010000001010010000010
X   594:00000001101100000000010000011111111111100001100000010000000000010000001010010000010
X   595:01000001101100000000010000001111111111110000010000001000000000010000001010010000010
X   596:00000001101100000000000000000111111111111000110000011000000000010000001010010000010
X   597:01000001101100000000000000000011111111111100001000000100000000010000001010010000010
X   598:00000001101100000000000000000001111111111110101000010100000000010000001010010000010
X   599:01000001101100000000000000000000111111111111011000001100000000010000001010010000010
X   600:00000001101100000001000110000000011111111111111000011100000000010000001010010000010
X   601:01000001101100000000000111000000001111111111000100000010000000010000001010010000010
X   602:00000001101100000001000111100000000111111111100100010010000000010000001010010000010
X   603:01000001101100000000000111110000000011111111010100001010000000010000001010010000010
X   604:00000001101100000001000111111000000001111111110100011010000000010000001010010000010
X   605:01000001101100000000000111111100000000111111001100000110000000010000001010010000010
X   606:00000001101100000001000111111110000000011111101100010110000000010000001010010000010
X   607:01000001101100000000000111111111000000001111011100001110000000010000001010010000010
X   608:00000001101100000100000001111111100000000111111100011110000000010000001010010000010
X   609:01000001101100000100000000111111110000000011000010000001000000010000001010010000010
X   610:00000001101100000101000110011111111000000001100010010001000000010000001010010000010
X   611:01000001101100000100000111001111111100000000010010001001000000010000001010010000010
X   612:00000001101100000001000111100111111110000000110010011001000000010000001010010000010
X   613:01000001101100000000000111110011111111000000001010000101000000010000001010010000010
X   614:00000001101100010000000001111001111111100000101010010101000000010000001010010000010
X   615:01000001101100010000000000111100111111110000011010001101000000010000001010010000010
X   616:00000001101100000001000110011110011111111000111010011101000000010000001010010000010
X   617:01000001101100000000000111001111001111111100000110000011000000010000001010010000010
X   618:00000001101100000001000111100111100111111110100110010011000000010000001010010000010
X   619:01000001101100000000000111110011110011111111010110001011000000010000001010010000010
X   620:00000001101100000001000111111001111001111111110110011011000000010000001010010000010
X   621:01000001101100000000000111111100111100111111001110000111000000010000001010010000010
X   622:00000001101100000001000111111110011110011111101110010111000000010000001010010000010
X   623:01000001101100000000000111111111001111001111011110001111000000010000001010010000010
X   624:00000001101100000001000111111111100111100111111110011111000000010000001010010000010
X   625:01000001101100000001100111111111111100111100000001000000100100000010000010010000010
X   626:00000001101100000000000111111111111110011110000001000000101100000110000010010000010
X   627:01000001101100000001000111111111111111001111000001000000100010000001000010010000010
X   628:00000001101100000000000111111111111111100111000001000000101010000101000010010000010
X   629:01000001101100000001000111111111111111110011000001000000100110000011000010010000010
X   630:00000001101100000000000111111111111111111001000001000000101110000111000010010000010
X   631:01000001101100000001000111111111111111111100000001000000100001000000100010010000010
X   632:00000001101100000001000001111111111111111110000001000000101001000100100010010000010
X   633:01000001101100000001000000111111111111111111000001000000100101000010100010010000010
X   634:00000001101100000001000000011111111111111111000001000000101101000110100010010000010
X   635:01000001101100000001000000001111111111111111000001000000100011000001100010010000010
X   636:00000001101100000001000000000111111111111111000001000000101011000101100010010000010
X   637:01000001101100000001000000000011111111111111000001000000100111000011100010010000010
X   638:00000001101100000001000000000001111111111111000001000000101111000111100010010000010
X   639:01000001101100000001000000000000111111111111000001000000100000100000010010010000010
X   640:00000001101100000000000110000000011111111111000001000000101000100100010010010000010
X   641:01000001101100000001000111000000001111111111000001000000100100100010010010010000010
X   642:00000001101100000001000001100000000111111111000001000000101100100110010010010000010
X   643:01000001101100000001000000110000000011111111000001000000100010100001010010010000010
X   644:00000001101100000000000110011000000001111111000001000000101010100101010010010000010
X   645:01000001101100000001000111001100000000111111000001000000100110100011010010010000010
X   646:00000001101100000001000001100110000000011111000001000000101110100111010010010000010
X   647:01000001101100000001000000110011000000001111000001000000100001100000110010010000010
X   648:00000001101100000001000000011001100000000111000001000000101001100100110010010000010
X   649:01000001101100000001000000001100110000000011000001000000100101100010110010010000010
X   650:00000001101100000000000110000110011000000001000001000000101101100110110010010000010
X   651:01000001101100000001000111000011001100000000000001000000100011100001110010010000010
X   652:00000001101100000001000001100001100110000000000001000000101011100101110010010000010
X   653:01000001101100000001000000110000110011000000000001000000100111100011110010010000010
X   654:00000001101100000000000110011000011001100000000001000000101111100111110010010000010
X   655:01000001101100000001010111001100001100110000000001000000100000010000001001010000001
X   656:00000001101100000000010001100110000110011000100000010000000000010000001001010000001
X   657:01000001101100000000010000110011000011001100010000001000000000010000001001010000001
X   658:00000001101100000000000000011001100001100110110000011000000000010000001001010000001
X   659:01000001101100000000000000001100110000110011001000000100000000010000001001010000001
X   660:00000001101100000000000000000110011000011001101000010100000000010000001001010000001
X   661:01000001101100000000000000000011001100001100011000001100000000010000001001010000001
X   662:00000001101100000001000110000001100110000110111000011100000000010000001001010000001
X   663:01000001101100000000000111000000110011000011000100000010000000010000001001010000001
X   664:00000001101100000001000111100000011001100001100100010010000000010000001001010000001
X   665:01000001101100000000000111110000001100110000010100001010000000010000001001010000001
X   666:00000001101100000001000111111000000110011000110100011010000000010000001001010000001
X   667:01000001101100000000000111111100000011001100001100000110000000010000001001010000001
X   668:00000001101100000001000111111110000001100110101100010110000000010000001001010000001
X   669:01000001101100000000000111111111000000110011011100001110000000010000001001010000001
X   670:00000001101100000000000001111111100000011001111100011110000000010000001001010000001
X   671:01000001101100000000000000111111110000001100000010000001000000010000001001010000001
X   672:00000001101100000100000000011111111000000110100010010001000000010000001001010000001
X   673:01000001101100000100000000001111111100000011010010001001000000010000001001010000001
X   674:00000001101100000101000110000111111110000001110010011001000000010000001001010000001
X   675:01000001101100000100000111000011111111000000001010000101000000010000001001010000001
X   676:00000001101100000000000001100001111111100000101010010101000000010000001001010000001
X   677:01000001101100000000000000110000111111110000011010001101000000010000001001010000001
X   678:00000001101100100001000110011000011111111000111010011101000000010000001001010000001
X   679:01000001101100100000000111001100001111111100000110000011000000010000001001010000001
X   680:00000001101100000001000111100110000111111110100110010011000000010000001001010000001
X   681:01000001101100000000000111110011000011111111010110001011000000010000001001010000001
X   682:00000001101100000001000111111001100001111111110110011011000000010000001001010000001
X   683:01000001101100000000000111111100110000111111001110000111000000010000001001010000001
X   684:00000001101100000001000111111110011000011111101110010111000000010000001001010000001
X   685:01000001101100000000000111111111001100001111011110001111000000010000001001010000001
X   686:00000001101100000001000111111111100110000111111110011111000000010000001001010000001
X   687:01000001101100000001100111111111111100110000000001000000100100000010000001010000001
X   688:00000001101100000000000111111111111110011000000001000000101100000110000001010000001
X   689:01000001101100000001000111111111111111001100000001000000100010000001000001010000001
X   690:00000001101100000000000111111111111111100110000001000000101010000101000001010000001
X   691:01000001101100000001000111111111111111110011000001000000100110000011000001010000001
X   692:00000001101100000000000111111111111111111001000001000000101110000111000001010000001
X   693:01000001101100000001000111111111111111111100000001000000100001000000100001010000001
X   694:00000001101100000000000111111111111111111110000001000000101001000100100001010000001
X   695:01000001101100000001000111111111111111111111000001000000100101000010100001010000001
X   696:00000001101100000000000111111111111111111111000001000000101101000110100001010000001
X   697:01000001101100000001000111111111111111111111000001000000100011000001100001010000001
X   698:00000001101100000001000001111111111111111111000001000000101011000101100001010000001
X   699:01000001101100000001000000111111111111111111000001000000100111000011100001010000001
X   700:00000001101100000001000000011111111111111111000001000000101111000111100001010000001
X   701:01000001101100000001000000001111111111111111000001000000100000100000010001010000001
X   702:00000001101100000000000110000111111111111111000001000000101000100100010001010000001
X   703:01000001101100000001000111000011111111111111000001000000100100100010010001010000001
X   704:00000001101100000001000001100001111111111111000001000000101100100110010001010000001
X   705:01000001101100000001000000110000111111111111000001000000100010100001010001010000001
X   706:00000001101100000001000000011000011111111111000001000000101010100101010001010000001
X   707:01000001101100000001000000001100001111111111000001000000100110100011010001010000001
X   708:00000001101100000000000110000110000111111111000001000000101110100111010001010000001
X   709:01000001101100000001000111000011000011111111000001000000100001100000110001010000001
X   710:00000001101100000000000111100001100001111111000001000000101001100100110001010000001
X   711:01000001101100000001000111110000110000111111000001000000100101100010110001010000001
X   712:00000001101100000000000111111000011000011111000001000000101101100110110001010000001
X   713:01000001101100000001000111111100001100001111000001000000100011100001110001010000001
X   714:00000001101100000000000111111110000110000111000001000000101011100101110001010000001
X   715:01000001101100000001000111111111000011000011000001000000100111100011110001010000001
X   716:00000001101100000000000111111111100001100001000001000000101111100111110001010000001
X   717:01000001101100000001010111111111110000110000000001000000100000010000001011010000011
X   718:00000001101100000001010111111111111000011000100000010000000000010000001011010000011
X   719:01000001101100000000010111111111111100001100010000001000000000010000001011010000011
X   720:00000001101100000000000001111111111110000110110000011000000000010000001011010000011
X   721:01000001101100000000000000111111111111000011001000000100000000010000001011010000011
X   722:00000001101100000000000000011111111111100001101000010100000000010000001011010000011
X   723:01000001101100000000000000001111111111110000011000001100000000010000001011010000011
X   724:00000001101100000000000000000111111111111000111000011100000000010000001011010000011
X   725:01000001101100000000000000000011111111111100000100000010000000010000001011010000011
X   726:00000001101100000000000000000001111111111110100100010010000000010000001011010000011
X   727:01000001101100000000000000000000111111111111010100001010000000010000001011010000011
X   728:00000001101100000001000110000000011111111111110100011010000000010000001011010000011
X   729:01000001101100000000000111000000001111111111001100000110000000010000001011010000011
X   730:00000001101100000001000111100000000111111111101100010110000000010000001011010000011
X   731:01000001101100000000000111110000000011111111011100001110000000010000001011010000011
X   732:00000001101100000001000111111000000001111111111100011110000000010000001011010000011
X   733:01000001101100000000000111111100000000111111000010000001000000010000001011010000011
X   734:00000001101100000001000111111110000000011111100010010001000000010000001011010000011
X   735:01000001101100000000000111111111000000001111010010001001000000010000001011010000011
X   736:00000001101100000100000001111111100000000111110010011001000000010000001011010000011
X   737:01000001101100000100000000111111110000000011001010000101000000010000001011010000011
X   738:00000001101100000101000110011111111000000001101010010101000000010000001011010000011
X   739:01000001101100000100000111001111111100000000011010001101000000010000001011010000011
X   740:00000001101100000001000111100111111110000000111010011101000000010000001011010000011
X   741:01000001101100000000000111110011111111000000000110000011000000010000001011010000011
X   742:00000001101100010000000001111001111111100000100110010011000000010000001011010000011
X   743:01000001101100010000000000111100111111110000010110001011000000010000001011010000011
X   744:00000001101100000001000110011110011111111000110110011011000000010000001011010000011
X   745:01000001101100000000000111001111001111111100001110000111000000010000001011010000011
X   746:00000001101100000001000111100111100111111110101110010111000000010000001011010000011
X   747:01000001101100000000000111110011110011111111011110001111000000010000001011010000011
X   748:00000001101100000001000111111001111001111111111110011111000000010000001011010000011
X   749:01000001101100000000100111111111001111001111000001000000100100000010000011010000011
X   750:00000001101100000001000111111111100111100111000001000000101100000110000011010000011
X   751:01000001101100000000000111111111110011110011000001000000100010000001000011010000011
X   752:00000001101100000001000111111111111001111001000001000000101010000101000011010000011
X   753:01000001101100000000000111111111111100111100000001000000100110000011000011010000011
X   754:00000001101100000001000111111111111110011110000001000000101110000111000011010000011
X   755:01000001101100000000000111111111111111001111000001000000100001000000100011010000011
X   756:00000001101100000001000111111111111111100111000001000000101001000100100011010000011
X   757:01000001101100000000000111111111111111110011000001000000100101000010100011010000011
X   758:00000001101100000001000111111111111111111001000001000000101101000110100011010000011
X   759:01000001101100000000000111111111111111111100000001000000100011000001100011010000011
X   760:00000001101100000000000001111111111111111110000001000000101011000101100011010000011
X   761:01000001101100000000000000111111111111111111000001000000100111000011100011010000011
X   762:00000001101100000000000000011111111111111111000001000000101111000111100011010000011
X   763:01000001101100000000000000001111111111111111000001000000100000100000010011010000011
X   764:00000001101100000000000000000111111111111111000001000000101000100100010011010000011
X   765:01000001101100000000000000000011111111111111000001000000100100100010010011010000011
X   766:00000001101100000000000000000001111111111111000001000000101100100110010011010000011
X   767:01000001101100000000000000000000111111111111000001000000100010100001010011010000011
X   768:00000001101100000001000110000000011111111111000001000000101010100101010011010000011
X   769:01000001101100000000000111000000001111111111000001000000100110100011010011010000011
X   770:00000001101100000000000001100000000111111111000001000000101110100111010011010000011
X   771:01000001101100000000000000110000000011111111000001000000100001100000110011010000011
X   772:00000001101100000001000110011000000001111111000001000000101001100100110011010000011
X   773:01000001101100000000000111001100000000111111000001000000100101100010110011010000011
X   774:00000001101100000000000001100110000000011111000001000000101101100110110011010000011
X   775:01000001101100000000000000110011000000001111000001000000100011100001110011010000011
X   776:00000001101100000000000000011001100000000111000001000000101011100101110011010000011
X   777:01000001101100000000000000001100110000000011000001000000100111100011110011010000011
X   778:00000001101100000001000110000110011000000001000001000000101111100111110011010000011
X   779:01000001101100000000010111000011001100000000000001000000100000010000001000110000000
X   780:00000001101100000000010001100001100110000000100000010000000000010000001000110000000
X   781:01000001101100000000010000110000110011000000010000001000000000010000001000110000000
X   782:00000001101100000001000110011000011001100000110000011000000000010000001000110000000
X   783:01000001101100000000001111001100001100110000001000000100000000010000001000110000000
X   784:00000001101100000000001001100110000110011000101000010100000000010000001000110000000
X   785:01000001101100000000000000110011000011001100011000001100000000010000001000110000000
X   786:00000001101100000000000000011001100001100110111000011100000000010000001000110000000
X   787:01000001101100000000000000001100110000110011000100000010000000010000001000110000000
X   788:00000001101100000000000000000110011000011001100100010010000000010000001000110000000
X   789:01000001101100000000000000000011001100001100010100001010000000010000001000110000000
X   790:00000001101100000001000110000001100110000110110100011010000000010000001000110000000
X   791:01000001101100000000000111000000110011000011001100000110000000010000001000110000000
X   792:00000001101100000001000111100000011001100001101100010110000000010000001000110000000
X   793:01000001101100000000000111110000001100110000011100001110000000010000001000110000000
X   794:00000001101100000001000111111000000110011000111100011110000000010000001000110000000
X   795:01000001101100000000000111111100000011001100000010000001000000010000001000110000000
X   796:00000001101100000001000111111110000001100110100010010001000000010000001000110000000
X   797:01000001101100000000000111111111000000110011010010001001000000010000001000110000000
X   798:00000001101100000000000001111111100000011001110010011001000000010000001000110000000
X   799:01000001101100000000000000111111110000001100001010000101000000010000001000110000000
X   800:00000001101100000100000000011111111000000110101010010101000000010000001000110000000
X   801:01000001101100000100000000001111111100000011011010001101000000010000001000110000000
X   802:00000001101100000101000110000111111110000001111010011101000000010000001000110000000
X   803:01000001101100000100000111000011111111000000000110000011000000010000001000110000000
X   804:00000001101100000000000001100001111111100000100110010011000000010000001000110000000
X   805:01000001101100000000000000110000111111110000010110001011000000010000001000110000000
X   806:00000001101100100001000110011000011111111000110110011011000000010000001000110000000
X   807:01000001101100100000000111001100001111111100001110000111000000010000001000110000000
X   808:00000001101100000001000111100110000111111110101110010111000000010000001000110000000
X   809:01000001101100000000000111110011000011111111011110001111000000010000001000110000000
X   810:00000001101100000001000111111001100001111111111110011111000000010000001000110000000
X   811:01000001101100000001100111111111001100001111000001000000100100000010000000110000000
X   812:00000001101100000000000111111111100110000111000001000000101100000110000000110000000
X   813:01000001101100000001000111111111110011000011000001000000100010000001000000110000000
X   814:00000001101100000000000111111111111001100001000001000000101010000101000000110000000
X   815:01000001101100000001000111111111111100110000000001000000100110000011000000110000000
X   816:00000001101100000000000111111111111110011000000001000000101110000111000000110000000
X   817:01000001101100000001000111111111111111001100000001000000100001000000100000110000000
X   818:00000001101100000000000111111111111111100110000001000000101001000100100000110000000
X   819:01000001101100000001000111111111111111110011000001000000100101000010100000110000000
X   820:00000001101100000000000111111111111111111001000001000000101101000110100000110000000
X   821:01000001101100000001000111111111111111111100000001000000100011000001100000110000000
X   822:00000001101100000000000111111111111111111110000001000000101011000101100000110000000
X   823:01000001101100000001000111111111111111111111000001000000100111000011100000110000000
X   824:00000001101100000000000111111111111111111111000001000000101111000111100000110000000
X   825:01000001101100000001000111111111111111111111000001000000100000100000010000110000000
X   826:00000001101100000001000001111111111111111111000001000000101000100100010000110000000
X   827:01000001101100000001000000111111111111111111000001000000100100100010010000110000000
X   828:00000001101100000001000000011111111111111111000001000000101100100110010000110000000
X   829:01000001101100000001000000001111111111111111000001000000100010100001010000110000000
X   830:00000001101100000000000110000111111111111111000001000000101010100101010000110000000
X   831:01000001101100000001000111000011111111111111000001000000100110100011010000110000000
X   832:00000001101100000001000001100001111111111111000001000000101110100111010000110000000
X   833:01000001101100000001000000110000111111111111000001000000100001100000110000110000000
X   834:00000001101100000001000000011000011111111111000001000000101001100100110000110000000
X   835:01000001101100000001000000001100001111111111000001000000100101100010110000110000000
X   836:00000001101100000000000110000110000111111111000001000000101101100110110000110000000
X   837:01000001101100000001000111000011000011111111000001000000100011100001110000110000000
X   838:00000001101100000000000111100001100001111111000001000000101011100101110000110000000
X   839:01000001101100000001000111110000110000111111000001000000100111100011110000110000000
X   840:00000001101100000000000111111000011000011111000001000000101111100111110000110000000
X   841:01000001101100000001010111111100001100001111000001000000100000010000001010110000010
X   842:00000001101100000001010111111110000110000111100000010000000000010000001010110000010
X   843:01000001101100000000010111111111000011000011010000001000000000010000001010110000010
X   844:00000001101100000001000111111111100001100001110000011000000000010000001010110000010
X   845:01000001101100000000000111111111110000110000001000000100000000010000001010110000010
X   846:00000001101100000001000111111111111000011000101000010100000000010000001010110000010
X   847:01000001101100000000000111111111111100001100011000001100000000010000001010110000010
X   848:00000001101100000000000001111111111110000110111000011100000000010000001010110000010
X   849:01000001101100000000000000111111111111000011000100000010000000010000001010110000010
X   850:00000001101100000000000000011111111111100001100100010010000000010000001010110000010
X   851:01000001101100000000000000001111111111110000010100001010000000010000001010110000010
X   852:00000001101100000000000000000111111111111000110100011010000000010000001010110000010
X   853:01000001101100000000000000000011111111111100001100000110000000010000001010110000010
X   854:00000001101100000000000000000001111111111110101100010110000000010000001010110000010
X   855:01000001101100000000000000000000111111111111011100001110000000010000001010110000010
X   856:00000001101100000001000110000000011111111111111100011110000000010000001010110000010
X   857:01000001101100000000000111000000001111111111000010000001000000010000001010110000010
X   858:00000001101100000001000111100000000111111111100010010001000000010000001010110000010
X   859:01000001101100000000000111110000000011111111010010001001000000010000001010110000010
X   860:00000001101100000001000111111000000001111111110010011001000000010000001010110000010
X   861:01000001101100000000000111111100000000111111001010000101000000010000001010110000010
X   862:00000001101100000001000111111110000000011111101010010101000000010000001010110000010
X   863:01000001101100000000000111111111000000001111011010001101000000010000001010110000010
X   864:00000001101100000100000001111111100000000111111010011101000000010000001010110000010
X   865:01000001101100000100000000111111110000000011000110000011000000010000001010110000010
X   866:00000001101100000101000110011111111000000001100110010011000000010000001010110000010
X   867:01000001101100000100000111001111111100000000010110001011000000010000001010110000010
X   868:00000001101100000001000111100111111110000000110110011011000000010000001010110000010
X   869:01000001101100000000000111110011111111000000001110000111000000010000001010110000010
X   870:00000001101100010000000001111001111111100000101110010111000000010000001010110000010
X   871:01000001101100010000000000111100111111110000011110001111000000010000001010110000010
X   872:00000001101100000001000110011110011111111000111110011111000000010000001010110000010
X   873:01000001101100000000100111110011110011111111000001000000100100000010000010110000010
X   874:00000001101100000001000111111001111001111111000001000000101100000110000010110000010
X   875:01000001101100000000000111111100111100111111000001000000100010000001000010110000010
X   876:00000001101100000001000111111110011110011111000001000000101010000101000010110000010
X   877:01000001101100000000000111111111001111001111000001000000100110000011000010110000010
X   878:00000001101100000001000111111111100111100111000001000000101110000111000010110000010
X   879:01000001101100000000000111111111110011110011000001000000100001000000100010110000010
X   880:00000001101100000001000111111111111001111001000001000000101001000100100010110000010
X   881:01000001101100000000000111111111111100111100000001000000100101000010100010110000010
X   882:00000001101100000001000111111111111110011110000001000000101101000110100010110000010
X   883:01000001101100000000000111111111111111001111000001000000100011000001100010110000010
X   884:00000001101100000001000111111111111111100111000001000000101011000101100010110000010
X   885:01000001101100000000000111111111111111110011000001000000100111000011100010110000010
X   886:00000001101100000001000111111111111111111001000001000000101111000111100010110000010
X   887:01000001101100000000000111111111111111111100000001000000100000100000010010110000010
X   888:00000001101100000000000001111111111111111110000001000000101000100100010010110000010
X   889:01000001101100000000000000111111111111111111000001000000100100100010010010110000010
X   890:00000001101100000000000000011111111111111111000001000000101100100110010010110000010
X   891:01000001101100000000000000001111111111111111000001000000100010100001010010110000010
X   892:00000001101100000000000000000111111111111111000001000000101010100101010010110000010
X   893:01000001101100000000000000000011111111111111000001000000100110100011010010110000010
X   894:00000001101100000000000000000001111111111111000001000000101110100111010010110000010
X   895:01000001101100000000000000000000111111111111000001000000100001100000110010110000010
X   896:00000001101100000001000110000000011111111111000001000000101001100100110010110000010
X   897:01000001101100000000000111000000001111111111000001000000100101100010110010110000010
X   898:00000001101100000000000001100000000111111111000001000000101101100110110010110000010
X   899:01000001101100000000000000110000000011111111000001000000100011100001110010110000010
X   900:00000001101100000001000110011000000001111111000001000000101011100101110010110000010
X   901:01000001101100000000000111001100000000111111000001000000100111100011110010110000010
X   902:00000001101100000000000001100110000000011111000001000000101111100111110010110000010
X   903:01000001101100000000010000110011000000001111000001000000100000010000001001110000001
X   904:00000001101100000000010000011001100000000111100000010000000000010000001001110000001
X   905:01000001101100000000010000001100110000000011010000001000000000010000001001110000001
X   906:00000001101100000001000110000110011000000001110000011000000000010000001001110000001
X   907:01000001101100000000000111000011001100000000001000000100000000010000001001110000001
X   908:00000001101100000000000001100001100110000000101000010100000000010000001001110000001
X   909:01000001101100000000000000110000110011000000011000001100000000010000001001110000001
X   910:00000001101100000001000110011000011001100000111000011100000000010000001001110000001
X   911:01000001101100000000000111001100001100110000000100000010000000010000001001110000001
X   912:00000001101100000000000001100110000110011000100100010010000000010000001001110000001
X   913:01000001101100000000000000110011000011001100010100001010000000010000001001110000001
X   914:00000001101100000000000000011001100001100110110100011010000000010000001001110000001
X   915:01000001101100000000000000001100110000110011001100000110000000010000001001110000001
X   916:00000001101100000000000000000110011000011001101100010110000000010000001001110000001
X   917:01000001101100000000000000000011001100001100011100001110000000010000001001110000001
X   918:00000001101100000001000110000001100110000110111100011110000000010000001001110000001
X   919:01000001101100000000000111000000110011000011000010000001000000010000001001110000001
X   920:00000001101100000001000111100000011001100001100010010001000000010000001001110000001
X   921:01000001101100000000000111110000001100110000010010001001000000010000001001110000001
X   922:00000001101100000001000111111000000110011000110010011001000000010000001001110000001
X   923:01000001101100000000000111111100000011001100001010000101000000010000001001110000001
X   924:00000001101100000001000111111110000001100110101010010101000000010000001001110000001
X   925:01000001101100000000000111111111000000110011011010001101000000010000001001110000001
X   926:00000001101100000000000001111111100000011001111010011101000000010000001001110000001
X   927:01000001101100000000000000111111110000001100000110000011000000010000001001110000001
X   928:00000001101100000100000000011111111000000110100110010011000000010000001001110000001
X   929:01000001101100000100000000001111111100000011010110001011000000010000001001110000001
X   930:00000001101100000101000110000111111110000001110110011011000000010000001001110000001
X   931:01000001101100000100000111000011111111000000001110000111000000010000001001110000001
X   932:00000001101100000000000001100001111111100000101110010111000000010000001001110000001
X   933:01000001101100000000000000110000111111110000011110001111000000010000001001110000001
X   934:00000001101100100001000110011000011111111000111110011111000000010000001001110000001
X   935:01000001101100100001100111110011000011111111000001000000100100000010000001110000001
X   936:00000001101100000000000111111001100001111111000001000000101100000110000001110000001
X   937:01000001101100000001000111111100110000111111000001000000100010000001000001110000001
X   938:00000001101100000000000111111110011000011111000001000000101010000101000001110000001
X   939:01000001101100000001000111111111001100001111000001000000100110000011000001110000001
X   940:00000001101100000000000111111111100110000111000001000000101110000111000001110000001
X   941:01000001101100000001000111111111110011000011000001000000100001000000100001110000001
X   942:00000001101100000000000111111111111001100001000001000000101001000100100001110000001
X   943:01000001101100000001000111111111111100110000000001000000100101000010100001110000001
X   944:00000001101100000000000111111111111110011000000001000000101101000110100001110000001
X   945:01000001101100000001000111111111111111001100000001000000100011000001100001110000001
X   946:00000001101100000000000111111111111111100110000001000000101011000101100001110000001
X   947:01000001101100000001000111111111111111110011000001000000100111000011100001110000001
X   948:00000001101100000000000111111111111111111001000001000000101111000111100001110000001
X   949:01000001101100000001000111111111111111111100000001000000100000100000010001110000001
X   950:00000001101100000000000111111111111111111110000001000000101000100100010001110000001
X   951:01000001101100000001000111111111111111111111000001000000100100100010010001110000001
X   952:00000001101100000000000111111111111111111111000001000000101100100110010001110000001
X   953:01000001101100000001000111111111111111111111000001000000100010100001010001110000001
X   954:00000001101100000001000001111111111111111111000001000000101010100101010001110000001
X   955:01000001101100000001000000111111111111111111000001000000100110100011010001110000001
X   956:00000001101100000001000000011111111111111111000001000000101110100111010001110000001
X   957:01000001101100000001000000001111111111111111000001000000100001100000110001110000001
X   958:00000001101100000000000110000111111111111111000001000000101001100100110001110000001
X   959:01000001101100000001000111000011111111111111000001000000100101100010110001110000001
X   960:00000001101100000001000001100001111111111111000001000000101101100110110001110000001
X   961:01000001101100000001000000110000111111111111000001000000100011100001110001110000001
X   962:00000001101100000001000000011000011111111111000001000000101011100101110001110000001
X   963:01000001101100000001000000001100001111111111000001000000100111100011110001110000001
X   964:00000001101100000000000110000110000111111111000001000000101111100111110001110000001
X   965:01000001101100000001010111000011000011111111000001000000100000010000001011110000011
X   966:00000001101100000001010111100001100001111111100000010000000000010000001011110000011
X   967:01000001101100000000010111110000110000111111010000001000000000010000001011110000011
X   968:00000001101100000001000111111000011000011111110000011000000000010000001011110000011
X   969:01000001101100000000000111111100001100001111001000000100000000010000001011110000011
X   970:00000001101100000001000111111110000110000111101000010100000000010000001011110000011
X   971:01000001101100000000000111111111000011000011011000001100000000010000001011110000011
X   972:00000001101100000001000111111111100001100001111000011100000000010000001011110000011
X   973:01000001101100000000000111111111110000110000000100000010000000010000001011110000011
X   974:00000001101100000001000111111111111000011000100100010010000000010000001011110000011
X   975:01000001101100000000000111111111111100001100010100001010000000010000001011110000011
X   976:00000001101100000000000001111111111110000110110100011010000000010000001011110000011
X   977:01000001101100000000000000111111111111000011001100000110000000010000001011110000011
X   978:00000001101100000000000000011111111111100001101100010110000000010000001011110000011
X   979:01000001101100000000000000001111111111110000011100001110000000010000001011110000011
X   980:00000001101100000000000000000111111111111000111100011110000000010000001011110000011
X   981:01000001101100000000000000000011111111111100000010000001000000010000001011110000011
X   982:00000001101100000000000000000001111111111110100010010001000000010000001011110000011
X   983:01000001101100000000000000000000111111111111010010001001000000010000001011110000011
X   984:00000001101100000001000110000000011111111111110010011001000000010000001011110000011
X   985:01000001101100000000000111000000001111111111001010000101000000010000001011110000011
X   986:00000001101100000001000111100000000111111111101010010101000000010000001011110000011
X   987:01000001101100000000000111110000000011111111011010001101000000010000001011110000011
X   988:00000001101100000001000111111000000001111111111010011101000000010000001011110000011
X   989:01000001101100000000000111111100000000111111000110000011000000010000001011110000011
X   990:00000001101100000001000111111110000000011111100110010011000000010000001011110000011
X   991:01000001101100000000000111111111000000001111010110001011000000010000001011110000011
X   992:00000001101100000100000001111111100000000111110110011011000000010000001011110000011
X   993:01000001101100000100000000111111110000000011001110000111000000010000001011110000011
X   994:00000001101100000101000110011111111000000001101110010111000000010000001011110000011
X   995:01000001101100000100000111001111111100000000011110001111000000010000001011110000011
X   996:00000001101100000001000111100111111110000000111110011111000000010000001011110000011
X   997:01000001101100000000100111111100111111110000000001000000100100000010000011110000011
X   998:00000001101100010000000001111110011111111000000001000000101100000110000011110000011
X   999:01000001101100010000000000111111001111111100000001000000100010000001000011110000011
END_OF_FILE
if test 92480 -ne `wc -c <'daio_receiver/daio_receiver.out.gold'`; then
    echo shar: \"'daio_receiver/daio_receiver.out.gold'\" unpacked with wrong size!
fi
# end of 'daio_receiver/daio_receiver.out.gold'
fi
echo shar: End of shell archive.
exit 0



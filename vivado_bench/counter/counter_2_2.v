// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="counter,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k70t-fbv676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.684000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=46,HLS_SYN_LUT=564,HLS_VERSION=2020_1}" *)

module counter (
        ap_clk,
        ap_rst,
        seed_V,
        out_V,
        out_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input  [5:0] seed_V;
output  [3:0] out_V;
output   out_V_ap_vld;

reg out_V_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] data_V_fu_138_p1;
wire   [0:0] icmp_ln883_fu_152_p2;
reg   [0:0] icmp_ln883_reg_579;
wire    ap_CS_fsm_state2;
wire   [3:0] trunc_ln320_fu_158_p1;
reg   [3:0] trunc_ln320_reg_583;
wire   [3:0] select_ln879_1_fu_242_p3;
wire   [0:0] icmp_ln883_4_fu_272_p2;
reg   [0:0] icmp_ln883_4_reg_594;
wire   [3:0] select_ln879_4_fu_352_p3;
reg   [3:0] select_ln879_4_reg_598;
wire   [0:0] icmp_ln883_2_fu_382_p2;
reg   [0:0] icmp_ln883_2_reg_608;
wire   [0:0] icmp_ln879_2_fu_388_p2;
reg   [0:0] icmp_ln879_2_reg_612;
wire   [0:0] icmp_ln879_6_fu_394_p2;
reg   [0:0] icmp_ln879_6_reg_618;
wire   [0:0] icmp_ln883_6_fu_400_p2;
reg   [0:0] icmp_ln883_6_reg_623;
wire   [3:0] select_ln879_5_fu_406_p3;
reg   [3:0] select_ln879_5_reg_629;
reg   [1:0] ssdm_int_V_write_ass_2_reg_635;
wire   [3:0] select_ln879_7_fu_464_p3;
wire    ap_CS_fsm_state3;
wire   [5:0] add_ln214_2_fu_475_p2;
wire   [3:0] select_ln879_8_fu_529_p3;
wire   [0:0] icmp_ln883_3_fu_481_p2;
wire   [3:0] select_ln879_10_fu_556_p3;
wire   [3:0] add_ln1503_3_fu_564_p2;
reg   [3:0] data_V_0_0_reg_81;
reg   [5:0] ctrl_V_0_0_in_in_reg_90;
reg   [3:0] data_V_1_reg_100;
reg   [3:0] p_053_0_0_reg_111;
reg   [3:0] p_053_0_lcssa_reg_123;
wire    ap_CS_fsm_state4;
wire   [1:0] ctrl_V_fu_142_p4;
wire   [0:0] icmp_ln883_1_fu_180_p2;
wire   [3:0] add_ln700_fu_186_p2;
wire   [3:0] add_ln701_fu_200_p2;
wire   [0:0] icmp_ln879_fu_168_p2;
wire   [0:0] icmp_ln879_1_fu_174_p2;
wire   [0:0] xor_ln879_fu_222_p2;
wire   [0:0] and_ln879_fu_228_p2;
wire   [3:0] select_ln32_fu_192_p3;
wire   [3:0] select_ln36_fu_206_p3;
wire   [3:0] select_ln879_fu_234_p3;
wire   [5:0] add_ln320_fu_162_p2;
wire   [1:0] ssdm_int_V_write_ass_fu_256_p4;
wire   [3:0] data_V_2_fu_214_p3;
wire   [0:0] icmp_ln883_5_fu_290_p2;
wire   [3:0] add_ln700_1_fu_296_p2;
wire   [3:0] add_ln701_1_fu_310_p2;
wire   [0:0] icmp_ln879_4_fu_278_p2;
wire   [3:0] add_ln1503_fu_250_p2;
wire   [0:0] icmp_ln879_5_fu_284_p2;
wire   [0:0] xor_ln879_1_fu_332_p2;
wire   [0:0] and_ln879_1_fu_338_p2;
wire   [3:0] select_ln32_1_fu_302_p3;
wire   [3:0] select_ln36_1_fu_316_p3;
wire   [3:0] select_ln879_3_fu_344_p3;
wire   [5:0] add_ln214_fu_266_p2;
wire   [1:0] ssdm_int_V_write_ass_1_fu_366_p4;
wire   [3:0] select_ln879_2_fu_324_p3;
wire   [3:0] add_ln1503_1_fu_360_p2;
wire   [5:0] add_ln214_1_fu_376_p2;
wire   [3:0] add_ln700_2_fu_424_p2;
wire   [3:0] add_ln701_2_fu_435_p2;
wire   [0:0] xor_ln879_2_fu_446_p2;
wire   [0:0] and_ln879_2_fu_451_p2;
wire   [3:0] select_ln32_2_fu_429_p3;
wire   [3:0] select_ln36_2_fu_440_p3;
wire   [3:0] select_ln879_6_fu_456_p3;
wire   [0:0] icmp_ln883_7_fu_496_p2;
wire   [3:0] add_ln700_3_fu_501_p2;
wire   [3:0] add_ln701_3_fu_515_p2;
wire   [0:0] icmp_ln879_3_fu_486_p2;
wire   [3:0] add_ln1503_2_fu_470_p2;
wire   [0:0] icmp_ln879_7_fu_491_p2;
wire   [0:0] xor_ln879_3_fu_536_p2;
wire   [0:0] and_ln879_3_fu_542_p2;
wire   [3:0] select_ln32_3_fu_507_p3;
wire   [3:0] select_ln36_3_fu_521_p3;
wire   [3:0] select_ln879_9_fu_548_p3;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_3_fu_481_p2 == 1'd0) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ctrl_V_0_0_in_in_reg_90 <= add_ln214_2_fu_475_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctrl_V_0_0_in_in_reg_90 <= seed_V;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_3_fu_481_p2 == 1'd0) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_0_0_reg_81 <= add_ln1503_3_fu_564_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_0_0_reg_81 <= data_V_fu_138_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_3_fu_481_p2 == 1'd0) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_1_reg_100 <= select_ln879_8_fu_529_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_1_reg_100 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_3_fu_481_p2 == 1'd0) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_053_0_0_reg_111 <= select_ln879_10_fu_556_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_053_0_0_reg_111 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_3_fu_481_p2 == 1'd1) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_053_0_lcssa_reg_123 <= select_ln879_7_fu_464_p3;
    end else if (((icmp_ln883_2_fu_382_p2 == 1'd1) & (icmp_ln883_4_fu_272_p2 == 1'd0) & (icmp_ln883_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_053_0_lcssa_reg_123 <= select_ln879_4_fu_352_p3;
    end else if (((icmp_ln883_4_fu_272_p2 == 1'd1) & (icmp_ln883_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_053_0_lcssa_reg_123 <= select_ln879_1_fu_242_p3;
    end else if (((icmp_ln883_fu_152_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_053_0_lcssa_reg_123 <= p_053_0_0_reg_111;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_2_fu_382_p2 == 1'd0) & (icmp_ln883_4_fu_272_p2 == 1'd0) & (icmp_ln883_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_2_reg_612 <= icmp_ln879_2_fu_388_p2;
        icmp_ln879_6_reg_618 <= icmp_ln879_6_fu_394_p2;
        icmp_ln883_6_reg_623 <= icmp_ln883_6_fu_400_p2;
        select_ln879_5_reg_629 <= select_ln879_5_fu_406_p3;
        ssdm_int_V_write_ass_2_reg_635 <= {{add_ln214_1_fu_376_p2[5:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_4_fu_272_p2 == 1'd0) & (icmp_ln883_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln883_2_reg_608 <= icmp_ln883_2_fu_382_p2;
        select_ln879_4_reg_598 <= select_ln879_4_fu_352_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln883_4_reg_594 <= icmp_ln883_4_fu_272_p2;
        trunc_ln320_reg_583 <= trunc_ln320_fu_158_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln883_reg_579 <= icmp_ln883_fu_152_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_V_ap_vld = 1'b1;
    end else begin
        out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln883_3_fu_481_p2 == 1'd0) & (icmp_ln883_2_reg_608 == 1'd0) & (icmp_ln883_4_reg_594 == 1'd0) & (icmp_ln883_reg_579 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1503_1_fu_360_p2 = (trunc_ln320_fu_158_p1 + 4'd2);

assign add_ln1503_2_fu_470_p2 = (trunc_ln320_reg_583 + 4'd3);

assign add_ln1503_3_fu_564_p2 = (trunc_ln320_reg_583 + 4'd4);

assign add_ln1503_fu_250_p2 = (4'd1 + trunc_ln320_fu_158_p1);

assign add_ln214_1_fu_376_p2 = (ctrl_V_0_0_in_in_reg_90 + 6'd3);

assign add_ln214_2_fu_475_p2 = (ctrl_V_0_0_in_in_reg_90 + 6'd4);

assign add_ln214_fu_266_p2 = (6'd2 + ctrl_V_0_0_in_in_reg_90);

assign add_ln320_fu_162_p2 = (6'd1 + ctrl_V_0_0_in_in_reg_90);

assign add_ln700_1_fu_296_p2 = (select_ln879_1_fu_242_p3 + 4'd1);

assign add_ln700_2_fu_424_p2 = (select_ln879_4_reg_598 + 4'd1);

assign add_ln700_3_fu_501_p2 = (select_ln879_7_fu_464_p3 + 4'd1);

assign add_ln700_fu_186_p2 = (4'd1 + p_053_0_0_reg_111);

assign add_ln701_1_fu_310_p2 = ($signed(select_ln879_1_fu_242_p3) + $signed(4'd15));

assign add_ln701_2_fu_435_p2 = ($signed(select_ln879_4_reg_598) + $signed(4'd15));

assign add_ln701_3_fu_515_p2 = ($signed(select_ln879_7_fu_464_p3) + $signed(4'd15));

assign add_ln701_fu_200_p2 = ($signed(4'd15) + $signed(p_053_0_0_reg_111));

assign and_ln879_1_fu_338_p2 = (xor_ln879_1_fu_332_p2 & icmp_ln879_5_fu_284_p2);

assign and_ln879_2_fu_451_p2 = (xor_ln879_2_fu_446_p2 & icmp_ln879_6_reg_618);

assign and_ln879_3_fu_542_p2 = (xor_ln879_3_fu_536_p2 & icmp_ln879_7_fu_491_p2);

assign and_ln879_fu_228_p2 = (xor_ln879_fu_222_p2 & icmp_ln879_1_fu_174_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ctrl_V_fu_142_p4 = {{ctrl_V_0_0_in_in_reg_90[5:4]}};

assign data_V_2_fu_214_p3 = ((icmp_ln879_fu_168_p2[0:0] === 1'b1) ? data_V_0_0_reg_81 : data_V_1_reg_100);

assign data_V_fu_138_p1 = seed_V[3:0];

assign icmp_ln879_1_fu_174_p2 = ((ctrl_V_fu_142_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_388_p2 = ((ssdm_int_V_write_ass_1_fu_366_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_486_p2 = ((ssdm_int_V_write_ass_2_reg_635 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_278_p2 = ((ssdm_int_V_write_ass_fu_256_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_284_p2 = ((ssdm_int_V_write_ass_fu_256_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_394_p2 = ((ssdm_int_V_write_ass_1_fu_366_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_491_p2 = ((ssdm_int_V_write_ass_2_reg_635 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_168_p2 = ((ctrl_V_fu_142_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln883_1_fu_180_p2 = ((p_053_0_0_reg_111 == data_V_1_reg_100) ? 1'b1 : 1'b0);

assign icmp_ln883_2_fu_382_p2 = ((ssdm_int_V_write_ass_1_fu_366_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_3_fu_481_p2 = ((ssdm_int_V_write_ass_2_reg_635 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_4_fu_272_p2 = ((ssdm_int_V_write_ass_fu_256_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_5_fu_290_p2 = ((select_ln879_1_fu_242_p3 == data_V_2_fu_214_p3) ? 1'b1 : 1'b0);

assign icmp_ln883_6_fu_400_p2 = ((select_ln879_4_fu_352_p3 == select_ln879_2_fu_324_p3) ? 1'b1 : 1'b0);

assign icmp_ln883_7_fu_496_p2 = ((select_ln879_7_fu_464_p3 == select_ln879_5_reg_629) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_152_p2 = ((ctrl_V_fu_142_p4 == 2'd0) ? 1'b1 : 1'b0);

assign out_V = p_053_0_lcssa_reg_123;

assign select_ln32_1_fu_302_p3 = ((icmp_ln883_5_fu_290_p2[0:0] === 1'b1) ? select_ln879_1_fu_242_p3 : add_ln700_1_fu_296_p2);

assign select_ln32_2_fu_429_p3 = ((icmp_ln883_6_reg_623[0:0] === 1'b1) ? select_ln879_4_reg_598 : add_ln700_2_fu_424_p2);

assign select_ln32_3_fu_507_p3 = ((icmp_ln883_7_fu_496_p2[0:0] === 1'b1) ? select_ln879_7_fu_464_p3 : add_ln700_3_fu_501_p2);

assign select_ln32_fu_192_p3 = ((icmp_ln883_1_fu_180_p2[0:0] === 1'b1) ? p_053_0_0_reg_111 : add_ln700_fu_186_p2);

assign select_ln36_1_fu_316_p3 = ((icmp_ln883_5_fu_290_p2[0:0] === 1'b1) ? select_ln879_1_fu_242_p3 : add_ln701_1_fu_310_p2);

assign select_ln36_2_fu_440_p3 = ((icmp_ln883_6_reg_623[0:0] === 1'b1) ? select_ln879_4_reg_598 : add_ln701_2_fu_435_p2);

assign select_ln36_3_fu_521_p3 = ((icmp_ln883_7_fu_496_p2[0:0] === 1'b1) ? select_ln879_7_fu_464_p3 : add_ln701_3_fu_515_p2);

assign select_ln36_fu_206_p3 = ((icmp_ln883_1_fu_180_p2[0:0] === 1'b1) ? p_053_0_0_reg_111 : add_ln701_fu_200_p2);

assign select_ln879_10_fu_556_p3 = ((icmp_ln879_3_fu_486_p2[0:0] === 1'b1) ? select_ln879_7_fu_464_p3 : select_ln879_9_fu_548_p3);

assign select_ln879_1_fu_242_p3 = ((icmp_ln879_fu_168_p2[0:0] === 1'b1) ? p_053_0_0_reg_111 : select_ln879_fu_234_p3);

assign select_ln879_2_fu_324_p3 = ((icmp_ln879_4_fu_278_p2[0:0] === 1'b1) ? add_ln1503_fu_250_p2 : data_V_2_fu_214_p3);

assign select_ln879_3_fu_344_p3 = ((and_ln879_1_fu_338_p2[0:0] === 1'b1) ? select_ln32_1_fu_302_p3 : select_ln36_1_fu_316_p3);

assign select_ln879_4_fu_352_p3 = ((icmp_ln879_4_fu_278_p2[0:0] === 1'b1) ? select_ln879_1_fu_242_p3 : select_ln879_3_fu_344_p3);

assign select_ln879_5_fu_406_p3 = ((icmp_ln879_2_fu_388_p2[0:0] === 1'b1) ? add_ln1503_1_fu_360_p2 : select_ln879_2_fu_324_p3);

assign select_ln879_6_fu_456_p3 = ((and_ln879_2_fu_451_p2[0:0] === 1'b1) ? select_ln32_2_fu_429_p3 : select_ln36_2_fu_440_p3);

assign select_ln879_7_fu_464_p3 = ((icmp_ln879_2_reg_612[0:0] === 1'b1) ? select_ln879_4_reg_598 : select_ln879_6_fu_456_p3);

assign select_ln879_8_fu_529_p3 = ((icmp_ln879_3_fu_486_p2[0:0] === 1'b1) ? add_ln1503_2_fu_470_p2 : select_ln879_5_reg_629);

assign select_ln879_9_fu_548_p3 = ((and_ln879_3_fu_542_p2[0:0] === 1'b1) ? select_ln32_3_fu_507_p3 : select_ln36_3_fu_521_p3);

assign select_ln879_fu_234_p3 = ((and_ln879_fu_228_p2[0:0] === 1'b1) ? select_ln32_fu_192_p3 : select_ln36_fu_206_p3);

assign ssdm_int_V_write_ass_1_fu_366_p4 = {{add_ln214_fu_266_p2[5:4]}};

assign ssdm_int_V_write_ass_fu_256_p4 = {{add_ln320_fu_162_p2[5:4]}};

assign trunc_ln320_fu_158_p1 = ctrl_V_0_0_in_in_reg_90[3:0];

assign xor_ln879_1_fu_332_p2 = (icmp_ln879_4_fu_278_p2 ^ 1'd1);

assign xor_ln879_2_fu_446_p2 = (icmp_ln879_2_reg_612 ^ 1'd1);

assign xor_ln879_3_fu_536_p2 = (icmp_ln879_3_fu_486_p2 ^ 1'd1);

assign xor_ln879_fu_222_p2 = (icmp_ln879_fu_168_p2 ^ 1'd1);

endmodule //counter

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ellipf_seq,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k70t-fbv676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.920000,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=88,HLS_SYN_LUT=535,HLS_VERSION=2020_1}" *)

module ellipf_seq (
        ap_clk,
        ap_rst,
        in_ports_V,
        out_ports_V,
        out_ports_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input  [31:0] in_ports_V;
output  [31:0] out_ports_V;
output   out_ports_V_ap_vld;

reg out_ports_V_ap_vld;

wire   [3:0] grp_fu_115_p2;
reg   [31:0] reg_87;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [3:0] grp_fu_110_p2;
reg   [2:0] i_V_reg_224;
wire    ap_CS_fsm_state2;
wire   [3:0] grp_fu_113_p2;
reg   [3:0] reg_229;
wire   [0:0] icmp_ln887_fu_817_p2;
wire   [3:0] grp_fu_111_p2;
reg   [3:0] n3_V_reg_277;
wire   [3:0] grp_fu_112_p2;
reg   [3:0] n8_V_reg_354;
wire   [3:0] grp_fu_114_p2;
reg   [3:0] n9_V_reg_357;
wire   [3:0] grp_fu_108_p2;
reg   [3:0] n15_V_reg_561;
wire   [3:0] grp_fu_118_p2;
reg   [3:0] n16_V_reg_564;
wire    ap_CS_fsm_state1;
wire   [3:0] inp_V_fu_823_p1;
reg   [3:0] inp_V_reg_944;
reg   [3:0] sv26_V_reg_949;
reg   [3:0] sv33_V_reg_954;
reg   [3:0] sv39_V_reg_959;
reg   [2:0] tmp_reg_966;
reg   [2:0] tmp_1_reg_971;
wire   [31:0] ret_V_fu_916_p9;
wire    ap_CS_fsm_state4;
reg   [2:0] p_0305_0_reg_97;
reg   [3:0] grp_fu_108_p0;
wire   [3:0] grp_fu_116_p2;
reg   [3:0] grp_fu_108_p1;
wire   [3:0] add_ln209_4_fu_117_p2;
reg   [3:0] grp_fu_109_p0;
reg   [3:0] grp_fu_109_p1;
reg   [3:0] grp_fu_110_p0;
reg   [3:0] grp_fu_110_p1;
reg   [3:0] grp_fu_111_p0;
reg   [3:0] grp_fu_111_p1;
wire   [3:0] factor_fu_900_p3;
reg   [3:0] grp_fu_112_p0;
wire   [3:0] factor1_fu_908_p3;
reg   [3:0] grp_fu_112_p1;
reg   [3:0] grp_fu_113_p0;
reg   [3:0] grp_fu_113_p1;
reg   [3:0] grp_fu_114_p0;
reg   [3:0] grp_fu_114_p1;
reg   [3:0] grp_fu_115_p0;
wire   [3:0] grp_fu_109_p2;
reg   [3:0] grp_fu_116_p0;
reg   [3:0] grp_fu_116_p1;
reg   [3:0] grp_fu_118_p0;
wire   [3:0] grp_fu_119_p2;
reg   [3:0] grp_fu_119_p0;
reg   [3:0] grp_fu_119_p1;
wire   [3:0] sv13_o_V_fu_802_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_0305_0_reg_97 <= i_V_reg_224;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_0305_0_reg_97 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_87 <= ret_V_fu_916_p9;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        reg_87 <= in_ports_V;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_87 <= grp_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_224 <= grp_fu_110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        inp_V_reg_944 <= inp_V_fu_823_p1;
        n3_V_reg_277 <= grp_fu_111_p2;
        sv26_V_reg_949 <= {{reg_87[19:16]}};
        sv33_V_reg_954 <= {{reg_87[23:20]}};
        sv39_V_reg_959 <= {{reg_87[31:28]}};
        tmp_1_reg_971 <= {{reg_87[26:24]}};
        tmp_reg_966 <= {{reg_87[14:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n15_V_reg_561 <= grp_fu_108_p2;
        n16_V_reg_564 <= grp_fu_118_p2;
        n8_V_reg_354 <= grp_fu_112_p2;
        n9_V_reg_357 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln887_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_229 <= grp_fu_113_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_108_p0 = grp_fu_116_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_108_p0 = n3_V_reg_277;
    end else begin
        grp_fu_108_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_108_p1 = grp_fu_112_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_108_p1 = add_ln209_4_fu_117_p2;
    end else begin
        grp_fu_108_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_109_p0 = n9_V_reg_357;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_109_p0 = n3_V_reg_277;
    end else begin
        grp_fu_109_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_109_p1 = reg_87;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_109_p1 = sv26_V_reg_949;
    end else begin
        grp_fu_109_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_110_p0 = n15_V_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_110_p0 = p_0305_0_reg_97;
    end else begin
        grp_fu_110_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_110_p1 = grp_fu_113_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_110_p1 = 3'd1;
    end else begin
        grp_fu_110_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_111_p0 = n15_V_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_111_p0 = {{reg_87[11:8]}};
    end else begin
        grp_fu_111_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_111_p1 = factor_fu_900_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_111_p1 = grp_fu_113_p2;
    end else begin
        grp_fu_111_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_112_p0 = factor1_fu_908_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_112_p0 = n3_V_reg_277;
    end else begin
        grp_fu_112_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_112_p1 = grp_fu_116_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_112_p1 = grp_fu_115_p2;
    end else begin
        grp_fu_112_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_113_p0 = reg_229;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_113_p0 = inp_V_fu_823_p1;
    end else begin
        grp_fu_113_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_113_p1 = inp_V_reg_944;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_113_p1 = grp_fu_108_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_113_p1 = {{reg_87[7:4]}};
    end else begin
        grp_fu_113_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_p0 = n8_V_reg_354;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_114_p0 = grp_fu_116_p2;
    end else begin
        grp_fu_114_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_p1 = grp_fu_111_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_114_p1 = grp_fu_115_p2;
    end else begin
        grp_fu_114_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_115_p0 = n8_V_reg_354;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_115_p0 = grp_fu_116_p2;
    end else begin
        grp_fu_115_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_116_p0 = n9_V_reg_357;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_116_p0 = sv33_V_reg_954;
    end else begin
        grp_fu_116_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_116_p1 = n16_V_reg_564;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_116_p1 = sv39_V_reg_959;
    end else begin
        grp_fu_116_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_118_p0 = n16_V_reg_564;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_118_p0 = grp_fu_116_p2;
    end else begin
        grp_fu_118_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p0 = sv39_V_reg_959;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_119_p0 = grp_fu_114_p2;
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p1 = n16_V_reg_564;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_119_p1 = sv39_V_reg_959;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_ports_V_ap_vld = 1'b1;
    end else begin
        out_ports_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln887_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln209_4_fu_117_p2 = (grp_fu_112_p2 + reg_229);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign factor1_fu_908_p3 = {{tmp_1_reg_971}, {1'd0}};

assign factor_fu_900_p3 = {{tmp_reg_966}, {1'd0}};

assign grp_fu_108_p2 = (grp_fu_108_p0 + grp_fu_108_p1);

assign grp_fu_109_p2 = (grp_fu_109_p0 + grp_fu_109_p1);

assign grp_fu_110_p2 = (grp_fu_110_p0 + grp_fu_110_p1);

assign grp_fu_111_p2 = (grp_fu_111_p0 + grp_fu_111_p1);

assign grp_fu_112_p2 = (grp_fu_112_p0 + grp_fu_112_p1);

assign grp_fu_113_p2 = (grp_fu_113_p0 + grp_fu_113_p1);

assign grp_fu_114_p2 = (grp_fu_114_p0 + grp_fu_114_p1);

assign grp_fu_115_p2 = (grp_fu_115_p0 + grp_fu_109_p2);

assign grp_fu_116_p2 = (grp_fu_116_p0 + grp_fu_116_p1);

assign grp_fu_118_p2 = (grp_fu_118_p0 + grp_fu_119_p2);

assign grp_fu_119_p2 = (grp_fu_119_p0 + grp_fu_119_p1);

assign icmp_ln887_fu_817_p2 = ((p_0305_0_reg_97 == 3'd4) ? 1'b1 : 1'b0);

assign inp_V_fu_823_p1 = reg_87[3:0];

assign out_ports_V = reg_87;

assign ret_V_fu_916_p9 = {{{{{{{{grp_fu_118_p2}, {grp_fu_112_p2}}, {grp_fu_108_p2}}, {grp_fu_115_p2}}, {grp_fu_114_p2}}, {sv13_o_V_fu_802_p2}}, {grp_fu_110_p2}}, {grp_fu_119_p2}};

assign sv13_o_V_fu_802_p2 = (reg_229 + grp_fu_114_p2);

endmodule //ellipf_seq

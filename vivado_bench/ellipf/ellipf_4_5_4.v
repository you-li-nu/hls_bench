// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ellipf,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k70t-fbv676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.600000,HLS_SYN_LAT=4,HLS_SYN_TPT=4,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=55,HLS_SYN_LUT=414,HLS_VERSION=2020_1}" *)

module ellipf (
        ap_clk,
        ap_rst,
        in_ports_V,
        out_ports_V,
        out_ports_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input  [31:0] in_ports_V;
output  [31:0] out_ports_V;
output   out_ports_V_ap_vld;

reg out_ports_V_ap_vld;

wire   [3:0] grp_fu_90_p2;
reg   [3:0] reg_135;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [3:0] grp_fu_87_p2;
reg   [3:0] reg_139;
wire   [3:0] grp_fu_89_p2;
reg   [3:0] reg_163;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [3:0] grp_fu_88_p2;
wire   [3:0] grp_fu_91_p2;
reg   [3:0] reg_183;
wire   [3:0] grp_fu_92_p2;
reg   [3:0] n8_V_reg_213;
reg   [3:0] n15_V_reg_249;
reg   [3:0] n16_V_reg_283;
reg   [3:0] n29_V_reg_340;
reg   [3:0] n28_V_reg_350;
wire   [3:0] inp_V_fu_431_p1;
reg   [3:0] inp_V_reg_548;
reg   [3:0] sv39_V_reg_553;
reg   [2:0] tmp_reg_559;
reg   [2:0] tmp_1_reg_564;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_01001;
wire    ap_block_pp0_stage3_11001;
reg   [3:0] grp_fu_87_p0;
reg   [3:0] grp_fu_87_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
reg   [3:0] grp_fu_88_p0;
reg   [3:0] grp_fu_88_p1;
reg   [3:0] grp_fu_89_p0;
reg   [3:0] grp_fu_89_p1;
wire   [3:0] factor_fu_511_p3;
reg   [3:0] grp_fu_90_p0;
reg   [3:0] grp_fu_90_p1;
reg   [3:0] grp_fu_91_p0;
wire   [3:0] factor1_fu_519_p3;
reg   [3:0] grp_fu_91_p1;
reg   [3:0] grp_fu_92_p0;
reg   [3:0] grp_fu_92_p1;
reg   [3:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_163 <= grp_fu_88_p2;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_163 <= grp_fu_90_p2;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reg_163 <= grp_fu_89_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_V_reg_548 <= inp_V_fu_431_p1;
        sv39_V_reg_553 <= {{in_ports_V[31:28]}};
        tmp_1_reg_564 <= {{in_ports_V[26:24]}};
        tmp_reg_559 <= {{in_ports_V[14:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1))) begin
        n15_V_reg_249 <= grp_fu_88_p2;
        n16_V_reg_283 <= grp_fu_92_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1))) begin
        n28_V_reg_350 <= grp_fu_92_p2;
        n29_V_reg_340 <= grp_fu_91_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n8_V_reg_213 <= grp_fu_92_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_135 <= grp_fu_90_p2;
        reg_139 <= grp_fu_87_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_183 <= grp_fu_91_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_87_p0 = n15_V_reg_249;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_87_p0 = sv39_V_reg_553;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_87_p0 = n8_V_reg_213;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_87_p0 = {{in_ports_V[23:20]}};
        end else begin
            grp_fu_87_p0 = 'bx;
        end
    end else begin
        grp_fu_87_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_87_p1 = grp_fu_89_p2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_87_p1 = n16_V_reg_283;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_87_p1 = reg_135;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_87_p1 = {{in_ports_V[31:28]}};
        end else begin
            grp_fu_87_p1 = 'bx;
        end
    end else begin
        grp_fu_87_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_88_p0 = reg_163;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_88_p0 = grp_fu_89_p2;
    end else begin
        grp_fu_88_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_88_p1 = n29_V_reg_340;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_88_p1 = n16_V_reg_283;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_88_p1 = grp_fu_87_p2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_88_p1 = {{in_ports_V[19:16]}};
        end else begin
            grp_fu_88_p1 = 'bx;
        end
    end else begin
        grp_fu_88_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_89_p0 = reg_135;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_89_p0 = n15_V_reg_249;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_89_p0 = grp_fu_90_p2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_89_p0 = {{in_ports_V[11:8]}};
        end else begin
            grp_fu_89_p0 = 'bx;
        end
    end else begin
        grp_fu_89_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_89_p1 = inp_V_reg_548;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_89_p1 = factor_fu_511_p3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_89_p1 = sv39_V_reg_553;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_89_p1 = grp_fu_90_p2;
        end else begin
            grp_fu_89_p1 = 'bx;
        end
    end else begin
        grp_fu_89_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_90_p0 = reg_135;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_90_p0 = reg_139;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_90_p0 = inp_V_fu_431_p1;
    end else begin
        grp_fu_90_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_90_p1 = n28_V_reg_350;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_90_p1 = n15_V_reg_249;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_90_p1 = reg_183;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_90_p1 = {{in_ports_V[7:4]}};
        end else begin
            grp_fu_90_p1 = 'bx;
        end
    end else begin
        grp_fu_90_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_91_p0 = n16_V_reg_283;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_91_p0 = factor1_fu_519_p3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_91_p0 = grp_fu_90_p2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_91_p0 = grp_fu_87_p2;
        end else begin
            grp_fu_91_p0 = 'bx;
        end
    end else begin
        grp_fu_91_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_91_p1 = reg_139;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_91_p1 = reg_183;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_91_p1 = grp_fu_88_p2;
    end else begin
        grp_fu_91_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_92_p0 = n8_V_reg_213;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_92_p0 = reg_139;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_92_p0 = grp_fu_89_p2;
    end else begin
        grp_fu_92_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_92_p1 = reg_183;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_92_p1 = grp_fu_89_p2;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_92_p1 = grp_fu_91_p2;
    end else begin
        grp_fu_92_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        out_ports_V_ap_vld = 1'b1;
    end else begin
        out_ports_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign factor1_fu_519_p3 = {{tmp_1_reg_564}, {1'd0}};

assign factor_fu_511_p3 = {{tmp_reg_559}, {1'd0}};

assign grp_fu_87_p2 = (grp_fu_87_p0 + grp_fu_87_p1);

assign grp_fu_88_p2 = (grp_fu_88_p0 + grp_fu_88_p1);

assign grp_fu_89_p2 = (grp_fu_89_p0 + grp_fu_89_p1);

assign grp_fu_90_p2 = (grp_fu_90_p0 + grp_fu_90_p1);

assign grp_fu_91_p2 = (grp_fu_91_p0 + grp_fu_91_p1);

assign grp_fu_92_p2 = (grp_fu_92_p0 + grp_fu_92_p1);

assign inp_V_fu_431_p1 = in_ports_V[3:0];

assign out_ports_V = {{{{{{{{grp_fu_91_p2}, {n29_V_reg_340}}, {grp_fu_88_p2}}, {grp_fu_92_p2}}, {n28_V_reg_350}}, {grp_fu_90_p2}}, {grp_fu_87_p2}}, {reg_139}};

endmodule //ellipf
